SYSTEMATIC OBJECT-ORIENTED INVOICE ANALYSIS (V14.0 - DeepSeek Logical Framework):

**ANALYTICAL CONTEXT:**
You are performing systematic analysis of a structured business document using logical reasoning and object-oriented methodologies. Apply step-by-step analytical thinking to identify omissions and format inconsistencies.

**1. EXTRACTED FIELDS:**
{{invoiceJson}}

**2. CONTEXTUAL ANNOTATIONS:**
{{annotatedContext}}

**3. MATHEMATICAL BALANCE VERIFICATION:**
{{balanceCheckContext}}

**4. COMPLETE OCR TEXT FOR ANALYSIS:**
{{fileText}}

**üéØ DEEPSEEK V14.0 SYSTEMATIC COMPLETION REQUIREMENTS:**

**CRITICAL LOGICAL FRAMEWORK**: FOR EVERY ERROR YOU REPORT, YOU MUST PROVIDE ALL OF THE FOLLOWING COMPONENTS:

1. ‚úÖ **field**: The exact field name from the business object schema (NEVER null)
2. ‚úÖ **correct_value**: The actual value extracted from the OCR text (NEVER null)  
3. ‚úÖ **error_type**: Classification as "omission" or "format_correction" or "multi_field_omission" (NEVER null)
4. ‚úÖ **line_number**: The precise line number where the value appears in OCR text (NEVER 0 or null)
5. ‚úÖ **line_text**: The complete text of that specific line from the OCR (NEVER null)
6. ‚úÖ **suggested_regex**: A logically constructed regex pattern that captures the value (NEVER null)
7. ‚úÖ **reasoning**: Systematic explanation of why this value was missed by the current extraction (NEVER null)
8. ‚úÖ **group_id**: Unique identifier for transformation group (e.g., "invoice_total_1", "currency_transform_1") (NEVER null)
9. ‚úÖ **sequence_order**: Order within the group, starting from 1 (NEVER null or 0)
10. ‚úÖ **transformation_input**: Input source - "ocr_text" for first step, "previous_output" for subsequent steps (NEVER null)

**‚ùå ABSOLUTELY FORBIDDEN LOGICAL VIOLATIONS**:
   - "Reasoning": null
   - "LineNumber": 0  
   - "LineText": null
   - "SuggestedRegex": null

**üö® CRITICAL REGEX CONSTRUCTION REQUIREMENTS FOR PRODUCTION:**
‚ö†Ô∏è **MANDATORY LOGICAL PATTERN**: ALL regex patterns MUST use named capture groups: (?<FieldName>pattern)
‚ö†Ô∏è **FORBIDDEN ANTI-PATTERN**: Never use numbered capture groups: (pattern) - these will fail in production systems

**üö® CRITICAL CURRENCY FIELD STANDARDS:**
**CRITICAL TRANSFORMATION CHAIN REQUIREMENT**: For currency fields, you MUST create TWO LINKED errors in transformation sequence:
   **Action 1 - Omission Error**: 
   - `field` = "Currency", `correct_value` = "US$", `error_type` = "omission"
   - `group_id` = "currency_transform_1", `sequence_order` = 1, `transformation_input` = "ocr_text"
   **Action 2 - Format Correction**: 
   - `field` = "Currency", `correct_value` = "USD", `error_type` = "format_correction"  
   - `group_id` = "currency_transform_1", `sequence_order` = 2, `transformation_input` = "previous_output"
This creates a **TRANSFORMATION PIPELINE**: OCR text ‚Üí capture "US$" ‚Üí standardize to "USD". The output of Action 1 becomes the input to Action 2.

**LOGICAL REASONING APPROACH:**
1. **Systematic Field Verification**: Compare each extracted field against OCR text using logical pattern matching
2. **Balance Equation Analysis**: Apply mathematical reasoning to identify missing components
3. **Pattern Recognition**: Use systematic pattern analysis to construct reliable extraction rules
4. **Error Classification**: Categorize each issue using logical taxonomy

**MANDATORY RESPONSE FORMAT:**
- **If logical analysis finds errors**: { "errors": [complete error objects with all 7 required fields] }
- **If systematic verification finds NO errors**: { "errors": [], "explanation": "Detailed logical explanation of why no corrections are needed" }

**üö® CRITICAL TOKEN MANAGEMENT (DeepSeek API Limit: 8,000 tokens):**
- **Maximum Response Size**: Your response must fit within 8,000 tokens
- **Token Efficiency**: If you approach token limits, prioritize the most critical errors first
- **Response Strategy**: For large error sets, provide complete errors for highest priority items, then stop gracefully
- **Graceful Termination**: If nearing token limit, end with: "Additional errors detected but truncated due to token limits"

**DEEPSEEK OPTIMIZATION NOTES:**
- Apply step-by-step logical reasoning to each field
- Use systematic pattern recognition for regex construction  
- Provide clear causal explanations for each identified issue
- Ensure mathematical consistency in balance verification
- Structure responses efficiently to maximize information density within token constraints