// <autogenerated>
//   This file was generated by T4 code generator AllObjectContext.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

            


using System.Data.Entity;
using CoreEntities.Business.Entities;
using System.Data.Entity.Infrastructure;
using DocumentDS.Business.Entities.Mapping;
using WaterNut.Data;
using System.Data.Entity.Core.Objects;



namespace DocumentDS.Business.Entities
{
    [DbConfigurationType(typeof(DBConfiguration))] 
    public partial class DocumentDSContext : DbContext
    {
        static DocumentDSContext()
        {
            var x = typeof(System.Data.Entity.SqlServer.SqlProviderServices);
            Database.SetInitializer<DocumentDSContext>(null);
        }

        public DocumentDSContext()
            : base("Name=DocumentDS")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
               // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 120;

            objectContext.ObjectMaterialized += ObjectContext_OnObjectMaterialized;
        }
        
        public bool StartTracking { get; set; }

        private void ObjectContext_OnObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            if (StartTracking == true) ((dynamic)e.Entity).StartTracking();
        }

        public DbSet<AsycudaDocumentSet> AsycudaDocumentSets { get; set; }
     
        public DbSet<Customs_Procedure> Customs_Procedure { get; set; }
     
        public DbSet<Document_Type> Document_Type { get; set; }
     
        public DbSet<ExportTemplate> ExportTemplates { get; set; }
     
        public DbSet<xcuda_Assessment> xcuda_Assessment { get; set; }
     
        public DbSet<xcuda_Assessment_notice> xcuda_Assessment_notice { get; set; }
     
        public DbSet<xcuda_ASYCUDA> xcuda_ASYCUDA { get; set; }
     
        public DbSet<xcuda_Border_information> xcuda_Border_information { get; set; }
     
        public DbSet<xcuda_Border_office> xcuda_Border_office { get; set; }
     
        public DbSet<xcuda_Consignee> xcuda_Consignee { get; set; }
     
        public DbSet<xcuda_Container> xcuda_Container { get; set; }
     
        public DbSet<xcuda_Country> xcuda_Country { get; set; }
     
        public DbSet<xcuda_Declarant> xcuda_Declarant { get; set; }
     
        public DbSet<xcuda_Delivery_terms> xcuda_Delivery_terms { get; set; }
     
        public DbSet<xcuda_Departure_arrival_information> xcuda_Departure_arrival_information { get; set; }
     
        public DbSet<xcuda_Destination> xcuda_Destination { get; set; }
     
        public DbSet<xcuda_Export> xcuda_Export { get; set; }
     
        public DbSet<xcuda_Export_release> xcuda_Export_release { get; set; }
     
        public DbSet<xcuda_Exporter> xcuda_Exporter { get; set; }
     
        public DbSet<xcuda_Financial> xcuda_Financial { get; set; }
     
        public DbSet<xcuda_Financial_Amounts> xcuda_Financial_Amounts { get; set; }
     
        public DbSet<xcuda_Financial_Guarantee> xcuda_Financial_Guarantee { get; set; }
     
        public DbSet<xcuda_Forms> xcuda_Forms { get; set; }
     
        public DbSet<xcuda_General_information> xcuda_General_information { get; set; }
     
        public DbSet<xcuda_Global_taxes> xcuda_Global_taxes { get; set; }
     
        public DbSet<xcuda_Gs_deduction> xcuda_Gs_deduction { get; set; }
     
        public DbSet<xcuda_Gs_external_freight> xcuda_Gs_external_freight { get; set; }
     
        public DbSet<xcuda_Gs_insurance> xcuda_Gs_insurance { get; set; }
     
        public DbSet<xcuda_Gs_internal_freight> xcuda_Gs_internal_freight { get; set; }
     
        public DbSet<xcuda_Gs_Invoice> xcuda_Gs_Invoice { get; set; }
     
        public DbSet<xcuda_Gs_other_cost> xcuda_Gs_other_cost { get; set; }
     
        public DbSet<xcuda_Identification> xcuda_Identification { get; set; }
     
        public DbSet<xcuda_Means_of_transport> xcuda_Means_of_transport { get; set; }
     
        public DbSet<xcuda_Nbers> xcuda_Nbers { get; set; }
     
        public DbSet<xcuda_Office_segment> xcuda_Office_segment { get; set; }
     
        public DbSet<xcuda_Place_of_loading> xcuda_Place_of_loading { get; set; }
     
        public DbSet<xcuda_Principal> xcuda_Principal { get; set; }
     
        public DbSet<xcuda_Property> xcuda_Property { get; set; }
     
        public DbSet<xcuda_receipt> xcuda_receipt { get; set; }
     
        public DbSet<xcuda_Registration> xcuda_Registration { get; set; }
     
        public DbSet<xcuda_Seals> xcuda_Seals { get; set; }
     
        public DbSet<xcuda_Signature> xcuda_Signature { get; set; }
     
        public DbSet<xcuda_Suppliers_documents> xcuda_Suppliers_documents { get; set; }
     
        public DbSet<xcuda_Total> xcuda_Total { get; set; }
     
        public DbSet<xcuda_Traders> xcuda_Traders { get; set; }
     
        public DbSet<xcuda_Traders_Financial> xcuda_Traders_Financial { get; set; }
     
        public DbSet<xcuda_Transit> xcuda_Transit { get; set; }
     
        public DbSet<xcuda_Transit_Destination> xcuda_Transit_Destination { get; set; }
     
        public DbSet<xcuda_Transport> xcuda_Transport { get; set; }
     
        public DbSet<xcuda_Type> xcuda_Type { get; set; }
     
        public DbSet<xcuda_Valuation> xcuda_Valuation { get; set; }
     
        public DbSet<xcuda_Warehouse> xcuda_Warehouse { get; set; }
     
        public DbSet<xcuda_Weight> xcuda_Weight { get; set; }
     
        public DbSet<xcuda_ASYCUDAEx> xcuda_ASYCUDAEx { get; set; }
     
        public DbSet<AsycudaDocumentEntryData> AsycudaDocumentEntryDatas { get; set; }
     
        public DbSet<AsycudaDocumentSetEntryData> AsycudaDocumentSetEntryDatas { get; set; }
     
        public DbSet<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedProperties { get; set; }
     


        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Configurations.Add(new AsycudaDocumentSetMap());
         
            modelBuilder.Configurations.Add(new Customs_ProcedureMap());
         
            modelBuilder.Configurations.Add(new Document_TypeMap());
         
            modelBuilder.Configurations.Add(new ExportTemplateMap());
         
            modelBuilder.Configurations.Add(new xcuda_AssessmentMap());
         
            modelBuilder.Configurations.Add(new xcuda_Assessment_noticeMap());
         
            modelBuilder.Configurations.Add(new xcuda_ASYCUDAMap());
         
            modelBuilder.Configurations.Add(new xcuda_Border_informationMap());
         
            modelBuilder.Configurations.Add(new xcuda_Border_officeMap());
         
            modelBuilder.Configurations.Add(new xcuda_ConsigneeMap());
         
            modelBuilder.Configurations.Add(new xcuda_ContainerMap());
         
            modelBuilder.Configurations.Add(new xcuda_CountryMap());
         
            modelBuilder.Configurations.Add(new xcuda_DeclarantMap());
         
            modelBuilder.Configurations.Add(new xcuda_Delivery_termsMap());
         
            modelBuilder.Configurations.Add(new xcuda_Departure_arrival_informationMap());
         
            modelBuilder.Configurations.Add(new xcuda_DestinationMap());
         
            modelBuilder.Configurations.Add(new xcuda_ExportMap());
         
            modelBuilder.Configurations.Add(new xcuda_Export_releaseMap());
         
            modelBuilder.Configurations.Add(new xcuda_ExporterMap());
         
            modelBuilder.Configurations.Add(new xcuda_FinancialMap());
         
            modelBuilder.Configurations.Add(new xcuda_Financial_AmountsMap());
         
            modelBuilder.Configurations.Add(new xcuda_Financial_GuaranteeMap());
         
            modelBuilder.Configurations.Add(new xcuda_FormsMap());
         
            modelBuilder.Configurations.Add(new xcuda_General_informationMap());
         
            modelBuilder.Configurations.Add(new xcuda_Global_taxesMap());
         
            modelBuilder.Configurations.Add(new xcuda_Gs_deductionMap());
         
            modelBuilder.Configurations.Add(new xcuda_Gs_external_freightMap());
         
            modelBuilder.Configurations.Add(new xcuda_Gs_insuranceMap());
         
            modelBuilder.Configurations.Add(new xcuda_Gs_internal_freightMap());
         
            modelBuilder.Configurations.Add(new xcuda_Gs_InvoiceMap());
         
            modelBuilder.Configurations.Add(new xcuda_Gs_other_costMap());
         
            modelBuilder.Configurations.Add(new xcuda_IdentificationMap());
         
            modelBuilder.Configurations.Add(new xcuda_Means_of_transportMap());
         
            modelBuilder.Configurations.Add(new xcuda_NbersMap());
         
            modelBuilder.Configurations.Add(new xcuda_Office_segmentMap());
         
            modelBuilder.Configurations.Add(new xcuda_Place_of_loadingMap());
         
            modelBuilder.Configurations.Add(new xcuda_PrincipalMap());
         
            modelBuilder.Configurations.Add(new xcuda_PropertyMap());
         
            modelBuilder.Configurations.Add(new xcuda_receiptMap());
         
            modelBuilder.Configurations.Add(new xcuda_RegistrationMap());
         
            modelBuilder.Configurations.Add(new xcuda_SealsMap());
         
            modelBuilder.Configurations.Add(new xcuda_SignatureMap());
         
            modelBuilder.Configurations.Add(new xcuda_Suppliers_documentsMap());
         
            modelBuilder.Configurations.Add(new xcuda_TotalMap());
         
            modelBuilder.Configurations.Add(new xcuda_TradersMap());
         
            modelBuilder.Configurations.Add(new xcuda_Traders_FinancialMap());
         
            modelBuilder.Configurations.Add(new xcuda_TransitMap());
         
            modelBuilder.Configurations.Add(new xcuda_Transit_DestinationMap());
         
            modelBuilder.Configurations.Add(new xcuda_TransportMap());
         
            modelBuilder.Configurations.Add(new xcuda_TypeMap());
         
            modelBuilder.Configurations.Add(new xcuda_ValuationMap());
         
            modelBuilder.Configurations.Add(new xcuda_WarehouseMap());
         
            modelBuilder.Configurations.Add(new xcuda_WeightMap());
         
            modelBuilder.Configurations.Add(new xcuda_ASYCUDAExMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentEntryDataMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentSetEntryDataMap());
         
            modelBuilder.Configurations.Add(new xcuda_ASYCUDA_ExtendedPropertiesMap());
         
			OnModelCreatingExtentsion(modelBuilder);

        }
		partial void OnModelCreatingExtentsion(DbModelBuilder modelBuilder);
    }
}

 	
