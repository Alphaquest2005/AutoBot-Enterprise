// <autogenerated>
//   This file was generated by T4 code generator AllObjectContext.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

            


using System.Data.Entity;
using CoreEntities.Business.Entities;
using System.Data.Entity.Infrastructure;
using SalesDataQS.Business.Entities.Mapping;
using WaterNut.Data;
using System.Data.Entity.Core.Objects;



namespace SalesDataQS.Business.Entities
{
    [DbConfigurationType(typeof(DBConfiguration))] 
    public partial class SalesDataQSContext : DbContext
    {
        static SalesDataQSContext()
        {
            var x = typeof(System.Data.Entity.SqlServer.SqlProviderServices);
            Database.SetInitializer<SalesDataQSContext>(null);
        }

        public SalesDataQSContext()
            : base("Name=SalesDataQS")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
               // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 120;

            objectContext.ObjectMaterialized += ObjectContext_OnObjectMaterialized;
        }
        
        public bool StartTracking { get; set; }

        private void ObjectContext_OnObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            if (StartTracking == true) ((dynamic)e.Entity).StartTracking();
        }

        public DbSet<SalesDataDetail> SalesDataDetails { get; set; }
     
        public DbSet<AsycudaDocumentEntryData> AsycudaDocumentEntryData { get; set; }
     
        public DbSet<AsycudaDocumentSetEntryData> AsycudaDocumentSetEntryData { get; set; }
     
        public DbSet<SalesDataAllocations> SalesDataAllocations { get; set; }
     
        public DbSet<AsycudaDocumentSetEntryDataDetails> AsycudaDocumentSetEntryDataDetails { get; set; }
     
        public DbSet<SalesData> SalesDatas { get; set; }
     


        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Configurations.Add(new SalesDataDetailMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentEntryDataMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentSetEntryDataMap());
         
            modelBuilder.Configurations.Add(new SalesDataAllocationsMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentSetEntryDataDetailsMap());
         
            modelBuilder.Configurations.Add(new SalesDataMap());
         
			OnModelCreatingExtentsion(modelBuilder);

        }
		partial void OnModelCreatingExtentsion(DbModelBuilder modelBuilder);
    }
}

 	
