// <autogenerated>
//   This file was generated by T4 code generator AllObjectContext.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

            


using System.Data.Entity;
using CoreEntities.Business.Entities;
using System.Data.Entity.Infrastructure;
using AdjustmentQS.Business.Entities.Mapping;
using WaterNut.Data;
using System.Data.Entity.Core.Objects;



namespace AdjustmentQS.Business.Entities
{
    [DbConfigurationType(typeof(DBConfiguration))] 
    public partial class AdjustmentQSContext : DbContext
    {
        static AdjustmentQSContext()
        {
            var x = typeof(System.Data.Entity.SqlServer.SqlProviderServices);
            Database.SetInitializer<AdjustmentQSContext>(null);
        }

        public AdjustmentQSContext()
            : base("Name=AdjustmentQS")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
               // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 120;

            objectContext.ObjectMaterialized += ObjectContext_OnObjectMaterialized;
        }
        
        public bool StartTracking { get; set; }

        private void ObjectContext_OnObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            if (StartTracking == true) ((dynamic)e.Entity).StartTracking();
        }

        public DbSet<AsycudaSalesAllocation> AsycudaSalesAllocations { get; set; }
     
        public DbSet<AsycudaDocumentEntryData> AsycudaDocumentEntryDatas { get; set; }
     
        public DbSet<AsycudaDocumentSetEntryData> AsycudaDocumentSetEntryDatas { get; set; }
     
        public DbSet<AdjustmentEx> AdjustmentExes { get; set; }
     
        public DbSet<AdjustmentOver> AdjustmentOvers { get; set; }
     
        public DbSet<AdjustmentShort> AdjustmentShorts { get; set; }
     
        public DbSet<EntryDataDetail> EntryDataDetails { get; set; }
     
        public DbSet<ShortAllocation> ShortAllocations { get; set; }
     
        public DbSet<xcuda_Item> xcuda_Item { get; set; }
     
        public DbSet<AdjustmentDetail> AdjustmentDetails { get; set; }
     
        public DbSet<AsycudaDocumentItemEntryDataDetail> AsycudaDocumentItemEntryDataDetails { get; set; }
     
        public DbSet<AsycudaDocumentItemLastItemCost> AsycudaDocumentItemLastItemCosts { get; set; }
     
        public DbSet<InventoryItemAliasEx> InventoryItemAliasExes { get; set; }
     
        public DbSet<InventoryItemsEx> InventoryItemsExes { get; set; }
     
        public DbSet<AdjustmentOversAllocation> AdjustmentOversAllocations { get; set; }
     
        public DbSet<SystemDocumentSet> SystemDocumentSets { get; set; }
     
        public DbSet<TODO_PreDiscrepancyErrors> TODO_PreDiscrepancyErrors { get; set; }
     


        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Configurations.Add(new AsycudaSalesAllocationMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentEntryDataMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentSetEntryDataMap());
         
            modelBuilder.Configurations.Add(new AdjustmentExMap());
         
            modelBuilder.Configurations.Add(new AdjustmentOverMap());
         
            modelBuilder.Configurations.Add(new AdjustmentShortMap());
         
            modelBuilder.Configurations.Add(new EntryDataDetailMap());
         
            modelBuilder.Configurations.Add(new ShortAllocationMap());
         
            modelBuilder.Configurations.Add(new xcuda_ItemMap());
         
            modelBuilder.Configurations.Add(new AdjustmentDetailMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentItemEntryDataDetailMap());
         
            modelBuilder.Configurations.Add(new AsycudaDocumentItemLastItemCostMap());
         
            modelBuilder.Configurations.Add(new InventoryItemAliasExMap());
         
            modelBuilder.Configurations.Add(new InventoryItemsExMap());
         
            modelBuilder.Configurations.Add(new AdjustmentOversAllocationMap());
         
            modelBuilder.Configurations.Add(new SystemDocumentSetMap());
         
            modelBuilder.Configurations.Add(new TODO_PreDiscrepancyErrorsMap());
         
			OnModelCreatingExtentsion(modelBuilder);

        }
		partial void OnModelCreatingExtentsion(DbModelBuilder modelBuilder);
    }
}

 	
