<#+
// <copyright file="Template1.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

    public class IEntitiyWithKeyTPL : CSharpTemplate
    {
      
        public EntityType  mainEntity;
        public string mainEntitySet;
        public string conTextName;
        public EntityContainer container;
        public EntityContainer COREcontainer;
        public List<EntityType> entityCollection;
        public List<EntityType> COREentityCollection;
        public MetadataTools ef;
        
        

        public override string TransformText()
        {
            base.TransformText();
            // var ens = mainEntity.Properties.Where(x => x.MetadataProperties.Where(z => z.Name.Contains("EntityNameProperty") && z.Value.ToString().Contains(">True<")).Any() == true).ToList();
            // bool isCoreEntity = (COREcontainer.Name != container.Name && COREItemCollection.FirstOrDefault(x=> x.Name == mainEntity.Name) != null);
            if(mainEntity.BaseType == null)
            {
#>

using System.Data.Entity.Core;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using Newtonsoft.Json;


namespace <#=conTextName#>.Business.Entities
{
    public partial class <#=            mainEntity.Name#>: IEntityWithKey
    {
<#+
            ///////////////////////////////////////////////////////////////////////////////////////////
            //if(!isCoreEntity)
            //{
            ////////////////////////////////////////////////////////////////////////////////////////////////
            
                    
#>
    #region "IEntityWithKey Implementation"

	[IgnoreDataMember]
    [JsonIgnore]
	public EntityKey EntityKey
	{
		get
		{
			return _entityKey;
		}
		set
		{
			if (_entityKey != value)
			{
				_entityKey = value;				
			}
		}
	}
	private EntityKey _entityKey;
#endregion
<#+
                    
            
            //////////////////////////////////////////////////////////////
            // }
            ///////////////////////////////////////////////////////////////
#>
    }
   
}
<#+
            }
            return this.GenerationEnvironment.ToString();
        }
    }
#>