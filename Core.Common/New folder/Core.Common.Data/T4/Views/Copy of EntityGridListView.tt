<#@ IntelliSenseLanguage processor="tangibleT4Editor" language="C#" #>
<#+ 
  // Note: You can call this method from the outside of the template,
  //       please add parameters as needed.	
  // To include this templaate just drag this file on another editor
  // then call this.Template_NewTemplate1_Render()
  void CreateEntityGridListView(string contextName, EntityType mainEntity, string mainEntitySet, EntityContainer container, EntityContainer COREcontainer, MetadataTools ef, CodeGenerationTools code, EntityFrameworkTemplateFileManager fileManager )
    {	
       
      // CodeGenerationTools code = new CodeGenerationTools(this);
       
	   fileManager.StartNewFile(code.Escape(mainEntity) + "GridListView.xaml");
#>
		
		<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	mc:Ignorable="d"
	xmlns:local="clr-namespace:InvManager"
	x:Class="InvManager.Views.<#=mainEntitySet#>List" Width="540.609" Height="Auto">
    <UserControl.Resources>
        <local:<#=mainEntity.Name#>Model x:Key="<#=mainEntitySet#>ListModelDataSource" />
        <local:SelectedToIndexConverter x:Key="SelectedToIndexConverter" />
        <DataTemplate x:Key="<#=mainEntity.Name#>Tpl">
            <Grid Height="49" Width="497" MouseEnter="SetCurrentItem">
<i:Interaction.Triggers>
    <i:EventTrigger EventName="MouseLeave">
        <ei:CallMethodAction TargetObject="{Binding Source={StaticResource <#=mainEntitySet#>ListModelDataSource}}" MethodName="Save<#=mainEntity.Name#>"/>
    </i:EventTrigger>
</i:Interaction.Triggers>

<#+
        int top = 0;
        foreach (EdmProperty edmProperty in mainEntity.Properties.Where(p => p.TypeUsage.EdmType is SimpleType && p.DeclaringType == mainEntity && p.Name!= mainEntity.Name + "Id"))
        {
           top += 25;

            if(edmProperty.Name == "EntryDateTime" || 
edmProperty.Name == "EmployeeId") continue;             

            if (ef.UnderlyingClrType(edmProperty.TypeUsage.EdmType) == typeof(DateTime))
            {
#>              <TextBlock Text="<#=edmProperty.Name#>" HorizontalAlignment="Left" Height="24" Margin="10,<#=top#>,0,0" VerticalAlignment="Top" Width="50" />
<DatePicker SelectedDate="{Binding <#=edmProperty.Name#>}" HorizontalAlignment="Left" Height="24" Margin="60,<#=top#>,0,0" VerticalAlignment="Top" Width="100" />

<#+continue;
            }
            if (ef.UnderlyingClrType(edmProperty.TypeUsage.EdmType) == typeof(string))
            {
#>              <TextBlock Text="<#=edmProperty.Name#>" HorizontalAlignment="Left" Height="24" Margin="10,<#=top#>,0,0" VerticalAlignment="Top" Width="50" />
<TextBox Text="{Binding <#=edmProperty.Name#>}" HorizontalAlignment="Left" Height="24" Margin="60,<#=top#>,0,0" VerticalAlignment="Top" Width="100" />
<#+continue;
            }
            if (ef.UnderlyingClrType(edmProperty.TypeUsage.EdmType) == typeof(int) && code.FieldName(edmProperty).EndsWith("Id") )
            {
string pSetName= "";
string pSetEntity= "";
EntitySet pSet = container.BaseEntitySets.OfType<EntitySet>().Where(x => x.ElementType.Name == edmProperty.Name.Substring(0,edmProperty.Name.Length - 2) ).FirstOrDefault();
if(pSet == null)
    pSet = COREcontainer.BaseEntitySets.OfType<EntitySet>().Where(x => x.ElementType.Name == edmProperty.Name.Substring(0,edmProperty.Name.Length - 2) ).FirstOrDefault();
if(pSet != null)
{
    pSetName = pSet.Name;
    pSetEntity = pSet.ElementType.Name;
}
else
{
    pSetName = edmProperty.Name.Substring(0,edmProperty.Name.Length - 2);
    pSetEntity = edmProperty.Name.Substring(0,edmProperty.Name.Length - 2);
}
   #>
<TextBlock Text="<#=edmProperty.Name#>" HorizontalAlignment="Left" Height="24" Margin="10,<#=top#>,0,0" VerticalAlignment="Top" Width="50" />
<ComboBox SelectedValue="{Binding <#=edmProperty.Name#>}" 
          
          DisplayMemberPath="EntityName"  SelectedValuePath="<#=edmProperty.Name#>" 
          ItemsSource="{Binding DataContext.<#=pSetName#>, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, ElementName=LayoutRoot}" 
          local:CBSelectedItem.SelectedItem="{Binding <#=pSetEntity#>}" 
          Text="{Binding New<#=pSetEntity#>Line, UpdateSourceTrigger=LostFocus, Source={StaticResource <#=mainEntitySet#>ListModelDataSource}}"
          
          IsEditable="True" HorizontalAlignment="Left" Height="32" Margin="60,<#=top#>,0,0" VerticalAlignment="Top" Width="100" FontSize="14" />  
<#+continue;
            }
#>
<TextBlock Text="<#=edmProperty.Name#>" HorizontalAlignment="Left" Height="24" Margin="10,<#=top#>,0,0" VerticalAlignment="Top" Width="50" />
<TextBox Text="{Binding <#=edmProperty.Name#>}" HorizontalAlignment="Left" Height="24" Margin="60,<#=top#>,0,0" VerticalAlignment="Top" Width="100" />
<#+          
            }
            
       
 #>
       

            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="<#=mainEntity.Name#>Template">
            <StackPanel>
<TextBlock Text="{Binding Address.AddressLine1}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource <#=mainEntitySet#>ListModelDataSource}}">
        <TextBlock HorizontalAlignment="Left" Height="37.806" Margin="17,14.227,0,0" TextWrapping="Wrap" Text="<#=mainEntitySet#>" VerticalAlignment="Top" Width="307.075" FontSize="21.333"/>
        <ListBox x:Name="<#=mainEntity.Name#>Grd" ItemsSource="{Binding CurrentEmployee.<#=mainEntity.Name#>es}" SelectedItem="{Binding Current<#=mainEntity.Name#>}" HorizontalAlignment="Left" Height="Auto" Margin="10,74,0,0" VerticalAlignment="Top" Width="521" ItemTemplate="{DynamicResource <#=mainEntity.Name#>Tpl}" Style="{DynamicResource AlphaListBoxStyle}"/>
        <TextBlock x:Name="NewBtn1" HorizontalAlignment="Right" Height="25" Margin="0,44,64.8,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="28" TextAlignment="Center" Style="{DynamicResource TextButtonStyle}" FontSize="20" Text="&#xE109;" FontFamily="Segoe UI Symbol">
            <i:Interaction.Triggers>
    <i:EventTrigger EventName="MouseLeftButtonDown">
        <ei:CallMethodAction TargetObject="{Binding Source={StaticResource <#=mainEntitySet#>ListModelDataSource}}" MethodName="New<#=mainEntity.Name#>"/>
    </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBlock>
        <TextBlock x:Name="DelBtn" Height="25" Margin="0,44,31.8,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="28" TextAlignment="Center" Style="{DynamicResource CloseButtonStyle}" FontSize="20" Text="&#xE106;" FontFamily="Segoe UI Symbol" Grid.RowSpan="1" HorizontalAlignment="Right">
    <i:Interaction.Triggers>
    <i:EventTrigger EventName="MouseLeftButtonDown">
        <ei:CallMethodAction TargetObject="{Binding Source={StaticResource <#=mainEntitySet#>ListModelDataSource}}" MethodName="Delete<#=mainEntity.Name#>"/>
    </i:EventTrigger>
</i:Interaction.Triggers>
        </TextBlock>
    </Grid>
</UserControl>
		
		
		<#+
         
	}	
#>