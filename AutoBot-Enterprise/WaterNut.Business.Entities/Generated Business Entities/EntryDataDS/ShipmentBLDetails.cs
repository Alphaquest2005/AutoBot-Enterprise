// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace EntryDataDS.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class ShipmentBLDetails : BaseEntity<ShipmentBLDetails>, ITrackable 
    {
        partial void AutoGenStartUp() //ShipmentBLDetails()
        {
            this.ShipmentRiderBLs = new List<ShipmentRiderBLs>();
            this.ShipmentFreightBLs = new List<ShipmentFreightBLs>();
            this.ShipmentBLInvoice = new List<ShipmentBLInvoice>();
        }

        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public int Quantity 
        {
            get
            {
                return _quantity;
            }
            set
            {
                _quantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _quantity;
        [DataMember]
        public string PackageType 
        {
            get
            {
                return _packagetype;
            }
            set
            {
                _packagetype = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _packagetype;
        [DataMember]
        public string Marks 
        {
            get
            {
                return _marks;
            }
            set
            {
                _marks = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _marks;
        [DataMember]
        public string Comments 
        {
            get
            {
                return _comments;
            }
            set
            {
                _comments = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _comments;
        [DataMember]
        public int BLId 
        {
            get
            {
                return _blid;
            }
            set
            {
                _blid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _blid;
        [DataMember]
        public Nullable<double> GrossWeightKg 
        {
            get
            {
                return _grossweightkg;
            }
            set
            {
                _grossweightkg = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _grossweightkg;
        [DataMember]
        public Nullable<double> CubicFeet 
        {
            get
            {
                return _cubicfeet;
            }
            set
            {
                _cubicfeet = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _cubicfeet;
        [DataMember]
        public List<ShipmentRiderBLs> ShipmentRiderBLs { get; set; }
        [DataMember]
        public List<ShipmentFreightBLs> ShipmentFreightBLs { get; set; }
        [DataMember]
        public ShipmentBL ShipmentBL { get; set; }
        [DataMember]
        public List<ShipmentBLInvoice> ShipmentBLInvoice { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


