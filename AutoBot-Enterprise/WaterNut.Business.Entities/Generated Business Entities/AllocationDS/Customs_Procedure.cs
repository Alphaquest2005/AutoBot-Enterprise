// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace AllocationDS.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class Customs_Procedure : BaseEntity<Customs_Procedure>, ITrackable 
    {
        partial void AutoGenStartUp() //Customs_Procedure()
        {
            this.AsycudaDocument = new List<AsycudaDocument>();
        }

        [DataMember]
        public int Document_TypeId 
        {
            get
            {
                return _document_typeid;
            }
            set
            {
                _document_typeid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _document_typeid;
        [DataMember]
        public int Customs_ProcedureId 
        {
            get
            {
                return _customs_procedureid;
            }
            set
            {
                _customs_procedureid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _customs_procedureid;
        [DataMember]
        public string Extended_customs_procedure 
        {
            get
            {
                return _extended_customs_procedure;
            }
            set
            {
                _extended_customs_procedure = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _extended_customs_procedure;
        [DataMember]
        public string National_customs_procedure 
        {
            get
            {
                return _national_customs_procedure;
            }
            set
            {
                _national_customs_procedure = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _national_customs_procedure;
        [DataMember]
        public string CustomsProcedure 
        {
            get
            {
                return _customsprocedure;
            }
            set
            {
                _customsprocedure = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _customsprocedure;
        [DataMember]
        public bool IsObsolete 
        {
            get
            {
                return _isobsolete;
            }
            set
            {
                _isobsolete = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _isobsolete;
        [DataMember]
        public bool IsPaid 
        {
            get
            {
                return _ispaid;
            }
            set
            {
                _ispaid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _ispaid;
        [DataMember]
        public Nullable<int> BondTypeId 
        {
            get
            {
                return _bondtypeid;
            }
            set
            {
                _bondtypeid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _bondtypeid;
        [DataMember]
        public bool Stock 
        {
            get
            {
                return _stock;
            }
            set
            {
                _stock = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _stock;
        [DataMember]
        public bool Discrepancy 
        {
            get
            {
                return _discrepancy;
            }
            set
            {
                _discrepancy = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _discrepancy;
        [DataMember]
        public bool Adjustment 
        {
            get
            {
                return _adjustment;
            }
            set
            {
                _adjustment = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _adjustment;
        [DataMember]
        public bool Sales 
        {
            get
            {
                return _sales;
            }
            set
            {
                _sales = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _sales;
        [DataMember]
        public int CustomsOperationId 
        {
            get
            {
                return _customsoperationid;
            }
            set
            {
                _customsoperationid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _customsoperationid;
        [DataMember]
        public bool SubmitToCustoms 
        {
            get
            {
                return _submittocustoms;
            }
            set
            {
                _submittocustoms = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _submittocustoms;
        [DataMember]
        public bool IsDefault 
        {
            get
            {
                return _isdefault;
            }
            set
            {
                _isdefault = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _isdefault;
        [DataMember]
        public bool ExportSupportingEntryData 
        {
            get
            {
                return _exportsupportingentrydata;
            }
            set
            {
                _exportsupportingentrydata = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _exportsupportingentrydata;
        [DataMember]
        public List<AsycudaDocument> AsycudaDocument { get; set; }
        [DataMember]
        public CustomsOperations CustomsOperations { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


