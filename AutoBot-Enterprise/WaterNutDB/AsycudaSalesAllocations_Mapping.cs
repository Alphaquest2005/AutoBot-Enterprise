//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaterNutDB
{
    #pragma warning disable 1573
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.ModelConfiguration;
    using System.Data.Entity.Infrastructure;
    
    internal partial class AsycudaSalesAllocations_Mapping : EntityTypeConfiguration<AsycudaSalesAllocations>
    {
        public AsycudaSalesAllocations_Mapping()
        {                        
              this.HasKey(t => t.AllocationId);        
              this.ToTable("AsycudaSalesAllocations");
              this.Property(t => t.AllocationId).HasColumnName("AllocationId");
              this.Property(t => t.EntryDataDetailsId).HasColumnName("EntryDataDetailsId");
              this.Property(t => t.PreviousItem_Id).HasColumnName("PreviousItem_Id");
              this.Property(t => t.Status).HasColumnName("Status").IsUnicode(false);
              this.Property(t => t.QtyAllocated).HasColumnName("QtyAllocated");
              this.Property(t => t.EntryTimeStamp).HasColumnName("EntryTimeStamp");
              this.Property(t => t.EANumber).HasColumnName("EANumber");
              this.Property(t => t.SANumber).HasColumnName("SANumber");
              this.Property(t => t.xEntryItem_Id).HasColumnName("xEntryItem_Id");
              this.HasOptional(t => t.EntryDataDetails).WithMany(t => t.AsycudaSalesAllocations).HasForeignKey(d => d.EntryDataDetailsId);
              this.HasOptional(t => t.PreviousEntry).WithMany(t => t.AsycudaSalesAllocations).HasForeignKey(d => d.PreviousItem_Id);
              this.HasOptional(t => t.xbondEntry).WithMany(t => t.xAllocations).HasForeignKey(d => d.xEntryItem_Id);
         }
    }
}
