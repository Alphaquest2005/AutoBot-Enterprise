//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaterNutDB
{
    #pragma warning disable 1573
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.ModelConfiguration;
    using System.Data.Entity.Infrastructure;
    
    internal partial class EntryDataDetails_Mapping : EntityTypeConfiguration<EntryDataDetails>
    {
        public EntryDataDetails_Mapping()
        {                        
              this.HasKey(t => t.EntryDataDetailsId);        
              this.ToTable("EntryDataDetails");
              this.Property(t => t.EntryDataDetailsId).HasColumnName("EntryDataDetailsId");
              this.Property(t => t.EntryDataId).HasColumnName("EntryDataId").IsRequired().IsUnicode(false).HasMaxLength(50);
              this.Property(t => t.LineNumber).HasColumnName("LineNumber");
              this.Property(t => t.ItemNumber).HasColumnName("ItemNumber").IsRequired().IsUnicode(false).HasMaxLength(50);
              this.Property(t => t.Quantity).HasColumnName("Quantity");
              this.Property(t => t.Units).HasColumnName("Units").IsUnicode(false).HasMaxLength(15);
              this.Property(t => t.ItemDescription).HasColumnName("ItemDescription").IsRequired().IsUnicode(false);
              this.Property(t => t.Cost).HasColumnName("Cost");
              this.Property(t => t.UnitWeight).HasColumnName("UnitWeight");
              this.Property(t => t.QtyAllocated).HasColumnName("QtyAllocated");
              this.HasRequired(t => t.EntryData).WithMany(t => t.EntryDataDetails).HasForeignKey(d => d.EntryDataId);
              this.HasRequired(t => t.InventoryItems).WithMany(t => t.EntryDataDetails).HasForeignKey(d => d.ItemNumber);
    			this.HasMany(t => t.xcuda_Item).WithMany(t => t.EntryDataDetails)
    				.Map(m => 
    				{
    					m.ToTable("xcuda_ItemEntryDataDetails");
    					m.MapLeftKey("EntryDataDetailsId");
    					m.MapRightKey("Item_Id");
    				});
         }
    }
}
