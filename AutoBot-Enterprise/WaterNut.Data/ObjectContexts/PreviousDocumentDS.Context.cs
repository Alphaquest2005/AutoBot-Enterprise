// <autogenerated>
//   This file was generated by T4 code generator AllObjectContext.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

            


using System.Data.Entity;
using CoreEntities.Business.Entities;
using System.Data.Entity.Infrastructure;
using PreviousDocumentDS.Business.Entities.Mapping;
using WaterNut.Data;
using System.Data.Entity.Core.Objects;



namespace PreviousDocumentDS.Business.Entities
{
    [DbConfigurationType(typeof(DBConfiguration))] 
    public partial class PreviousDocumentDSContext : DbContext
    {
        static PreviousDocumentDSContext()
        {
            var x = typeof(System.Data.Entity.SqlServer.SqlProviderServices);
            Database.SetInitializer<PreviousDocumentDSContext>(null);
        }

        public PreviousDocumentDSContext()
            : base("Name=PreviousDocumentDS")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
               // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 120;

            objectContext.ObjectMaterialized += ObjectContext_OnObjectMaterialized;
        }
        
        public bool StartTracking { get; set; }

        private void ObjectContext_OnObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            if (StartTracking == true) ((dynamic)e.Entity).StartTracking();
        }

        public DbSet<xcuda_HScode> xcuda_HScode { get; set; }
     
        public DbSet<PreviousEntry> PreviousEntries { get; set; }
     
        public DbSet<xcuda_PreviousItem> xcuda_PreviousItem { get; set; }
     
        public DbSet<xcuda_Tarification> xcuda_Tarification { get; set; }
     
        public DbSet<xcuda_Valuation_item> xcuda_Valuation_item { get; set; }
     
        public DbSet<EntryDataDetails> EntryDataDetails { get; set; }
     
        public DbSet<EntryPreviousItems> EntryPreviousItems { get; set; }
     


        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Configurations.Add(new xcuda_HScodeMap());
         
            modelBuilder.Configurations.Add(new PreviousEntryMap());
         
            modelBuilder.Configurations.Add(new xcuda_PreviousItemMap());
         
            modelBuilder.Configurations.Add(new xcuda_TarificationMap());
         
            modelBuilder.Configurations.Add(new xcuda_Valuation_itemMap());
         
            modelBuilder.Configurations.Add(new EntryDataDetailsMap());
         
            modelBuilder.Configurations.Add(new EntryPreviousItemsMap());
         
			OnModelCreatingExtentsion(modelBuilder);

        }
		partial void OnModelCreatingExtentsion(DbModelBuilder modelBuilder);
    }
}

 	
