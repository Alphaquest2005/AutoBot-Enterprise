// <autogenerated>
//   This file was generated by T4 code generator AllDataSpaceViewModels.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using DocumentItemDS.Business.Entities;
using DocumentItemDS.Business.Services;

using System.Threading.Tasks;
using System.Collections.Generic;


//using WaterNut.Client.Repositories;



namespace WaterNut.DataSpace.DocumentItemDS.DataModels
{
	 public partial class BaseDataModel 
	{
        private static readonly BaseDataModel instance;
        static BaseDataModel()
        {
            instance = new BaseDataModel();
        }

        public static  BaseDataModel Instance
        {
            get { return instance; }
        }

       //Search Entities
   
        public async Task<IEnumerable<EntryPreviousItems>> SearchEntryPreviousItems(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new EntryPreviousItemsService())
            {
                return await ctx.GetEntryPreviousItemsByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task SaveEntryPreviousItems(EntryPreviousItems i)
        {
            if (i == null) return;
            using (var ctx = new EntryPreviousItemsService())
            {
                await ctx.UpdateEntryPreviousItems(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<PreviousItemsEx>> SearchPreviousItemsEx(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new PreviousItemsExService())
            {
                return await ctx.GetPreviousItemsExByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task SavePreviousItemsEx(PreviousItemsEx i)
        {
            if (i == null) return;
            using (var ctx = new PreviousItemsExService())
            {
                await ctx.UpdatePreviousItemsEx(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<SubItems>> SearchSubItems(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new SubItemsService())
            {
                return await ctx.GetSubItemsByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task SaveSubItems(SubItems i)
        {
            if (i == null) return;
            using (var ctx = new SubItemsService())
            {
                await ctx.UpdateSubItems(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xBondAllocations>> SearchxBondAllocations(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xBondAllocationsService())
            {
                return await ctx.GetxBondAllocationsByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task SavexBondAllocations(xBondAllocations i)
        {
            if (i == null) return;
            using (var ctx = new xBondAllocationsService())
            {
                await ctx.UpdatexBondAllocations(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Attached_documents>> Searchxcuda_Attached_documents(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Attached_documentsService())
            {
                return await ctx.Getxcuda_Attached_documentsByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Attached_documents(xcuda_Attached_documents i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Attached_documentsService())
            {
                await ctx.Updatexcuda_Attached_documents(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Goods_description>> Searchxcuda_Goods_description(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Goods_descriptionService())
            {
                return await ctx.Getxcuda_Goods_descriptionByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Goods_description(xcuda_Goods_description i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Goods_descriptionService())
            {
                await ctx.Updatexcuda_Goods_description(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_HScode>> Searchxcuda_HScode(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_HScodeService())
            {
                return await ctx.Getxcuda_HScodeByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_HScode(xcuda_HScode i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_HScodeService())
            {
                await ctx.Updatexcuda_HScode(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Inventory_Item>> Searchxcuda_Inventory_Item(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Inventory_ItemService())
            {
                return await ctx.Getxcuda_Inventory_ItemByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Inventory_Item(xcuda_Inventory_Item i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Inventory_ItemService())
            {
                await ctx.Updatexcuda_Inventory_Item(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Item>> Searchxcuda_Item(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_ItemService())
            {
                return await ctx.Getxcuda_ItemByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Item(xcuda_Item i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_ItemService())
            {
                await ctx.Updatexcuda_Item(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_item_deduction>> Searchxcuda_item_deduction(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_item_deductionService())
            {
                return await ctx.Getxcuda_item_deductionByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_item_deduction(xcuda_item_deduction i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_item_deductionService())
            {
                await ctx.Updatexcuda_item_deduction(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_item_external_freight>> Searchxcuda_item_external_freight(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_item_external_freightService())
            {
                return await ctx.Getxcuda_item_external_freightByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_item_external_freight(xcuda_item_external_freight i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_item_external_freightService())
            {
                await ctx.Updatexcuda_item_external_freight(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_item_insurance>> Searchxcuda_item_insurance(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_item_insuranceService())
            {
                return await ctx.Getxcuda_item_insuranceByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_item_insurance(xcuda_item_insurance i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_item_insuranceService())
            {
                await ctx.Updatexcuda_item_insurance(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_item_internal_freight>> Searchxcuda_item_internal_freight(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_item_internal_freightService())
            {
                return await ctx.Getxcuda_item_internal_freightByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_item_internal_freight(xcuda_item_internal_freight i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_item_internal_freightService())
            {
                await ctx.Updatexcuda_item_internal_freight(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Item_Invoice>> Searchxcuda_Item_Invoice(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Item_InvoiceService())
            {
                return await ctx.Getxcuda_Item_InvoiceByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Item_Invoice(xcuda_Item_Invoice i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Item_InvoiceService())
            {
                await ctx.Updatexcuda_Item_Invoice(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_item_other_cost>> Searchxcuda_item_other_cost(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_item_other_costService())
            {
                return await ctx.Getxcuda_item_other_costByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_item_other_cost(xcuda_item_other_cost i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_item_other_costService())
            {
                await ctx.Updatexcuda_item_other_cost(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_ItemEntryDataDetails>> Searchxcuda_ItemEntryDataDetails(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_ItemEntryDataDetailsService())
            {
                return await ctx.Getxcuda_ItemEntryDataDetailsByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_ItemEntryDataDetails(xcuda_ItemEntryDataDetails i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_ItemEntryDataDetailsService())
            {
                await ctx.Updatexcuda_ItemEntryDataDetails(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Packages>> Searchxcuda_Packages(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_PackagesService())
            {
                return await ctx.Getxcuda_PackagesByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Packages(xcuda_Packages i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_PackagesService())
            {
                await ctx.Updatexcuda_Packages(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Previous_doc>> Searchxcuda_Previous_doc(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Previous_docService())
            {
                return await ctx.Getxcuda_Previous_docByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Previous_doc(xcuda_Previous_doc i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Previous_docService())
            {
                await ctx.Updatexcuda_Previous_doc(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_PreviousItem>> Searchxcuda_PreviousItem(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_PreviousItemService())
            {
                return await ctx.Getxcuda_PreviousItemByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_PreviousItem(xcuda_PreviousItem i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_PreviousItemService())
            {
                await ctx.Updatexcuda_PreviousItem(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Supplementary_unit>> Searchxcuda_Supplementary_unit(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Supplementary_unitService())
            {
                return await ctx.Getxcuda_Supplementary_unitByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Supplementary_unit(xcuda_Supplementary_unit i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Supplementary_unitService())
            {
                await ctx.Updatexcuda_Supplementary_unit(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Suppliers_link>> Searchxcuda_Suppliers_link(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Suppliers_linkService())
            {
                return await ctx.Getxcuda_Suppliers_linkByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Suppliers_link(xcuda_Suppliers_link i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Suppliers_linkService())
            {
                await ctx.Updatexcuda_Suppliers_link(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Tarification>> Searchxcuda_Tarification(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_TarificationService())
            {
                return await ctx.Getxcuda_TarificationByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Tarification(xcuda_Tarification i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_TarificationService())
            {
                await ctx.Updatexcuda_Tarification(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Taxation>> Searchxcuda_Taxation(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_TaxationService())
            {
                return await ctx.Getxcuda_TaxationByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Taxation(xcuda_Taxation i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_TaxationService())
            {
                await ctx.Updatexcuda_Taxation(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Taxation_line>> Searchxcuda_Taxation_line(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Taxation_lineService())
            {
                return await ctx.Getxcuda_Taxation_lineByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Taxation_line(xcuda_Taxation_line i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Taxation_lineService())
            {
                await ctx.Updatexcuda_Taxation_line(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Valuation_item>> Searchxcuda_Valuation_item(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Valuation_itemService())
            {
                return await ctx.Getxcuda_Valuation_itemByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Valuation_item(xcuda_Valuation_item i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Valuation_itemService())
            {
                await ctx.Updatexcuda_Valuation_item(i).ConfigureAwait(false);
            }
        }
   
        public async Task<IEnumerable<xcuda_Weight_itm>> Searchxcuda_Weight_itm(List<string> lst, List<string> includeLst = null )
        {
            using (var ctx = new xcuda_Weight_itmService())
            {
                return await ctx.Getxcuda_Weight_itmByExpressionLst(lst, includeLst).ConfigureAwait(false);
            }
        }

        public async Task Savexcuda_Weight_itm(xcuda_Weight_itm i)
        {
            if (i == null) return;
            using (var ctx = new xcuda_Weight_itmService())
            {
                await ctx.Updatexcuda_Weight_itm(i).ConfigureAwait(false);
            }
        }
   
    

    }		
}
