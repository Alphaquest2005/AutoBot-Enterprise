// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace OCR.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class OCR_FailedFields : BaseEntity<OCR_FailedFields>, ITrackable, IEquatable<OCR_FailedFields>
    {
        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public int FailedLineEventId
		{ 
		    get { return _FailedLineEventId; }
			set
			{
			    if (value == _FailedLineEventId) return;
				_FailedLineEventId = value;
				NotifyPropertyChanged();//m => this.FailedLineEventId
			}
		}
        private int _FailedLineEventId;

        [DataMember]
        public int FieldId
		{ 
		    get { return _FieldId; }
			set
			{
			    if (value == _FieldId) return;
				_FieldId = value;
				NotifyPropertyChanged();//m => this.FieldId
			}
		}
        private int _FieldId;

       
        [DataMember]
        public OCR_FailedLines OCR_FailedLines
		{
		    get { return _OCR_FailedLines; }
			set
			{
			    if (value == _OCR_FailedLines) return;
				_OCR_FailedLines = value;
                OCR_FailedLinesChangeTracker = _OCR_FailedLines == null ? null
                    : new ChangeTrackingCollection<OCR_FailedLines> { _OCR_FailedLines };
				NotifyPropertyChanged();//m => this.OCR_FailedLines
			}
		}
        private OCR_FailedLines _OCR_FailedLines;
        private ChangeTrackingCollection<OCR_FailedLines> OCR_FailedLinesChangeTracker { get; set; }

        [DataMember]
        public Fields OCR_Fields
		{
		    get { return _OCR_Fields; }
			set
			{
			    if (value == _OCR_Fields) return;
				_OCR_Fields = value;
                OCR_FieldsChangeTracker = _OCR_Fields == null ? null
                    : new ChangeTrackingCollection<Fields> { _OCR_Fields };
				NotifyPropertyChanged();//m => this.OCR_Fields
			}
		}
        private Fields _OCR_Fields;
        private ChangeTrackingCollection<Fields> OCR_FieldsChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<OCR_FailedFields>.Equals(OCR_FailedFields other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



