// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace OCR.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class InvoiceIdentificatonRegEx : BaseEntity<InvoiceIdentificatonRegEx>, ITrackable, IEquatable<InvoiceIdentificatonRegEx>
    {
        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public int InvoiceId
		{ 
		    get { return _InvoiceId; }
			set
			{
			    if (value == _InvoiceId) return;
				_InvoiceId = value;
				NotifyPropertyChanged();//m => this.InvoiceId
			}
		}
        private int _InvoiceId;

        [DataMember]
        public int RegExId
		{ 
		    get { return _RegExId; }
			set
			{
			    if (value == _RegExId) return;
				_RegExId = value;
				NotifyPropertyChanged();//m => this.RegExId
			}
		}
        private int _RegExId;

       
        [DataMember]
        public Invoices OCR_Invoices
		{
		    get { return _OCR_Invoices; }
			set
			{
			    if (value == _OCR_Invoices) return;
				_OCR_Invoices = value;
                OCR_InvoicesChangeTracker = _OCR_Invoices == null ? null
                    : new ChangeTrackingCollection<Invoices> { _OCR_Invoices };
				NotifyPropertyChanged();//m => this.OCR_Invoices
			}
		}
        private Invoices _OCR_Invoices;
        private ChangeTrackingCollection<Invoices> OCR_InvoicesChangeTracker { get; set; }

        [DataMember]
        public RegularExpressions OCR_RegularExpressions
		{
		    get { return _OCR_RegularExpressions; }
			set
			{
			    if (value == _OCR_RegularExpressions) return;
				_OCR_RegularExpressions = value;
                OCR_RegularExpressionsChangeTracker = _OCR_RegularExpressions == null ? null
                    : new ChangeTrackingCollection<RegularExpressions> { _OCR_RegularExpressions };
				NotifyPropertyChanged();//m => this.OCR_RegularExpressions
			}
		}
        private RegularExpressions _OCR_RegularExpressions;
        private ChangeTrackingCollection<RegularExpressions> OCR_RegularExpressionsChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<InvoiceIdentificatonRegEx>.Equals(InvoiceIdentificatonRegEx other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



