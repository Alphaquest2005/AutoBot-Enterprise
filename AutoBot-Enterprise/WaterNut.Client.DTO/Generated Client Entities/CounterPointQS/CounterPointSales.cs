// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CounterPointQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class CounterPointSales : BaseEntity<CounterPointSales>, ITrackable, IEquatable<CounterPointSales>
    {
        [DataMember]
        public string InvoiceNo
		{ 
		    get { return _InvoiceNo; }
			set
			{
			    if (value == _InvoiceNo) return;
				_InvoiceNo = value;
				NotifyPropertyChanged();//m => this.InvoiceNo
			}
		}
        private string _InvoiceNo;

        [DataMember]
        public Nullable<System.DateTime> Date
		{ 
		    get { return _Date; }
			set
			{
			    if (value == _Date) return;
				_Date = value;
				NotifyPropertyChanged();//m => this.Date
			}
		}
        private Nullable<System.DateTime> _Date;

        [DataMember]
        public decimal TAX_AMT
		{ 
		    get { return _TAX_AMT; }
			set
			{
			    if (value == _TAX_AMT) return;
				_TAX_AMT = value;
				NotifyPropertyChanged();//m => this.TAX_AMT
			}
		}
        private decimal _TAX_AMT;

        [DataMember]
        public string CustomerName
		{ 
		    get { return _CustomerName; }
			set
			{
			    if (value == _CustomerName) return;
				_CustomerName = value;
				NotifyPropertyChanged();//m => this.CustomerName
			}
		}
        private string _CustomerName;

        [DataMember]
        public Nullable<int> LineNumber
		{ 
		    get { return _LineNumber; }
			set
			{
			    if (value == _LineNumber) return;
				_LineNumber = value;
				NotifyPropertyChanged();//m => this.LineNumber
			}
		}
        private Nullable<int> _LineNumber;

        [DataMember]
        public Nullable<bool> Downloaded
		{ 
		    get { return _Downloaded; }
			set
			{
			    if (value == _Downloaded) return;
				_Downloaded = value;
				NotifyPropertyChanged();//m => this.Downloaded
			}
		}
        private Nullable<bool> _Downloaded;

       
   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<CounterPointSales>.Equals(CounterPointSales other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



