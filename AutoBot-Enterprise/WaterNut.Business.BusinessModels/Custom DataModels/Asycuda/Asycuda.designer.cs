// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>WaterNut.Asycuda</NameSpace><Collection>ObservableCollection</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>True</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace WaterNut.Asycuda
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDA")]
    public partial class ASYCUDA : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAExport_release export_releaseField;

        private ASYCUDAAssessment_notice assessment_noticeField;

        private ASYCUDAGlobal_taxes global_taxesField;

        private ASYCUDAProperty propertyField;

        private ASYCUDAIdentification identificationField;

        private ASYCUDATraders tradersField;

        private ASYCUDADeclarant declarantField;

        private ASYCUDAGeneral_information general_informationField;

        private ASYCUDATransport transportField;

        private ASYCUDAFinancial financialField;

        private ASYCUDAWarehouse warehouseField;

        private ASYCUDATransit transitField;

        private ASYCUDAValuation valuationField;

        private ASYCUDAContainer containerField;

        private ObservableCollection<ASYCUDAPreviousItem> previousItemField;

        private ObservableCollection<ASYCUDAItem> itemField;

        private ObservableCollection<ASYCUDASuppliers_documents> suppliers_documentsField;

        private ObservableCollection<string> textField;

        private string idField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDA()
        {
            this.textField = new ObservableCollection<string>();
            this.suppliers_documentsField = new ObservableCollection<ASYCUDASuppliers_documents>();
            this.itemField = new ObservableCollection<ASYCUDAItem>();
            this.previousItemField = new ObservableCollection<ASYCUDAPreviousItem>();
            this.containerField = new ASYCUDAContainer();
            this.valuationField = new ASYCUDAValuation();
            this.transitField = new ASYCUDATransit();
            this.warehouseField = new ASYCUDAWarehouse();
            this.financialField = new ASYCUDAFinancial();
            this.transportField = new ASYCUDATransport();
            this.general_informationField = new ASYCUDAGeneral_information();
            this.declarantField = new ASYCUDADeclarant();
            this.tradersField = new ASYCUDATraders();
            this.identificationField = new ASYCUDAIdentification();
            this.propertyField = new ASYCUDAProperty();
            this.global_taxesField = new ASYCUDAGlobal_taxes();
            this.assessment_noticeField = new ASYCUDAAssessment_notice();
            this.export_releaseField = new ASYCUDAExport_release();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAExport_release Export_release
        {
            get
            {
                return this.export_releaseField;
            }
            set
            {
                if ((this.export_releaseField != null))
                {
                    if ((export_releaseField.Equals(value) != true))
                    {
                        this.export_releaseField = value;
                        this.OnPropertyChanged("Export_release");
                    }
                }
                else
                {
                    this.export_releaseField = value;
                    this.OnPropertyChanged("Export_release");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAAssessment_notice Assessment_notice
        {
            get
            {
                return this.assessment_noticeField;
            }
            set
            {
                if ((this.assessment_noticeField != null))
                {
                    if ((assessment_noticeField.Equals(value) != true))
                    {
                        this.assessment_noticeField = value;
                        this.OnPropertyChanged("Assessment_notice");
                    }
                }
                else
                {
                    this.assessment_noticeField = value;
                    this.OnPropertyChanged("Assessment_notice");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGlobal_taxes Global_taxes
        {
            get
            {
                return this.global_taxesField;
            }
            set
            {
                if ((this.global_taxesField != null))
                {
                    if ((global_taxesField.Equals(value) != true))
                    {
                        this.global_taxesField = value;
                        this.OnPropertyChanged("Global_taxes");
                    }
                }
                else
                {
                    this.global_taxesField = value;
                    this.OnPropertyChanged("Global_taxes");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAProperty Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                if ((this.propertyField != null))
                {
                    if ((propertyField.Equals(value) != true))
                    {
                        this.propertyField = value;
                        this.OnPropertyChanged("Property");
                    }
                }
                else
                {
                    this.propertyField = value;
                    this.OnPropertyChanged("Property");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentification Identification
        {
            get
            {
                return this.identificationField;
            }
            set
            {
                if ((this.identificationField != null))
                {
                    if ((identificationField.Equals(value) != true))
                    {
                        this.identificationField = value;
                        this.OnPropertyChanged("Identification");
                    }
                }
                else
                {
                    this.identificationField = value;
                    this.OnPropertyChanged("Identification");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATraders Traders
        {
            get
            {
                return this.tradersField;
            }
            set
            {
                if ((this.tradersField != null))
                {
                    if ((tradersField.Equals(value) != true))
                    {
                        this.tradersField = value;
                        this.OnPropertyChanged("Traders");
                    }
                }
                else
                {
                    this.tradersField = value;
                    this.OnPropertyChanged("Traders");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDADeclarant Declarant
        {
            get
            {
                return this.declarantField;
            }
            set
            {
                if ((this.declarantField != null))
                {
                    if ((declarantField.Equals(value) != true))
                    {
                        this.declarantField = value;
                        this.OnPropertyChanged("Declarant");
                    }
                }
                else
                {
                    this.declarantField = value;
                    this.OnPropertyChanged("Declarant");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_information General_information
        {
            get
            {
                return this.general_informationField;
            }
            set
            {
                if ((this.general_informationField != null))
                {
                    if ((general_informationField.Equals(value) != true))
                    {
                        this.general_informationField = value;
                        this.OnPropertyChanged("General_information");
                    }
                }
                else
                {
                    this.general_informationField = value;
                    this.OnPropertyChanged("General_information");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransport Transport
        {
            get
            {
                return this.transportField;
            }
            set
            {
                if ((this.transportField != null))
                {
                    if ((transportField.Equals(value) != true))
                    {
                        this.transportField = value;
                        this.OnPropertyChanged("Transport");
                    }
                }
                else
                {
                    this.transportField = value;
                    this.OnPropertyChanged("Transport");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancial Financial
        {
            get
            {
                return this.financialField;
            }
            set
            {
                if ((this.financialField != null))
                {
                    if ((financialField.Equals(value) != true))
                    {
                        this.financialField = value;
                        this.OnPropertyChanged("Financial");
                    }
                }
                else
                {
                    this.financialField = value;
                    this.OnPropertyChanged("Financial");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAWarehouse Warehouse
        {
            get
            {
                return this.warehouseField;
            }
            set
            {
                if ((this.warehouseField != null))
                {
                    if ((warehouseField.Equals(value) != true))
                    {
                        this.warehouseField = value;
                        this.OnPropertyChanged("Warehouse");
                    }
                }
                else
                {
                    this.warehouseField = value;
                    this.OnPropertyChanged("Warehouse");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransit Transit
        {
            get
            {
                return this.transitField;
            }
            set
            {
                if ((this.transitField != null))
                {
                    if ((transitField.Equals(value) != true))
                    {
                        this.transitField = value;
                        this.OnPropertyChanged("Transit");
                    }
                }
                else
                {
                    this.transitField = value;
                    this.OnPropertyChanged("Transit");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuation Valuation
        {
            get
            {
                return this.valuationField;
            }
            set
            {
                if ((this.valuationField != null))
                {
                    if ((valuationField.Equals(value) != true))
                    {
                        this.valuationField = value;
                        this.OnPropertyChanged("Valuation");
                    }
                }
                else
                {
                    this.valuationField = value;
                    this.OnPropertyChanged("Valuation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAContainer Container
        {
            get
            {
                return this.containerField;
            }
            set
            {
                if ((this.containerField != null))
                {
                    if ((containerField.Equals(value) != true))
                    {
                        this.containerField = value;
                        this.OnPropertyChanged("Container");
                    }
                }
                else
                {
                    this.containerField = value;
                    this.OnPropertyChanged("Container");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("PreviousItem")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<ASYCUDAPreviousItem> PreviousItem
        {
            get
            {
                return this.previousItemField;
            }
            set
            {
                if ((this.previousItemField != null))
                {
                    if ((previousItemField.Equals(value) != true))
                    {
                        this.previousItemField = value;
                        this.OnPropertyChanged("PreviousItem");
                    }
                }
                else
                {
                    this.previousItemField = value;
                    this.OnPropertyChanged("PreviousItem");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Item")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<ASYCUDAItem> Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item");
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Suppliers_documents")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<ASYCUDASuppliers_documents> Suppliers_documents
        {
            get
            {
                return this.suppliers_documentsField;
            }
            set
            {
                if ((this.suppliers_documentsField != null))
                {
                    if ((suppliers_documentsField.Equals(value) != true))
                    {
                        this.suppliers_documentsField = value;
                        this.OnPropertyChanged("Suppliers_documents");
                    }
                }
                else
                {
                    this.suppliers_documentsField = value;
                    this.OnPropertyChanged("Suppliers_documents");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("id");
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("id");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDA));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDA object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDA object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDA object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDA obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDA);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDA obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDA Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDA)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDA object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDA object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDA object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDA obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDA);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDA obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDA obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDA LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDA LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDA object
        /// </summary>
        public virtual ASYCUDA Clone()
        {
            return ((ASYCUDA)(this.MemberwiseClone()));
        }
        #endregion

        
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAExport_release")]
    public partial class ASYCUDAExport_release : System.ComponentModel.INotifyPropertyChanged
    {

        private object date_of_exitField;

        private object time_of_exitField;

        private ASYCUDAExport_releaseActual_office_of_exit_code actual_office_of_exit_codeField;

        private ASYCUDAExport_releaseActual_office_of_exit_name actual_office_of_exit_nameField;

        private ASYCUDAExport_releaseExit_reference exit_referenceField;

        private ASYCUDAExport_releaseComments commentsField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAExport_release()
        {
            this.textField = new ObservableCollection<string>();
            this.commentsField = new ASYCUDAExport_releaseComments();
            this.exit_referenceField = new ASYCUDAExport_releaseExit_reference();
            this.actual_office_of_exit_nameField = new ASYCUDAExport_releaseActual_office_of_exit_name();
            this.actual_office_of_exit_codeField = new ASYCUDAExport_releaseActual_office_of_exit_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Date_of_exit
        {
            get
            {
                return this.date_of_exitField;
            }
            set
            {
                if ((this.date_of_exitField != null))
                {
                    if ((date_of_exitField.Equals(value) != true))
                    {
                        this.date_of_exitField = value;
                        this.OnPropertyChanged("Date_of_exit");
                    }
                }
                else
                {
                    this.date_of_exitField = value;
                    this.OnPropertyChanged("Date_of_exit");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Time_of_exit
        {
            get
            {
                return this.time_of_exitField;
            }
            set
            {
                if ((this.time_of_exitField != null))
                {
                    if ((time_of_exitField.Equals(value) != true))
                    {
                        this.time_of_exitField = value;
                        this.OnPropertyChanged("Time_of_exit");
                    }
                }
                else
                {
                    this.time_of_exitField = value;
                    this.OnPropertyChanged("Time_of_exit");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAExport_releaseActual_office_of_exit_code Actual_office_of_exit_code
        {
            get
            {
                return this.actual_office_of_exit_codeField;
            }
            set
            {
                if ((this.actual_office_of_exit_codeField != null))
                {
                    if ((actual_office_of_exit_codeField.Equals(value) != true))
                    {
                        this.actual_office_of_exit_codeField = value;
                        this.OnPropertyChanged("Actual_office_of_exit_code");
                    }
                }
                else
                {
                    this.actual_office_of_exit_codeField = value;
                    this.OnPropertyChanged("Actual_office_of_exit_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAExport_releaseActual_office_of_exit_name Actual_office_of_exit_name
        {
            get
            {
                return this.actual_office_of_exit_nameField;
            }
            set
            {
                if ((this.actual_office_of_exit_nameField != null))
                {
                    if ((actual_office_of_exit_nameField.Equals(value) != true))
                    {
                        this.actual_office_of_exit_nameField = value;
                        this.OnPropertyChanged("Actual_office_of_exit_name");
                    }
                }
                else
                {
                    this.actual_office_of_exit_nameField = value;
                    this.OnPropertyChanged("Actual_office_of_exit_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAExport_releaseExit_reference Exit_reference
        {
            get
            {
                return this.exit_referenceField;
            }
            set
            {
                if ((this.exit_referenceField != null))
                {
                    if ((exit_referenceField.Equals(value) != true))
                    {
                        this.exit_referenceField = value;
                        this.OnPropertyChanged("Exit_reference");
                    }
                }
                else
                {
                    this.exit_referenceField = value;
                    this.OnPropertyChanged("Exit_reference");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAExport_releaseComments Comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                if ((this.commentsField != null))
                {
                    if ((commentsField.Equals(value) != true))
                    {
                        this.commentsField = value;
                        this.OnPropertyChanged("Comments");
                    }
                }
                else
                {
                    this.commentsField = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAExport_release));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAExport_release object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAExport_release object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_release object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAExport_release obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_release);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAExport_release obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAExport_release Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAExport_release)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAExport_release object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAExport_release object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_release object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAExport_release obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_release);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_release obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_release obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAExport_release LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAExport_release LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAExport_release object
        /// </summary>
        public virtual ASYCUDAExport_release Clone()
        {
            return ((ASYCUDAExport_release)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAExport_releaseActual_office_of_exit_code")]
    public partial class ASYCUDAExport_releaseActual_office_of_exit_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAExport_releaseActual_office_of_exit_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAExport_releaseActual_office_of_exit_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAExport_releaseActual_office_of_exit_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAExport_releaseActual_office_of_exit_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseActual_office_of_exit_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAExport_releaseActual_office_of_exit_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseActual_office_of_exit_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAExport_releaseActual_office_of_exit_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAExport_releaseActual_office_of_exit_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAExport_releaseActual_office_of_exit_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAExport_releaseActual_office_of_exit_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAExport_releaseActual_office_of_exit_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseActual_office_of_exit_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAExport_releaseActual_office_of_exit_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseActual_office_of_exit_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseActual_office_of_exit_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseActual_office_of_exit_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAExport_releaseActual_office_of_exit_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAExport_releaseActual_office_of_exit_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAExport_releaseActual_office_of_exit_code object
        /// </summary>
        public virtual ASYCUDAExport_releaseActual_office_of_exit_code Clone()
        {
            return ((ASYCUDAExport_releaseActual_office_of_exit_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAExport_releaseActual_office_of_exit_name")]
    public partial class ASYCUDAExport_releaseActual_office_of_exit_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAExport_releaseActual_office_of_exit_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAExport_releaseActual_office_of_exit_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAExport_releaseActual_office_of_exit_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAExport_releaseActual_office_of_exit_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseActual_office_of_exit_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAExport_releaseActual_office_of_exit_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseActual_office_of_exit_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAExport_releaseActual_office_of_exit_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAExport_releaseActual_office_of_exit_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAExport_releaseActual_office_of_exit_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAExport_releaseActual_office_of_exit_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAExport_releaseActual_office_of_exit_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseActual_office_of_exit_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAExport_releaseActual_office_of_exit_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseActual_office_of_exit_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseActual_office_of_exit_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseActual_office_of_exit_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAExport_releaseActual_office_of_exit_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAExport_releaseActual_office_of_exit_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAExport_releaseActual_office_of_exit_name object
        /// </summary>
        public virtual ASYCUDAExport_releaseActual_office_of_exit_name Clone()
        {
            return ((ASYCUDAExport_releaseActual_office_of_exit_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAExport_releaseExit_reference")]
    public partial class ASYCUDAExport_releaseExit_reference : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAExport_releaseExit_reference()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAExport_releaseExit_reference));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAExport_releaseExit_reference object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAExport_releaseExit_reference object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseExit_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAExport_releaseExit_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseExit_reference);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAExport_releaseExit_reference obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAExport_releaseExit_reference Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAExport_releaseExit_reference)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAExport_releaseExit_reference object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAExport_releaseExit_reference object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseExit_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAExport_releaseExit_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseExit_reference);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseExit_reference obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseExit_reference obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAExport_releaseExit_reference LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAExport_releaseExit_reference LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAExport_releaseExit_reference object
        /// </summary>
        public virtual ASYCUDAExport_releaseExit_reference Clone()
        {
            return ((ASYCUDAExport_releaseExit_reference)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAExport_releaseComments")]
    public partial class ASYCUDAExport_releaseComments : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAExport_releaseComments()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAExport_releaseComments));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAExport_releaseComments object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAExport_releaseComments object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseComments object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAExport_releaseComments obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseComments);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAExport_releaseComments obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAExport_releaseComments Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAExport_releaseComments)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAExport_releaseComments object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAExport_releaseComments object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAExport_releaseComments object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAExport_releaseComments obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAExport_releaseComments);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseComments obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAExport_releaseComments obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAExport_releaseComments LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAExport_releaseComments LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAExport_releaseComments object
        /// </summary>
        public virtual ASYCUDAExport_releaseComments Clone()
        {
            return ((ASYCUDAExport_releaseComments)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAAssessment_notice")]
    public partial class ASYCUDAAssessment_notice : System.ComponentModel.INotifyPropertyChanged
    {

        private ObservableCollection<object> item_tax_totalField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAAssessment_notice()
        {
            this.textField = new ObservableCollection<string>();
            this.item_tax_totalField = new ObservableCollection<object>();
        }

        [System.Xml.Serialization.XmlElementAttribute("Item_tax_total")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<object> Item_tax_total
        {
            get
            {
                return this.item_tax_totalField;
            }
            set
            {
                if ((this.item_tax_totalField != null))
                {
                    if ((item_tax_totalField.Equals(value) != true))
                    {
                        this.item_tax_totalField = value;
                        this.OnPropertyChanged("Item_tax_total");
                    }
                }
                else
                {
                    this.item_tax_totalField = value;
                    this.OnPropertyChanged("Item_tax_total");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAAssessment_notice));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAAssessment_notice object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAAssessment_notice object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAAssessment_notice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAAssessment_notice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAAssessment_notice);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAAssessment_notice obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAAssessment_notice Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAAssessment_notice)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAAssessment_notice object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAAssessment_notice object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAAssessment_notice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAAssessment_notice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAAssessment_notice);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAAssessment_notice obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAAssessment_notice obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAAssessment_notice LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAAssessment_notice LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAAssessment_notice object
        /// </summary>
        public virtual ASYCUDAAssessment_notice Clone()
        {
            return ((ASYCUDAAssessment_notice)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGlobal_taxes")]
    public partial class ASYCUDAGlobal_taxes : System.ComponentModel.INotifyPropertyChanged
    {

        private ObservableCollection<object> global_tax_itemField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGlobal_taxes()
        {
            this.textField = new ObservableCollection<string>();
            this.global_tax_itemField = new ObservableCollection<object>();
        }

        [System.Xml.Serialization.XmlElementAttribute("Global_tax_item")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<object> Global_tax_item
        {
            get
            {
                return this.global_tax_itemField;
            }
            set
            {
                if ((this.global_tax_itemField != null))
                {
                    if ((global_tax_itemField.Equals(value) != true))
                    {
                        this.global_tax_itemField = value;
                        this.OnPropertyChanged("Global_tax_item");
                    }
                }
                else
                {
                    this.global_tax_itemField = value;
                    this.OnPropertyChanged("Global_tax_item");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGlobal_taxes));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGlobal_taxes object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGlobal_taxes object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGlobal_taxes object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGlobal_taxes obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGlobal_taxes);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGlobal_taxes obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGlobal_taxes Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGlobal_taxes)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGlobal_taxes object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGlobal_taxes object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGlobal_taxes object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGlobal_taxes obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGlobal_taxes);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGlobal_taxes obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGlobal_taxes obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGlobal_taxes LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGlobal_taxes LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGlobal_taxes object
        /// </summary>
        public virtual ASYCUDAGlobal_taxes Clone()
        {
            return ((ASYCUDAGlobal_taxes)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAProperty")]
    public partial class ASYCUDAProperty : System.ComponentModel.INotifyPropertyChanged
    {

        private string sad_flowField;

        private ASYCUDAPropertyForms formsField;

        private ASYCUDAPropertyNbers nbersField;

        private ASYCUDAPropertyPlace_of_declaration place_of_declarationField;

        private object date_of_declarationField;

        private string selected_pageField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAProperty()
        {
            this.textField = new ObservableCollection<string>();
            this.place_of_declarationField = new ASYCUDAPropertyPlace_of_declaration();
            this.nbersField = new ASYCUDAPropertyNbers();
            this.formsField = new ASYCUDAPropertyForms();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sad_flow
        {
            get
            {
                return this.sad_flowField;
            }
            set
            {
                if ((this.sad_flowField != null))
                {
                    if ((sad_flowField.Equals(value) != true))
                    {
                        this.sad_flowField = value;
                        this.OnPropertyChanged("Sad_flow");
                    }
                }
                else
                {
                    this.sad_flowField = value;
                    this.OnPropertyChanged("Sad_flow");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAPropertyForms Forms
        {
            get
            {
                return this.formsField;
            }
            set
            {
                if ((this.formsField != null))
                {
                    if ((formsField.Equals(value) != true))
                    {
                        this.formsField = value;
                        this.OnPropertyChanged("Forms");
                    }
                }
                else
                {
                    this.formsField = value;
                    this.OnPropertyChanged("Forms");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAPropertyNbers Nbers
        {
            get
            {
                return this.nbersField;
            }
            set
            {
                if ((this.nbersField != null))
                {
                    if ((nbersField.Equals(value) != true))
                    {
                        this.nbersField = value;
                        this.OnPropertyChanged("Nbers");
                    }
                }
                else
                {
                    this.nbersField = value;
                    this.OnPropertyChanged("Nbers");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAPropertyPlace_of_declaration Place_of_declaration
        {
            get
            {
                return this.place_of_declarationField;
            }
            set
            {
                if ((this.place_of_declarationField != null))
                {
                    if ((place_of_declarationField.Equals(value) != true))
                    {
                        this.place_of_declarationField = value;
                        this.OnPropertyChanged("Place_of_declaration");
                    }
                }
                else
                {
                    this.place_of_declarationField = value;
                    this.OnPropertyChanged("Place_of_declaration");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Date_of_declaration
        {
            get
            {
                return this.date_of_declarationField;
            }
            set
            {
                if ((this.date_of_declarationField != null))
                {
                    if ((date_of_declarationField.Equals(value) != true))
                    {
                        this.date_of_declarationField = value;
                        this.OnPropertyChanged("Date_of_declaration");
                    }
                }
                else
                {
                    this.date_of_declarationField = value;
                    this.OnPropertyChanged("Date_of_declaration");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Selected_page
        {
            get
            {
                return this.selected_pageField;
            }
            set
            {
                if ((this.selected_pageField != null))
                {
                    if ((selected_pageField.Equals(value) != true))
                    {
                        this.selected_pageField = value;
                        this.OnPropertyChanged("Selected_page");
                    }
                }
                else
                {
                    this.selected_pageField = value;
                    this.OnPropertyChanged("Selected_page");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAProperty));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAProperty object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAProperty object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAProperty object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAProperty obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAProperty);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAProperty obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAProperty Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAProperty)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAProperty object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAProperty object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAProperty object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAProperty obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAProperty);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAProperty obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAProperty obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAProperty LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAProperty LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAProperty object
        /// </summary>
        public virtual ASYCUDAProperty Clone()
        {
            return ((ASYCUDAProperty)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAPropertyForms")]
    public partial class ASYCUDAPropertyForms : System.ComponentModel.INotifyPropertyChanged
    {

        private string number_of_the_formField;

        private string total_number_of_formsField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAPropertyForms()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number_of_the_form
        {
            get
            {
                return this.number_of_the_formField;
            }
            set
            {
                if ((this.number_of_the_formField != null))
                {
                    if ((number_of_the_formField.Equals(value) != true))
                    {
                        this.number_of_the_formField = value;
                        this.OnPropertyChanged("Number_of_the_form");
                    }
                }
                else
                {
                    this.number_of_the_formField = value;
                    this.OnPropertyChanged("Number_of_the_form");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_number_of_forms
        {
            get
            {
                return this.total_number_of_formsField;
            }
            set
            {
                if ((this.total_number_of_formsField != null))
                {
                    if ((total_number_of_formsField.Equals(value) != true))
                    {
                        this.total_number_of_formsField = value;
                        this.OnPropertyChanged("Total_number_of_forms");
                    }
                }
                else
                {
                    this.total_number_of_formsField = value;
                    this.OnPropertyChanged("Total_number_of_forms");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAPropertyForms));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAPropertyForms object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAPropertyForms object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAPropertyForms object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAPropertyForms obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPropertyForms);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAPropertyForms obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAPropertyForms Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAPropertyForms)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAPropertyForms object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAPropertyForms object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAPropertyForms object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAPropertyForms obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPropertyForms);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPropertyForms obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPropertyForms obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAPropertyForms LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAPropertyForms LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAPropertyForms object
        /// </summary>
        public virtual ASYCUDAPropertyForms Clone()
        {
            return ((ASYCUDAPropertyForms)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAPropertyNbers")]
    public partial class ASYCUDAPropertyNbers : System.ComponentModel.INotifyPropertyChanged
    {

        private string number_of_loading_listsField;

        private string total_number_of_itemsField;

        private string total_number_of_packagesField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAPropertyNbers()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number_of_loading_lists
        {
            get
            {
                return this.number_of_loading_listsField;
            }
            set
            {
                if ((this.number_of_loading_listsField != null))
                {
                    if ((number_of_loading_listsField.Equals(value) != true))
                    {
                        this.number_of_loading_listsField = value;
                        this.OnPropertyChanged("Number_of_loading_lists");
                    }
                }
                else
                {
                    this.number_of_loading_listsField = value;
                    this.OnPropertyChanged("Number_of_loading_lists");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_number_of_items
        {
            get
            {
                return this.total_number_of_itemsField;
            }
            set
            {
                if ((this.total_number_of_itemsField != null))
                {
                    if ((total_number_of_itemsField.Equals(value) != true))
                    {
                        this.total_number_of_itemsField = value;
                        this.OnPropertyChanged("Total_number_of_items");
                    }
                }
                else
                {
                    this.total_number_of_itemsField = value;
                    this.OnPropertyChanged("Total_number_of_items");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_number_of_packages
        {
            get
            {
                return this.total_number_of_packagesField;
            }
            set
            {
                if ((this.total_number_of_packagesField != null))
                {
                    if ((total_number_of_packagesField.Equals(value) != true))
                    {
                        this.total_number_of_packagesField = value;
                        this.OnPropertyChanged("Total_number_of_packages");
                    }
                }
                else
                {
                    this.total_number_of_packagesField = value;
                    this.OnPropertyChanged("Total_number_of_packages");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAPropertyNbers));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAPropertyNbers object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAPropertyNbers object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAPropertyNbers object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAPropertyNbers obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPropertyNbers);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAPropertyNbers obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAPropertyNbers Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAPropertyNbers)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAPropertyNbers object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAPropertyNbers object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAPropertyNbers object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAPropertyNbers obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPropertyNbers);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPropertyNbers obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPropertyNbers obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAPropertyNbers LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAPropertyNbers LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAPropertyNbers object
        /// </summary>
        public virtual ASYCUDAPropertyNbers Clone()
        {
            return ((ASYCUDAPropertyNbers)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAPropertyPlace_of_declaration")]
    public partial class ASYCUDAPropertyPlace_of_declaration : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAPropertyPlace_of_declaration()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAPropertyPlace_of_declaration));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAPropertyPlace_of_declaration object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAPropertyPlace_of_declaration object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAPropertyPlace_of_declaration object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAPropertyPlace_of_declaration obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPropertyPlace_of_declaration);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAPropertyPlace_of_declaration obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAPropertyPlace_of_declaration Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAPropertyPlace_of_declaration)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAPropertyPlace_of_declaration object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAPropertyPlace_of_declaration object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAPropertyPlace_of_declaration object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAPropertyPlace_of_declaration obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPropertyPlace_of_declaration);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPropertyPlace_of_declaration obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPropertyPlace_of_declaration obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAPropertyPlace_of_declaration LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAPropertyPlace_of_declaration LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAPropertyPlace_of_declaration object
        /// </summary>
        public virtual ASYCUDAPropertyPlace_of_declaration Clone()
        {
            return ((ASYCUDAPropertyPlace_of_declaration)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentification")]
    public partial class ASYCUDAIdentification : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAIdentificationOffice_segment office_segmentField;

        private ASYCUDAIdentificationType typeField;

        private ASYCUDAIdentificationManifest_reference_number manifest_reference_numberField;

        private ASYCUDAIdentificationRegistration registrationField;

        private ASYCUDAIdentificationAssessment assessmentField;

        private ASYCUDAIdentificationReceipt receiptField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentification()
        {
            this.textField = new ObservableCollection<string>();
            this.receiptField = new ASYCUDAIdentificationReceipt();
            this.assessmentField = new ASYCUDAIdentificationAssessment();
            this.registrationField = new ASYCUDAIdentificationRegistration();
            this.manifest_reference_numberField = new ASYCUDAIdentificationManifest_reference_number();
            this.typeField = new ASYCUDAIdentificationType();
            this.office_segmentField = new ASYCUDAIdentificationOffice_segment();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationOffice_segment Office_segment
        {
            get
            {
                return this.office_segmentField;
            }
            set
            {
                if ((this.office_segmentField != null))
                {
                    if ((office_segmentField.Equals(value) != true))
                    {
                        this.office_segmentField = value;
                        this.OnPropertyChanged("Office_segment");
                    }
                }
                else
                {
                    this.office_segmentField = value;
                    this.OnPropertyChanged("Office_segment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("Type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationManifest_reference_number Manifest_reference_number
        {
            get
            {
                return this.manifest_reference_numberField;
            }
            set
            {
                if ((this.manifest_reference_numberField != null))
                {
                    if ((manifest_reference_numberField.Equals(value) != true))
                    {
                        this.manifest_reference_numberField = value;
                        this.OnPropertyChanged("Manifest_reference_number");
                    }
                }
                else
                {
                    this.manifest_reference_numberField = value;
                    this.OnPropertyChanged("Manifest_reference_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationRegistration Registration
        {
            get
            {
                return this.registrationField;
            }
            set
            {
                if ((this.registrationField != null))
                {
                    if ((registrationField.Equals(value) != true))
                    {
                        this.registrationField = value;
                        this.OnPropertyChanged("Registration");
                    }
                }
                else
                {
                    this.registrationField = value;
                    this.OnPropertyChanged("Registration");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationAssessment Assessment
        {
            get
            {
                return this.assessmentField;
            }
            set
            {
                if ((this.assessmentField != null))
                {
                    if ((assessmentField.Equals(value) != true))
                    {
                        this.assessmentField = value;
                        this.OnPropertyChanged("Assessment");
                    }
                }
                else
                {
                    this.assessmentField = value;
                    this.OnPropertyChanged("Assessment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationReceipt receipt
        {
            get
            {
                return this.receiptField;
            }
            set
            {
                if ((this.receiptField != null))
                {
                    if ((receiptField.Equals(value) != true))
                    {
                        this.receiptField = value;
                        this.OnPropertyChanged("receipt");
                    }
                }
                else
                {
                    this.receiptField = value;
                    this.OnPropertyChanged("receipt");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentification));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentification object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentification object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentification object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentification obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentification);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentification obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentification Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentification)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentification object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentification object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentification object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentification obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentification);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentification obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentification obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentification LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentification LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentification object
        /// </summary>
        public virtual ASYCUDAIdentification Clone()
        {
            return ((ASYCUDAIdentification)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationOffice_segment")]
    public partial class ASYCUDAIdentificationOffice_segment : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code customs_clearance_office_codeField;

        private ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name customs_Clearance_office_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationOffice_segment()
        {
            this.textField = new ObservableCollection<string>();
            this.customs_Clearance_office_nameField = new ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name();
            this.customs_clearance_office_codeField = new ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code Customs_clearance_office_code
        {
            get
            {
                return this.customs_clearance_office_codeField;
            }
            set
            {
                if ((this.customs_clearance_office_codeField != null))
                {
                    if ((customs_clearance_office_codeField.Equals(value) != true))
                    {
                        this.customs_clearance_office_codeField = value;
                        this.OnPropertyChanged("Customs_clearance_office_code");
                    }
                }
                else
                {
                    this.customs_clearance_office_codeField = value;
                    this.OnPropertyChanged("Customs_clearance_office_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name Customs_Clearance_office_name
        {
            get
            {
                return this.customs_Clearance_office_nameField;
            }
            set
            {
                if ((this.customs_Clearance_office_nameField != null))
                {
                    if ((customs_Clearance_office_nameField.Equals(value) != true))
                    {
                        this.customs_Clearance_office_nameField = value;
                        this.OnPropertyChanged("Customs_Clearance_office_name");
                    }
                }
                else
                {
                    this.customs_Clearance_office_nameField = value;
                    this.OnPropertyChanged("Customs_Clearance_office_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationOffice_segment));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationOffice_segment object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationOffice_segment object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationOffice_segment object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationOffice_segment obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationOffice_segment);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationOffice_segment obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationOffice_segment Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationOffice_segment)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationOffice_segment object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationOffice_segment object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationOffice_segment object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationOffice_segment obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationOffice_segment);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationOffice_segment obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationOffice_segment obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationOffice_segment LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationOffice_segment LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationOffice_segment object
        /// </summary>
        public virtual ASYCUDAIdentificationOffice_segment Clone()
        {
            return ((ASYCUDAIdentificationOffice_segment)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code")]
    public partial class ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code object
        /// </summary>
        public virtual ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code Clone()
        {
            return ((ASYCUDAIdentificationOffice_segmentCustoms_clearance_office_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name")]
    public partial class ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name object
        /// </summary>
        public virtual ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name Clone()
        {
            return ((ASYCUDAIdentificationOffice_segmentCustoms_Clearance_office_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationType")]
    public partial class ASYCUDAIdentificationType : System.ComponentModel.INotifyPropertyChanged
    {

        private string type_of_declarationField;

        private string declaration_gen_procedure_codeField;

        private ASYCUDAIdentificationTypeType_of_transit_document type_of_transit_documentField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationType()
        {
            this.textField = new ObservableCollection<string>();
            this.type_of_transit_documentField = new ASYCUDAIdentificationTypeType_of_transit_document();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type_of_declaration
        {
            get
            {
                return this.type_of_declarationField;
            }
            set
            {
                if ((this.type_of_declarationField != null))
                {
                    if ((type_of_declarationField.Equals(value) != true))
                    {
                        this.type_of_declarationField = value;
                        this.OnPropertyChanged("Type_of_declaration");
                    }
                }
                else
                {
                    this.type_of_declarationField = value;
                    this.OnPropertyChanged("Type_of_declaration");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Declaration_gen_procedure_code
        {
            get
            {
                return this.declaration_gen_procedure_codeField;
            }
            set
            {
                if ((this.declaration_gen_procedure_codeField != null))
                {
                    if ((declaration_gen_procedure_codeField.Equals(value) != true))
                    {
                        this.declaration_gen_procedure_codeField = value;
                        this.OnPropertyChanged("Declaration_gen_procedure_code");
                    }
                }
                else
                {
                    this.declaration_gen_procedure_codeField = value;
                    this.OnPropertyChanged("Declaration_gen_procedure_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationTypeType_of_transit_document Type_of_transit_document
        {
            get
            {
                return this.type_of_transit_documentField;
            }
            set
            {
                if ((this.type_of_transit_documentField != null))
                {
                    if ((type_of_transit_documentField.Equals(value) != true))
                    {
                        this.type_of_transit_documentField = value;
                        this.OnPropertyChanged("Type_of_transit_document");
                    }
                }
                else
                {
                    this.type_of_transit_documentField = value;
                    this.OnPropertyChanged("Type_of_transit_document");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationType));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationType object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationType object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationType obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationType);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationType obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationType Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationType)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationType object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationType object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationType obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationType);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationType obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationType obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationType LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationType LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationType object
        /// </summary>
        public virtual ASYCUDAIdentificationType Clone()
        {
            return ((ASYCUDAIdentificationType)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationTypeType_of_transit_document")]
    public partial class ASYCUDAIdentificationTypeType_of_transit_document : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationTypeType_of_transit_document()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationTypeType_of_transit_document));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationTypeType_of_transit_document object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationTypeType_of_transit_document object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationTypeType_of_transit_document object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationTypeType_of_transit_document obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationTypeType_of_transit_document);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationTypeType_of_transit_document obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationTypeType_of_transit_document Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationTypeType_of_transit_document)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationTypeType_of_transit_document object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationTypeType_of_transit_document object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationTypeType_of_transit_document object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationTypeType_of_transit_document obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationTypeType_of_transit_document);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationTypeType_of_transit_document obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationTypeType_of_transit_document obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationTypeType_of_transit_document LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationTypeType_of_transit_document LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationTypeType_of_transit_document object
        /// </summary>
        public virtual ASYCUDAIdentificationTypeType_of_transit_document Clone()
        {
            return ((ASYCUDAIdentificationTypeType_of_transit_document)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationManifest_reference_number")]
    public partial class ASYCUDAIdentificationManifest_reference_number : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationManifest_reference_number()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationManifest_reference_number));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationManifest_reference_number object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationManifest_reference_number object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationManifest_reference_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationManifest_reference_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationManifest_reference_number);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationManifest_reference_number obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationManifest_reference_number Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationManifest_reference_number)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationManifest_reference_number object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationManifest_reference_number object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationManifest_reference_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationManifest_reference_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationManifest_reference_number);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationManifest_reference_number obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationManifest_reference_number obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationManifest_reference_number LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationManifest_reference_number LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationManifest_reference_number object
        /// </summary>
        public virtual ASYCUDAIdentificationManifest_reference_number Clone()
        {
            return ((ASYCUDAIdentificationManifest_reference_number)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationRegistration")]
    public partial class ASYCUDAIdentificationRegistration : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAIdentificationRegistrationSerial_number serial_numberField;

        private string numberField;

        private string dateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationRegistration()
        {
            this.textField = new ObservableCollection<string>();
            this.serial_numberField = new ASYCUDAIdentificationRegistrationSerial_number();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationRegistrationSerial_number Serial_number
        {
            get
            {
                return this.serial_numberField;
            }
            set
            {
                if ((this.serial_numberField != null))
                {
                    if ((serial_numberField.Equals(value) != true))
                    {
                        this.serial_numberField = value;
                        this.OnPropertyChanged("Serial_number");
                    }
                }
                else
                {
                    this.serial_numberField = value;
                    this.OnPropertyChanged("Serial_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                if ((this.numberField != null))
                {
                    if ((numberField.Equals(value) != true))
                    {
                        this.numberField = value;
                        this.OnPropertyChanged("Number");
                    }
                }
                else
                {
                    this.numberField = value;
                    this.OnPropertyChanged("Number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((this.dateField != null))
                {
                    if ((dateField.Equals(value) != true))
                    {
                        this.dateField = value;
                        this.OnPropertyChanged("Date");
                    }
                }
                else
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationRegistration));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationRegistration object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationRegistration object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationRegistration object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationRegistration obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationRegistration);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationRegistration obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationRegistration Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationRegistration)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationRegistration object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationRegistration object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationRegistration object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationRegistration obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationRegistration);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationRegistration obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationRegistration obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationRegistration LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationRegistration LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationRegistration object
        /// </summary>
        public virtual ASYCUDAIdentificationRegistration Clone()
        {
            return ((ASYCUDAIdentificationRegistration)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationRegistrationSerial_number")]
    public partial class ASYCUDAIdentificationRegistrationSerial_number : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationRegistrationSerial_number()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationRegistrationSerial_number));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationRegistrationSerial_number object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationRegistrationSerial_number object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationRegistrationSerial_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationRegistrationSerial_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationRegistrationSerial_number);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationRegistrationSerial_number obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationRegistrationSerial_number Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationRegistrationSerial_number)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationRegistrationSerial_number object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationRegistrationSerial_number object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationRegistrationSerial_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationRegistrationSerial_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationRegistrationSerial_number);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationRegistrationSerial_number obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationRegistrationSerial_number obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationRegistrationSerial_number LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationRegistrationSerial_number LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationRegistrationSerial_number object
        /// </summary>
        public virtual ASYCUDAIdentificationRegistrationSerial_number Clone()
        {
            return ((ASYCUDAIdentificationRegistrationSerial_number)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationAssessment")]
    public partial class ASYCUDAIdentificationAssessment : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAIdentificationAssessmentSerial_number serial_numberField;

        private string numberField;

        private string dateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationAssessment()
        {
            this.textField = new ObservableCollection<string>();
            this.serial_numberField = new ASYCUDAIdentificationAssessmentSerial_number();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationAssessmentSerial_number Serial_number
        {
            get
            {
                return this.serial_numberField;
            }
            set
            {
                if ((this.serial_numberField != null))
                {
                    if ((serial_numberField.Equals(value) != true))
                    {
                        this.serial_numberField = value;
                        this.OnPropertyChanged("Serial_number");
                    }
                }
                else
                {
                    this.serial_numberField = value;
                    this.OnPropertyChanged("Serial_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                if ((this.numberField != null))
                {
                    if ((numberField.Equals(value) != true))
                    {
                        this.numberField = value;
                        this.OnPropertyChanged("Number");
                    }
                }
                else
                {
                    this.numberField = value;
                    this.OnPropertyChanged("Number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((this.dateField != null))
                {
                    if ((dateField.Equals(value) != true))
                    {
                        this.dateField = value;
                        this.OnPropertyChanged("Date");
                    }
                }
                else
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationAssessment));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationAssessment object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationAssessment object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationAssessment object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationAssessment obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationAssessment);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationAssessment obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationAssessment Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationAssessment)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationAssessment object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationAssessment object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationAssessment object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationAssessment obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationAssessment);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationAssessment obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationAssessment obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationAssessment LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationAssessment LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationAssessment object
        /// </summary>
        public virtual ASYCUDAIdentificationAssessment Clone()
        {
            return ((ASYCUDAIdentificationAssessment)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationAssessmentSerial_number")]
    public partial class ASYCUDAIdentificationAssessmentSerial_number : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationAssessmentSerial_number()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationAssessmentSerial_number));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationAssessmentSerial_number object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationAssessmentSerial_number object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationAssessmentSerial_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationAssessmentSerial_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationAssessmentSerial_number);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationAssessmentSerial_number obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationAssessmentSerial_number Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationAssessmentSerial_number)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationAssessmentSerial_number object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationAssessmentSerial_number object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationAssessmentSerial_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationAssessmentSerial_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationAssessmentSerial_number);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationAssessmentSerial_number obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationAssessmentSerial_number obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationAssessmentSerial_number LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationAssessmentSerial_number LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationAssessmentSerial_number object
        /// </summary>
        public virtual ASYCUDAIdentificationAssessmentSerial_number Clone()
        {
            return ((ASYCUDAIdentificationAssessmentSerial_number)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationReceipt")]
    public partial class ASYCUDAIdentificationReceipt : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAIdentificationReceiptSerial_number serial_numberField;

        private string numberField;

        private string dateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationReceipt()
        {
            this.textField = new ObservableCollection<string>();
            this.serial_numberField = new ASYCUDAIdentificationReceiptSerial_number();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAIdentificationReceiptSerial_number Serial_number
        {
            get
            {
                return this.serial_numberField;
            }
            set
            {
                if ((this.serial_numberField != null))
                {
                    if ((serial_numberField.Equals(value) != true))
                    {
                        this.serial_numberField = value;
                        this.OnPropertyChanged("Serial_number");
                    }
                }
                else
                {
                    this.serial_numberField = value;
                    this.OnPropertyChanged("Serial_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                if ((this.numberField != null))
                {
                    if ((numberField.Equals(value) != true))
                    {
                        this.numberField = value;
                        this.OnPropertyChanged("Number");
                    }
                }
                else
                {
                    this.numberField = value;
                    this.OnPropertyChanged("Number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((this.dateField != null))
                {
                    if ((dateField.Equals(value) != true))
                    {
                        this.dateField = value;
                        this.OnPropertyChanged("Date");
                    }
                }
                else
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationReceipt));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationReceipt object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationReceipt object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationReceipt object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationReceipt obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationReceipt);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationReceipt obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationReceipt Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationReceipt)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationReceipt object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationReceipt object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationReceipt object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationReceipt obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationReceipt);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationReceipt obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationReceipt obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationReceipt LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationReceipt LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationReceipt object
        /// </summary>
        public virtual ASYCUDAIdentificationReceipt Clone()
        {
            return ((ASYCUDAIdentificationReceipt)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAIdentificationReceiptSerial_number")]
    public partial class ASYCUDAIdentificationReceiptSerial_number : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAIdentificationReceiptSerial_number()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAIdentificationReceiptSerial_number));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAIdentificationReceiptSerial_number object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAIdentificationReceiptSerial_number object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationReceiptSerial_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAIdentificationReceiptSerial_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationReceiptSerial_number);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAIdentificationReceiptSerial_number obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAIdentificationReceiptSerial_number Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAIdentificationReceiptSerial_number)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAIdentificationReceiptSerial_number object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAIdentificationReceiptSerial_number object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAIdentificationReceiptSerial_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAIdentificationReceiptSerial_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAIdentificationReceiptSerial_number);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationReceiptSerial_number obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAIdentificationReceiptSerial_number obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAIdentificationReceiptSerial_number LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAIdentificationReceiptSerial_number LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAIdentificationReceiptSerial_number object
        /// </summary>
        public virtual ASYCUDAIdentificationReceiptSerial_number Clone()
        {
            return ((ASYCUDAIdentificationReceiptSerial_number)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATraders")]
    public partial class ASYCUDATraders : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATradersExporter exporterField;

        private ASYCUDATradersConsignee consigneeField;

        private ASYCUDATradersFinancial financialField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATraders()
        {
            this.textField = new ObservableCollection<string>();
            this.financialField = new ASYCUDATradersFinancial();
            this.consigneeField = new ASYCUDATradersConsignee();
            this.exporterField = new ASYCUDATradersExporter();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersExporter Exporter
        {
            get
            {
                return this.exporterField;
            }
            set
            {
                if ((this.exporterField != null))
                {
                    if ((exporterField.Equals(value) != true))
                    {
                        this.exporterField = value;
                        this.OnPropertyChanged("Exporter");
                    }
                }
                else
                {
                    this.exporterField = value;
                    this.OnPropertyChanged("Exporter");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersConsignee Consignee
        {
            get
            {
                return this.consigneeField;
            }
            set
            {
                if ((this.consigneeField != null))
                {
                    if ((consigneeField.Equals(value) != true))
                    {
                        this.consigneeField = value;
                        this.OnPropertyChanged("Consignee");
                    }
                }
                else
                {
                    this.consigneeField = value;
                    this.OnPropertyChanged("Consignee");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersFinancial Financial
        {
            get
            {
                return this.financialField;
            }
            set
            {
                if ((this.financialField != null))
                {
                    if ((financialField.Equals(value) != true))
                    {
                        this.financialField = value;
                        this.OnPropertyChanged("Financial");
                    }
                }
                else
                {
                    this.financialField = value;
                    this.OnPropertyChanged("Financial");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATraders));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATraders object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATraders object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATraders object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATraders obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATraders);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATraders obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATraders Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATraders)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATraders object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATraders object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATraders object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATraders obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATraders);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATraders obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATraders obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATraders LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATraders LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATraders object
        /// </summary>
        public virtual ASYCUDATraders Clone()
        {
            return ((ASYCUDATraders)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersExporter")]
    public partial class ASYCUDATradersExporter : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATradersExporterExporter_code exporter_codeField;

        private ASYCUDATradersExporterExporter_name exporter_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersExporter()
        {
            this.textField = new ObservableCollection<string>();
            this.exporter_nameField = new ASYCUDATradersExporterExporter_name();
            this.exporter_codeField = new ASYCUDATradersExporterExporter_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersExporterExporter_code Exporter_code
        {
            get
            {
                return this.exporter_codeField;
            }
            set
            {
                if ((this.exporter_codeField != null))
                {
                    if ((exporter_codeField.Equals(value) != true))
                    {
                        this.exporter_codeField = value;
                        this.OnPropertyChanged("Exporter_code");
                    }
                }
                else
                {
                    this.exporter_codeField = value;
                    this.OnPropertyChanged("Exporter_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersExporterExporter_name Exporter_name
        {
            get
            {
                return this.exporter_nameField;
            }
            set
            {
                if ((this.exporter_nameField != null))
                {
                    if ((exporter_nameField.Equals(value) != true))
                    {
                        this.exporter_nameField = value;
                        this.OnPropertyChanged("Exporter_name");
                    }
                }
                else
                {
                    this.exporter_nameField = value;
                    this.OnPropertyChanged("Exporter_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersExporter));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersExporter object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersExporter object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersExporter object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersExporter obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersExporter);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersExporter obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersExporter Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersExporter)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersExporter object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersExporter object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersExporter object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersExporter obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersExporter);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersExporter obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersExporter obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersExporter LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersExporter LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersExporter object
        /// </summary>
        public virtual ASYCUDATradersExporter Clone()
        {
            return ((ASYCUDATradersExporter)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersExporterExporter_code")]
    public partial class ASYCUDATradersExporterExporter_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersExporterExporter_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersExporterExporter_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersExporterExporter_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersExporterExporter_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersExporterExporter_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersExporterExporter_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersExporterExporter_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersExporterExporter_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersExporterExporter_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersExporterExporter_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersExporterExporter_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersExporterExporter_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersExporterExporter_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersExporterExporter_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersExporterExporter_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersExporterExporter_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersExporterExporter_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersExporterExporter_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersExporterExporter_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersExporterExporter_code object
        /// </summary>
        public virtual ASYCUDATradersExporterExporter_code Clone()
        {
            return ((ASYCUDATradersExporterExporter_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersExporterExporter_name")]
    public partial class ASYCUDATradersExporterExporter_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersExporterExporter_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersExporterExporter_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersExporterExporter_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersExporterExporter_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersExporterExporter_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersExporterExporter_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersExporterExporter_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersExporterExporter_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersExporterExporter_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersExporterExporter_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersExporterExporter_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersExporterExporter_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersExporterExporter_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersExporterExporter_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersExporterExporter_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersExporterExporter_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersExporterExporter_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersExporterExporter_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersExporterExporter_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersExporterExporter_name object
        /// </summary>
        public virtual ASYCUDATradersExporterExporter_name Clone()
        {
            return ((ASYCUDATradersExporterExporter_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersConsignee")]
    public partial class ASYCUDATradersConsignee : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATradersConsigneeConsignee_code consignee_codeField;

        private ASYCUDATradersConsigneeConsignee_name consignee_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersConsignee()
        {
            this.textField = new ObservableCollection<string>();
            this.consignee_nameField = new ASYCUDATradersConsigneeConsignee_name();
            this.consignee_codeField = new ASYCUDATradersConsigneeConsignee_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersConsigneeConsignee_code Consignee_code
        {
            get
            {
                return this.consignee_codeField;
            }
            set
            {
                if ((this.consignee_codeField != null))
                {
                    if ((consignee_codeField.Equals(value) != true))
                    {
                        this.consignee_codeField = value;
                        this.OnPropertyChanged("Consignee_code");
                    }
                }
                else
                {
                    this.consignee_codeField = value;
                    this.OnPropertyChanged("Consignee_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersConsigneeConsignee_name Consignee_name
        {
            get
            {
                return this.consignee_nameField;
            }
            set
            {
                if ((this.consignee_nameField != null))
                {
                    if ((consignee_nameField.Equals(value) != true))
                    {
                        this.consignee_nameField = value;
                        this.OnPropertyChanged("Consignee_name");
                    }
                }
                else
                {
                    this.consignee_nameField = value;
                    this.OnPropertyChanged("Consignee_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersConsignee));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersConsignee object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersConsignee object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersConsignee object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersConsignee obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersConsignee);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersConsignee obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersConsignee Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersConsignee)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersConsignee object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersConsignee object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersConsignee object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersConsignee obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersConsignee);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersConsignee obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersConsignee obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersConsignee LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersConsignee LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersConsignee object
        /// </summary>
        public virtual ASYCUDATradersConsignee Clone()
        {
            return ((ASYCUDATradersConsignee)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersConsigneeConsignee_code")]
    public partial class ASYCUDATradersConsigneeConsignee_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersConsigneeConsignee_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersConsigneeConsignee_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersConsigneeConsignee_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersConsigneeConsignee_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersConsigneeConsignee_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersConsigneeConsignee_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersConsigneeConsignee_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersConsigneeConsignee_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersConsigneeConsignee_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersConsigneeConsignee_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersConsigneeConsignee_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersConsigneeConsignee_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersConsigneeConsignee_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersConsigneeConsignee_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersConsigneeConsignee_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersConsigneeConsignee_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersConsigneeConsignee_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersConsigneeConsignee_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersConsigneeConsignee_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersConsigneeConsignee_code object
        /// </summary>
        public virtual ASYCUDATradersConsigneeConsignee_code Clone()
        {
            return ((ASYCUDATradersConsigneeConsignee_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersConsigneeConsignee_name")]
    public partial class ASYCUDATradersConsigneeConsignee_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersConsigneeConsignee_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersConsigneeConsignee_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersConsigneeConsignee_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersConsigneeConsignee_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersConsigneeConsignee_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersConsigneeConsignee_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersConsigneeConsignee_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersConsigneeConsignee_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersConsigneeConsignee_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersConsigneeConsignee_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersConsigneeConsignee_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersConsigneeConsignee_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersConsigneeConsignee_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersConsigneeConsignee_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersConsigneeConsignee_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersConsigneeConsignee_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersConsigneeConsignee_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersConsigneeConsignee_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersConsigneeConsignee_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersConsigneeConsignee_name object
        /// </summary>
        public virtual ASYCUDATradersConsigneeConsignee_name Clone()
        {
            return ((ASYCUDATradersConsigneeConsignee_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersFinancial")]
    public partial class ASYCUDATradersFinancial : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATradersFinancialFinancial_code financial_codeField;

        private ASYCUDATradersFinancialFinancial_name financial_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersFinancial()
        {
            this.textField = new ObservableCollection<string>();
            this.financial_nameField = new ASYCUDATradersFinancialFinancial_name();
            this.financial_codeField = new ASYCUDATradersFinancialFinancial_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersFinancialFinancial_code Financial_code
        {
            get
            {
                return this.financial_codeField;
            }
            set
            {
                if ((this.financial_codeField != null))
                {
                    if ((financial_codeField.Equals(value) != true))
                    {
                        this.financial_codeField = value;
                        this.OnPropertyChanged("Financial_code");
                    }
                }
                else
                {
                    this.financial_codeField = value;
                    this.OnPropertyChanged("Financial_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATradersFinancialFinancial_name Financial_name
        {
            get
            {
                return this.financial_nameField;
            }
            set
            {
                if ((this.financial_nameField != null))
                {
                    if ((financial_nameField.Equals(value) != true))
                    {
                        this.financial_nameField = value;
                        this.OnPropertyChanged("Financial_name");
                    }
                }
                else
                {
                    this.financial_nameField = value;
                    this.OnPropertyChanged("Financial_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersFinancial));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersFinancial object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersFinancial object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersFinancial object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersFinancial obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersFinancial);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersFinancial obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersFinancial Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersFinancial)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersFinancial object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersFinancial object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersFinancial object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersFinancial obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersFinancial);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersFinancial obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersFinancial obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersFinancial LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersFinancial LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersFinancial object
        /// </summary>
        public virtual ASYCUDATradersFinancial Clone()
        {
            return ((ASYCUDATradersFinancial)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersFinancialFinancial_code")]
    public partial class ASYCUDATradersFinancialFinancial_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersFinancialFinancial_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersFinancialFinancial_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersFinancialFinancial_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersFinancialFinancial_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersFinancialFinancial_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersFinancialFinancial_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersFinancialFinancial_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersFinancialFinancial_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersFinancialFinancial_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersFinancialFinancial_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersFinancialFinancial_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersFinancialFinancial_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersFinancialFinancial_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersFinancialFinancial_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersFinancialFinancial_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersFinancialFinancial_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersFinancialFinancial_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersFinancialFinancial_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersFinancialFinancial_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersFinancialFinancial_code object
        /// </summary>
        public virtual ASYCUDATradersFinancialFinancial_code Clone()
        {
            return ((ASYCUDATradersFinancialFinancial_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATradersFinancialFinancial_name")]
    public partial class ASYCUDATradersFinancialFinancial_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATradersFinancialFinancial_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATradersFinancialFinancial_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATradersFinancialFinancial_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATradersFinancialFinancial_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATradersFinancialFinancial_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATradersFinancialFinancial_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersFinancialFinancial_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATradersFinancialFinancial_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATradersFinancialFinancial_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATradersFinancialFinancial_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATradersFinancialFinancial_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATradersFinancialFinancial_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATradersFinancialFinancial_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATradersFinancialFinancial_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATradersFinancialFinancial_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersFinancialFinancial_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATradersFinancialFinancial_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATradersFinancialFinancial_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATradersFinancialFinancial_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATradersFinancialFinancial_name object
        /// </summary>
        public virtual ASYCUDATradersFinancialFinancial_name Clone()
        {
            return ((ASYCUDATradersFinancialFinancial_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDADeclarant")]
    public partial class ASYCUDADeclarant : System.ComponentModel.INotifyPropertyChanged
    {

        private string declarant_codeField;

        private string declarant_nameField;

        private string declarant_representativeField;

        private ASYCUDADeclarantReference referenceField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDADeclarant()
        {
            this.textField = new ObservableCollection<string>();
            this.referenceField = new ASYCUDADeclarantReference();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Declarant_code
        {
            get
            {
                return this.declarant_codeField;
            }
            set
            {
                if ((this.declarant_codeField != null))
                {
                    if ((declarant_codeField.Equals(value) != true))
                    {
                        this.declarant_codeField = value;
                        this.OnPropertyChanged("Declarant_code");
                    }
                }
                else
                {
                    this.declarant_codeField = value;
                    this.OnPropertyChanged("Declarant_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Declarant_name
        {
            get
            {
                return this.declarant_nameField;
            }
            set
            {
                if ((this.declarant_nameField != null))
                {
                    if ((declarant_nameField.Equals(value) != true))
                    {
                        this.declarant_nameField = value;
                        this.OnPropertyChanged("Declarant_name");
                    }
                }
                else
                {
                    this.declarant_nameField = value;
                    this.OnPropertyChanged("Declarant_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Declarant_representative
        {
            get
            {
                return this.declarant_representativeField;
            }
            set
            {
                if ((this.declarant_representativeField != null))
                {
                    if ((declarant_representativeField.Equals(value) != true))
                    {
                        this.declarant_representativeField = value;
                        this.OnPropertyChanged("Declarant_representative");
                    }
                }
                else
                {
                    this.declarant_representativeField = value;
                    this.OnPropertyChanged("Declarant_representative");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDADeclarantReference Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                if ((this.referenceField != null))
                {
                    if ((referenceField.Equals(value) != true))
                    {
                        this.referenceField = value;
                        this.OnPropertyChanged("Reference");
                    }
                }
                else
                {
                    this.referenceField = value;
                    this.OnPropertyChanged("Reference");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDADeclarant));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDADeclarant object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDADeclarant object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDADeclarant object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDADeclarant obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDADeclarant);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDADeclarant obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDADeclarant Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDADeclarant)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDADeclarant object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDADeclarant object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDADeclarant object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDADeclarant obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDADeclarant);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDADeclarant obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDADeclarant obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDADeclarant LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDADeclarant LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDADeclarant object
        /// </summary>
        public virtual ASYCUDADeclarant Clone()
        {
            return ((ASYCUDADeclarant)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDADeclarantReference")]
    public partial class ASYCUDADeclarantReference : System.ComponentModel.INotifyPropertyChanged
    {

        private string numberField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDADeclarantReference()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                if ((this.numberField != null))
                {
                    if ((numberField.Equals(value) != true))
                    {
                        this.numberField = value;
                        this.OnPropertyChanged("Number");
                    }
                }
                else
                {
                    this.numberField = value;
                    this.OnPropertyChanged("Number");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDADeclarantReference));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDADeclarantReference object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDADeclarantReference object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDADeclarantReference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDADeclarantReference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDADeclarantReference);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDADeclarantReference obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDADeclarantReference Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDADeclarantReference)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDADeclarantReference object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDADeclarantReference object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDADeclarantReference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDADeclarantReference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDADeclarantReference);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDADeclarantReference obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDADeclarantReference obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDADeclarantReference LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDADeclarantReference LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDADeclarantReference object
        /// </summary>
        public virtual ASYCUDADeclarantReference Clone()
        {
            return ((ASYCUDADeclarantReference)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_information")]
    public partial class ASYCUDAGeneral_information : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAGeneral_informationCountry countryField;

        private string value_detailsField;

        private ASYCUDAGeneral_informationCAP cAPField;

        private ASYCUDAGeneral_informationAdditional_information additional_informationField;

        private ASYCUDAGeneral_informationComments_free_text comments_free_textField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_information()
        {
            this.textField = new ObservableCollection<string>();
            this.comments_free_textField = new ASYCUDAGeneral_informationComments_free_text();
            this.additional_informationField = new ASYCUDAGeneral_informationAdditional_information();
            this.cAPField = new ASYCUDAGeneral_informationCAP();
            this.countryField = new ASYCUDAGeneral_informationCountry();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountry Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                if ((this.countryField != null))
                {
                    if ((countryField.Equals(value) != true))
                    {
                        this.countryField = value;
                        this.OnPropertyChanged("Country");
                    }
                }
                else
                {
                    this.countryField = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value_details
        {
            get
            {
                return this.value_detailsField;
            }
            set
            {
                if ((this.value_detailsField != null))
                {
                    if ((value_detailsField.Equals(value) != true))
                    {
                        this.value_detailsField = value;
                        this.OnPropertyChanged("Value_details");
                    }
                }
                else
                {
                    this.value_detailsField = value;
                    this.OnPropertyChanged("Value_details");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCAP CAP
        {
            get
            {
                return this.cAPField;
            }
            set
            {
                if ((this.cAPField != null))
                {
                    if ((cAPField.Equals(value) != true))
                    {
                        this.cAPField = value;
                        this.OnPropertyChanged("CAP");
                    }
                }
                else
                {
                    this.cAPField = value;
                    this.OnPropertyChanged("CAP");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationAdditional_information Additional_information
        {
            get
            {
                return this.additional_informationField;
            }
            set
            {
                if ((this.additional_informationField != null))
                {
                    if ((additional_informationField.Equals(value) != true))
                    {
                        this.additional_informationField = value;
                        this.OnPropertyChanged("Additional_information");
                    }
                }
                else
                {
                    this.additional_informationField = value;
                    this.OnPropertyChanged("Additional_information");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationComments_free_text Comments_free_text
        {
            get
            {
                return this.comments_free_textField;
            }
            set
            {
                if ((this.comments_free_textField != null))
                {
                    if ((comments_free_textField.Equals(value) != true))
                    {
                        this.comments_free_textField = value;
                        this.OnPropertyChanged("Comments_free_text");
                    }
                }
                else
                {
                    this.comments_free_textField = value;
                    this.OnPropertyChanged("Comments_free_text");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_information));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_information object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_information object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_information);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_information obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_information Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_information)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_information object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_information object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_information);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_information obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_information obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_information LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_information LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_information object
        /// </summary>
        public virtual ASYCUDAGeneral_information Clone()
        {
            return ((ASYCUDAGeneral_information)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountry")]
    public partial class ASYCUDAGeneral_informationCountry : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAGeneral_informationCountryCountry_first_destination country_first_destinationField;

        private ASYCUDAGeneral_informationCountryTrading_country trading_countryField;

        private ASYCUDAGeneral_informationCountryExport exportField;

        private ASYCUDAGeneral_informationCountryDestination destinationField;

        private string country_of_origin_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountry()
        {
            this.textField = new ObservableCollection<string>();
            this.destinationField = new ASYCUDAGeneral_informationCountryDestination();
            this.exportField = new ASYCUDAGeneral_informationCountryExport();
            this.trading_countryField = new ASYCUDAGeneral_informationCountryTrading_country();
            this.country_first_destinationField = new ASYCUDAGeneral_informationCountryCountry_first_destination();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountryCountry_first_destination Country_first_destination
        {
            get
            {
                return this.country_first_destinationField;
            }
            set
            {
                if ((this.country_first_destinationField != null))
                {
                    if ((country_first_destinationField.Equals(value) != true))
                    {
                        this.country_first_destinationField = value;
                        this.OnPropertyChanged("Country_first_destination");
                    }
                }
                else
                {
                    this.country_first_destinationField = value;
                    this.OnPropertyChanged("Country_first_destination");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountryTrading_country Trading_country
        {
            get
            {
                return this.trading_countryField;
            }
            set
            {
                if ((this.trading_countryField != null))
                {
                    if ((trading_countryField.Equals(value) != true))
                    {
                        this.trading_countryField = value;
                        this.OnPropertyChanged("Trading_country");
                    }
                }
                else
                {
                    this.trading_countryField = value;
                    this.OnPropertyChanged("Trading_country");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountryExport Export
        {
            get
            {
                return this.exportField;
            }
            set
            {
                if ((this.exportField != null))
                {
                    if ((exportField.Equals(value) != true))
                    {
                        this.exportField = value;
                        this.OnPropertyChanged("Export");
                    }
                }
                else
                {
                    this.exportField = value;
                    this.OnPropertyChanged("Export");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountryDestination Destination
        {
            get
            {
                return this.destinationField;
            }
            set
            {
                if ((this.destinationField != null))
                {
                    if ((destinationField.Equals(value) != true))
                    {
                        this.destinationField = value;
                        this.OnPropertyChanged("Destination");
                    }
                }
                else
                {
                    this.destinationField = value;
                    this.OnPropertyChanged("Destination");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_of_origin_name
        {
            get
            {
                return this.country_of_origin_nameField;
            }
            set
            {
                if ((this.country_of_origin_nameField != null))
                {
                    if ((country_of_origin_nameField.Equals(value) != true))
                    {
                        this.country_of_origin_nameField = value;
                        this.OnPropertyChanged("Country_of_origin_name");
                    }
                }
                else
                {
                    this.country_of_origin_nameField = value;
                    this.OnPropertyChanged("Country_of_origin_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountry));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountry object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountry object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountry object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountry obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountry);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountry obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountry Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountry)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountry object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountry object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountry object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountry obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountry);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountry obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountry obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountry LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountry LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountry object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountry Clone()
        {
            return ((ASYCUDAGeneral_informationCountry)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountryCountry_first_destination")]
    public partial class ASYCUDAGeneral_informationCountryCountry_first_destination : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountryCountry_first_destination()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountryCountry_first_destination));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryCountry_first_destination object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountryCountry_first_destination object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryCountry_first_destination object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryCountry_first_destination obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryCountry_first_destination);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryCountry_first_destination obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryCountry_first_destination Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountryCountry_first_destination)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryCountry_first_destination object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountryCountry_first_destination object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryCountry_first_destination object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountryCountry_first_destination obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryCountry_first_destination);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryCountry_first_destination obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryCountry_first_destination obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryCountry_first_destination LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountryCountry_first_destination LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountryCountry_first_destination object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountryCountry_first_destination Clone()
        {
            return ((ASYCUDAGeneral_informationCountryCountry_first_destination)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountryTrading_country")]
    public partial class ASYCUDAGeneral_informationCountryTrading_country : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountryTrading_country()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountryTrading_country));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryTrading_country object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountryTrading_country object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryTrading_country object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryTrading_country obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryTrading_country);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryTrading_country obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryTrading_country Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountryTrading_country)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryTrading_country object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountryTrading_country object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryTrading_country object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountryTrading_country obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryTrading_country);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryTrading_country obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryTrading_country obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryTrading_country LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountryTrading_country LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountryTrading_country object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountryTrading_country Clone()
        {
            return ((ASYCUDAGeneral_informationCountryTrading_country)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountryExport")]
    public partial class ASYCUDAGeneral_informationCountryExport : System.ComponentModel.INotifyPropertyChanged
    {

        private string export_country_codeField;

        private string export_country_nameField;

        private ASYCUDAGeneral_informationCountryExportExport_country_region export_country_regionField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountryExport()
        {
            this.textField = new ObservableCollection<string>();
            this.export_country_regionField = new ASYCUDAGeneral_informationCountryExportExport_country_region();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Export_country_code
        {
            get
            {
                return this.export_country_codeField;
            }
            set
            {
                if ((this.export_country_codeField != null))
                {
                    if ((export_country_codeField.Equals(value) != true))
                    {
                        this.export_country_codeField = value;
                        this.OnPropertyChanged("Export_country_code");
                    }
                }
                else
                {
                    this.export_country_codeField = value;
                    this.OnPropertyChanged("Export_country_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Export_country_name
        {
            get
            {
                return this.export_country_nameField;
            }
            set
            {
                if ((this.export_country_nameField != null))
                {
                    if ((export_country_nameField.Equals(value) != true))
                    {
                        this.export_country_nameField = value;
                        this.OnPropertyChanged("Export_country_name");
                    }
                }
                else
                {
                    this.export_country_nameField = value;
                    this.OnPropertyChanged("Export_country_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountryExportExport_country_region Export_country_region
        {
            get
            {
                return this.export_country_regionField;
            }
            set
            {
                if ((this.export_country_regionField != null))
                {
                    if ((export_country_regionField.Equals(value) != true))
                    {
                        this.export_country_regionField = value;
                        this.OnPropertyChanged("Export_country_region");
                    }
                }
                else
                {
                    this.export_country_regionField = value;
                    this.OnPropertyChanged("Export_country_region");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountryExport));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryExport object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountryExport object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryExport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryExport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryExport);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryExport obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryExport Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountryExport)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryExport object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountryExport object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryExport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountryExport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryExport);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryExport obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryExport obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryExport LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountryExport LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountryExport object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountryExport Clone()
        {
            return ((ASYCUDAGeneral_informationCountryExport)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountryExportExport_country_region")]
    public partial class ASYCUDAGeneral_informationCountryExportExport_country_region : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountryExportExport_country_region()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountryExportExport_country_region));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryExportExport_country_region object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountryExportExport_country_region object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryExportExport_country_region object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryExportExport_country_region obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryExportExport_country_region);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryExportExport_country_region obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryExportExport_country_region Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountryExportExport_country_region)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryExportExport_country_region object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountryExportExport_country_region object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryExportExport_country_region object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountryExportExport_country_region obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryExportExport_country_region);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryExportExport_country_region obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryExportExport_country_region obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryExportExport_country_region LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountryExportExport_country_region LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountryExportExport_country_region object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountryExportExport_country_region Clone()
        {
            return ((ASYCUDAGeneral_informationCountryExportExport_country_region)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountryDestination")]
    public partial class ASYCUDAGeneral_informationCountryDestination : System.ComponentModel.INotifyPropertyChanged
    {

        private string destination_country_codeField;

        private string destination_country_nameField;

        private ASYCUDAGeneral_informationCountryDestinationDestination_country_region destination_country_regionField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountryDestination()
        {
            this.textField = new ObservableCollection<string>();
            this.destination_country_regionField = new ASYCUDAGeneral_informationCountryDestinationDestination_country_region();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination_country_code
        {
            get
            {
                return this.destination_country_codeField;
            }
            set
            {
                if ((this.destination_country_codeField != null))
                {
                    if ((destination_country_codeField.Equals(value) != true))
                    {
                        this.destination_country_codeField = value;
                        this.OnPropertyChanged("Destination_country_code");
                    }
                }
                else
                {
                    this.destination_country_codeField = value;
                    this.OnPropertyChanged("Destination_country_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination_country_name
        {
            get
            {
                return this.destination_country_nameField;
            }
            set
            {
                if ((this.destination_country_nameField != null))
                {
                    if ((destination_country_nameField.Equals(value) != true))
                    {
                        this.destination_country_nameField = value;
                        this.OnPropertyChanged("Destination_country_name");
                    }
                }
                else
                {
                    this.destination_country_nameField = value;
                    this.OnPropertyChanged("Destination_country_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAGeneral_informationCountryDestinationDestination_country_region Destination_country_region
        {
            get
            {
                return this.destination_country_regionField;
            }
            set
            {
                if ((this.destination_country_regionField != null))
                {
                    if ((destination_country_regionField.Equals(value) != true))
                    {
                        this.destination_country_regionField = value;
                        this.OnPropertyChanged("Destination_country_region");
                    }
                }
                else
                {
                    this.destination_country_regionField = value;
                    this.OnPropertyChanged("Destination_country_region");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountryDestination));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryDestination object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountryDestination object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryDestination object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryDestination obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryDestination);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryDestination obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryDestination Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountryDestination)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryDestination object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountryDestination object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryDestination object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountryDestination obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryDestination);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryDestination obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryDestination obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryDestination LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountryDestination LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountryDestination object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountryDestination Clone()
        {
            return ((ASYCUDAGeneral_informationCountryDestination)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCountryDestinationDestination_country_region")]
    public partial class ASYCUDAGeneral_informationCountryDestinationDestination_country_region : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCountryDestinationDestination_country_region()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCountryDestinationDestination_country_region));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryDestinationDestination_country_region object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCountryDestinationDestination_country_region object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryDestinationDestination_country_region object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryDestinationDestination_country_region obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryDestinationDestination_country_region);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCountryDestinationDestination_country_region obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryDestinationDestination_country_region Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCountryDestinationDestination_country_region)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCountryDestinationDestination_country_region object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCountryDestinationDestination_country_region object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCountryDestinationDestination_country_region object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCountryDestinationDestination_country_region obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCountryDestinationDestination_country_region);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryDestinationDestination_country_region obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCountryDestinationDestination_country_region obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCountryDestinationDestination_country_region LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCountryDestinationDestination_country_region LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCountryDestinationDestination_country_region object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCountryDestinationDestination_country_region Clone()
        {
            return ((ASYCUDAGeneral_informationCountryDestinationDestination_country_region)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationCAP")]
    public partial class ASYCUDAGeneral_informationCAP : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationCAP()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationCAP));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCAP object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationCAP object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCAP object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCAP obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCAP);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationCAP obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCAP Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationCAP)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationCAP object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationCAP object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationCAP object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationCAP obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationCAP);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCAP obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationCAP obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationCAP LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationCAP LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationCAP object
        /// </summary>
        public virtual ASYCUDAGeneral_informationCAP Clone()
        {
            return ((ASYCUDAGeneral_informationCAP)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationAdditional_information")]
    public partial class ASYCUDAGeneral_informationAdditional_information : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationAdditional_information()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationAdditional_information));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationAdditional_information object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationAdditional_information object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationAdditional_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationAdditional_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationAdditional_information);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationAdditional_information obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationAdditional_information Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationAdditional_information)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationAdditional_information object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationAdditional_information object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationAdditional_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationAdditional_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationAdditional_information);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationAdditional_information obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationAdditional_information obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationAdditional_information LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationAdditional_information LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationAdditional_information object
        /// </summary>
        public virtual ASYCUDAGeneral_informationAdditional_information Clone()
        {
            return ((ASYCUDAGeneral_informationAdditional_information)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAGeneral_informationComments_free_text")]
    public partial class ASYCUDAGeneral_informationComments_free_text : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAGeneral_informationComments_free_text()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAGeneral_informationComments_free_text));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationComments_free_text object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAGeneral_informationComments_free_text object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationComments_free_text object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationComments_free_text obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationComments_free_text);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAGeneral_informationComments_free_text obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationComments_free_text Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAGeneral_informationComments_free_text)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAGeneral_informationComments_free_text object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAGeneral_informationComments_free_text object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAGeneral_informationComments_free_text object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAGeneral_informationComments_free_text obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAGeneral_informationComments_free_text);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationComments_free_text obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAGeneral_informationComments_free_text obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAGeneral_informationComments_free_text LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAGeneral_informationComments_free_text LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAGeneral_informationComments_free_text object
        /// </summary>
        public virtual ASYCUDAGeneral_informationComments_free_text Clone()
        {
            return ((ASYCUDAGeneral_informationComments_free_text)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransport")]
    public partial class ASYCUDATransport : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportMeans_of_transport means_of_transportField;

        private bool container_flagField;

        private bool container_flagFieldSpecified;

        private bool single_waybill_flagField;

        private bool single_waybill_flagFieldSpecified;

        private ASYCUDATransportDelivery_terms delivery_termsField;

        private ASYCUDATransportBorder_office border_officeField;

        private ASYCUDATransportPlace_of_loading place_of_loadingField;

        private ASYCUDATransportLocation_of_goods location_of_goodsField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransport()
        {
            this.textField = new ObservableCollection<string>();
            this.location_of_goodsField = new ASYCUDATransportLocation_of_goods();
            this.place_of_loadingField = new ASYCUDATransportPlace_of_loading();
            this.border_officeField = new ASYCUDATransportBorder_office();
            this.delivery_termsField = new ASYCUDATransportDelivery_terms();
            this.means_of_transportField = new ASYCUDATransportMeans_of_transport();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transport Means_of_transport
        {
            get
            {
                return this.means_of_transportField;
            }
            set
            {
                if ((this.means_of_transportField != null))
                {
                    if ((means_of_transportField.Equals(value) != true))
                    {
                        this.means_of_transportField = value;
                        this.OnPropertyChanged("Means_of_transport");
                    }
                }
                else
                {
                    this.means_of_transportField = value;
                    this.OnPropertyChanged("Means_of_transport");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Container_flag
        {
            get
            {
                return this.container_flagField;
            }
            set
            {
                if ((container_flagField.Equals(value) != true))
                {
                    this.container_flagField = value;
                    this.OnPropertyChanged("Container_flag");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Container_flagSpecified
        {
            get
            {
                return this.container_flagFieldSpecified;
            }
            set
            {
                if ((container_flagFieldSpecified.Equals(value) != true))
                {
                    this.container_flagFieldSpecified = value;
                    this.OnPropertyChanged("Container_flagSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Single_waybill_flag
        {
            get
            {
                return this.single_waybill_flagField;
            }
            set
            {
                if ((single_waybill_flagField.Equals(value) != true))
                {
                    this.single_waybill_flagField = value;
                    this.OnPropertyChanged("Single_waybill_flag");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Single_waybill_flagSpecified
        {
            get
            {
                return this.single_waybill_flagFieldSpecified;
            }
            set
            {
                if ((single_waybill_flagFieldSpecified.Equals(value) != true))
                {
                    this.single_waybill_flagFieldSpecified = value;
                    this.OnPropertyChanged("Single_waybill_flagSpecified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportDelivery_terms Delivery_terms
        {
            get
            {
                return this.delivery_termsField;
            }
            set
            {
                if ((this.delivery_termsField != null))
                {
                    if ((delivery_termsField.Equals(value) != true))
                    {
                        this.delivery_termsField = value;
                        this.OnPropertyChanged("Delivery_terms");
                    }
                }
                else
                {
                    this.delivery_termsField = value;
                    this.OnPropertyChanged("Delivery_terms");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportBorder_office Border_office
        {
            get
            {
                return this.border_officeField;
            }
            set
            {
                if ((this.border_officeField != null))
                {
                    if ((border_officeField.Equals(value) != true))
                    {
                        this.border_officeField = value;
                        this.OnPropertyChanged("Border_office");
                    }
                }
                else
                {
                    this.border_officeField = value;
                    this.OnPropertyChanged("Border_office");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportPlace_of_loading Place_of_loading
        {
            get
            {
                return this.place_of_loadingField;
            }
            set
            {
                if ((this.place_of_loadingField != null))
                {
                    if ((place_of_loadingField.Equals(value) != true))
                    {
                        this.place_of_loadingField = value;
                        this.OnPropertyChanged("Place_of_loading");
                    }
                }
                else
                {
                    this.place_of_loadingField = value;
                    this.OnPropertyChanged("Place_of_loading");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportLocation_of_goods Location_of_goods
        {
            get
            {
                return this.location_of_goodsField;
            }
            set
            {
                if ((this.location_of_goodsField != null))
                {
                    if ((location_of_goodsField.Equals(value) != true))
                    {
                        this.location_of_goodsField = value;
                        this.OnPropertyChanged("Location_of_goods");
                    }
                }
                else
                {
                    this.location_of_goodsField = value;
                    this.OnPropertyChanged("Location_of_goods");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransport));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransport object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransport object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransport);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransport obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransport Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransport)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransport object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransport object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransport);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransport obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransport obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransport LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransport LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransport object
        /// </summary>
        public virtual ASYCUDATransport Clone()
        {
            return ((ASYCUDATransport)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transport")]
    public partial class ASYCUDATransportMeans_of_transport : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportMeans_of_transportDeparture_arrival_information departure_arrival_informationField;

        private ASYCUDATransportMeans_of_transportBorder_information border_informationField;

        private ASYCUDATransportMeans_of_transportInland_mode_of_transport inland_mode_of_transportField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transport()
        {
            this.textField = new ObservableCollection<string>();
            this.inland_mode_of_transportField = new ASYCUDATransportMeans_of_transportInland_mode_of_transport();
            this.border_informationField = new ASYCUDATransportMeans_of_transportBorder_information();
            this.departure_arrival_informationField = new ASYCUDATransportMeans_of_transportDeparture_arrival_information();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportDeparture_arrival_information Departure_arrival_information
        {
            get
            {
                return this.departure_arrival_informationField;
            }
            set
            {
                if ((this.departure_arrival_informationField != null))
                {
                    if ((departure_arrival_informationField.Equals(value) != true))
                    {
                        this.departure_arrival_informationField = value;
                        this.OnPropertyChanged("Departure_arrival_information");
                    }
                }
                else
                {
                    this.departure_arrival_informationField = value;
                    this.OnPropertyChanged("Departure_arrival_information");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportBorder_information Border_information
        {
            get
            {
                return this.border_informationField;
            }
            set
            {
                if ((this.border_informationField != null))
                {
                    if ((border_informationField.Equals(value) != true))
                    {
                        this.border_informationField = value;
                        this.OnPropertyChanged("Border_information");
                    }
                }
                else
                {
                    this.border_informationField = value;
                    this.OnPropertyChanged("Border_information");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportInland_mode_of_transport Inland_mode_of_transport
        {
            get
            {
                return this.inland_mode_of_transportField;
            }
            set
            {
                if ((this.inland_mode_of_transportField != null))
                {
                    if ((inland_mode_of_transportField.Equals(value) != true))
                    {
                        this.inland_mode_of_transportField = value;
                        this.OnPropertyChanged("Inland_mode_of_transport");
                    }
                }
                else
                {
                    this.inland_mode_of_transportField = value;
                    this.OnPropertyChanged("Inland_mode_of_transport");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transport));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transport object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transport object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transport);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transport obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transport Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transport)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transport object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transport object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transport);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transport obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transport obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transport LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transport LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transport object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transport Clone()
        {
            return ((ASYCUDATransportMeans_of_transport)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportDeparture_arrival_information")]
    public partial class ASYCUDATransportMeans_of_transportDeparture_arrival_information : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity identityField;

        private ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality nationalityField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportDeparture_arrival_information()
        {
            this.textField = new ObservableCollection<string>();
            this.nationalityField = new ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality();
            this.identityField = new ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity Identity
        {
            get
            {
                return this.identityField;
            }
            set
            {
                if ((this.identityField != null))
                {
                    if ((identityField.Equals(value) != true))
                    {
                        this.identityField = value;
                        this.OnPropertyChanged("Identity");
                    }
                }
                else
                {
                    this.identityField = value;
                    this.OnPropertyChanged("Identity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality Nationality
        {
            get
            {
                return this.nationalityField;
            }
            set
            {
                if ((this.nationalityField != null))
                {
                    if ((nationalityField.Equals(value) != true))
                    {
                        this.nationalityField = value;
                        this.OnPropertyChanged("Nationality");
                    }
                }
                else
                {
                    this.nationalityField = value;
                    this.OnPropertyChanged("Nationality");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportDeparture_arrival_information));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportDeparture_arrival_information object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportDeparture_arrival_information object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportDeparture_arrival_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportDeparture_arrival_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportDeparture_arrival_information);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportDeparture_arrival_information obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_information Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportDeparture_arrival_information)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportDeparture_arrival_information object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportDeparture_arrival_information object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportDeparture_arrival_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportDeparture_arrival_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportDeparture_arrival_information);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportDeparture_arrival_information obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportDeparture_arrival_information obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_information LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_information LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportDeparture_arrival_information object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportDeparture_arrival_information Clone()
        {
            return ((ASYCUDATransportMeans_of_transportDeparture_arrival_information)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity")]
    public partial class ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity Clone()
        {
            return ((ASYCUDATransportMeans_of_transportDeparture_arrival_informationIdentity)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality")]
    public partial class ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality Clone()
        {
            return ((ASYCUDATransportMeans_of_transportDeparture_arrival_informationNationality)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportBorder_information")]
    public partial class ASYCUDATransportMeans_of_transportBorder_information : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportMeans_of_transportBorder_informationIdentity identityField;

        private ASYCUDATransportMeans_of_transportBorder_informationNationality nationalityField;

        private ASYCUDATransportMeans_of_transportBorder_informationMode modeField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportBorder_information()
        {
            this.textField = new ObservableCollection<string>();
            this.modeField = new ASYCUDATransportMeans_of_transportBorder_informationMode();
            this.nationalityField = new ASYCUDATransportMeans_of_transportBorder_informationNationality();
            this.identityField = new ASYCUDATransportMeans_of_transportBorder_informationIdentity();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportBorder_informationIdentity Identity
        {
            get
            {
                return this.identityField;
            }
            set
            {
                if ((this.identityField != null))
                {
                    if ((identityField.Equals(value) != true))
                    {
                        this.identityField = value;
                        this.OnPropertyChanged("Identity");
                    }
                }
                else
                {
                    this.identityField = value;
                    this.OnPropertyChanged("Identity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportBorder_informationNationality Nationality
        {
            get
            {
                return this.nationalityField;
            }
            set
            {
                if ((this.nationalityField != null))
                {
                    if ((nationalityField.Equals(value) != true))
                    {
                        this.nationalityField = value;
                        this.OnPropertyChanged("Nationality");
                    }
                }
                else
                {
                    this.nationalityField = value;
                    this.OnPropertyChanged("Nationality");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportMeans_of_transportBorder_informationMode Mode
        {
            get
            {
                return this.modeField;
            }
            set
            {
                if ((this.modeField != null))
                {
                    if ((modeField.Equals(value) != true))
                    {
                        this.modeField = value;
                        this.OnPropertyChanged("Mode");
                    }
                }
                else
                {
                    this.modeField = value;
                    this.OnPropertyChanged("Mode");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportBorder_information));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_information object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportBorder_information object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_information);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_information obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_information Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportBorder_information)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_information object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportBorder_information object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_information object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportBorder_information obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_information);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_information obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_information obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_information LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportBorder_information LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportBorder_information object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportBorder_information Clone()
        {
            return ((ASYCUDATransportMeans_of_transportBorder_information)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportBorder_informationIdentity")]
    public partial class ASYCUDATransportMeans_of_transportBorder_informationIdentity : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportBorder_informationIdentity()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportBorder_informationIdentity));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_informationIdentity object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportBorder_informationIdentity object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_informationIdentity object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_informationIdentity obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_informationIdentity);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_informationIdentity obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationIdentity Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportBorder_informationIdentity)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_informationIdentity object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportBorder_informationIdentity object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_informationIdentity object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportBorder_informationIdentity obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_informationIdentity);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_informationIdentity obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_informationIdentity obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationIdentity LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationIdentity LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportBorder_informationIdentity object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportBorder_informationIdentity Clone()
        {
            return ((ASYCUDATransportMeans_of_transportBorder_informationIdentity)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportBorder_informationNationality")]
    public partial class ASYCUDATransportMeans_of_transportBorder_informationNationality : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportBorder_informationNationality()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportBorder_informationNationality));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_informationNationality object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportBorder_informationNationality object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_informationNationality object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_informationNationality obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_informationNationality);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_informationNationality obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationNationality Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportBorder_informationNationality)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_informationNationality object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportBorder_informationNationality object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_informationNationality object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportBorder_informationNationality obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_informationNationality);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_informationNationality obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_informationNationality obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationNationality LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationNationality LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportBorder_informationNationality object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportBorder_informationNationality Clone()
        {
            return ((ASYCUDATransportMeans_of_transportBorder_informationNationality)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportBorder_informationMode")]
    public partial class ASYCUDATransportMeans_of_transportBorder_informationMode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportBorder_informationMode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportBorder_informationMode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_informationMode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportBorder_informationMode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_informationMode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_informationMode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_informationMode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportBorder_informationMode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationMode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportBorder_informationMode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportBorder_informationMode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportBorder_informationMode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportBorder_informationMode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportBorder_informationMode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportBorder_informationMode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_informationMode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportBorder_informationMode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationMode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportBorder_informationMode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportBorder_informationMode object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportBorder_informationMode Clone()
        {
            return ((ASYCUDATransportMeans_of_transportBorder_informationMode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportMeans_of_transportInland_mode_of_transport")]
    public partial class ASYCUDATransportMeans_of_transportInland_mode_of_transport : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportMeans_of_transportInland_mode_of_transport()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportMeans_of_transportInland_mode_of_transport));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportInland_mode_of_transport object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportMeans_of_transportInland_mode_of_transport object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportInland_mode_of_transport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportInland_mode_of_transport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportInland_mode_of_transport);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportMeans_of_transportInland_mode_of_transport obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportInland_mode_of_transport Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportMeans_of_transportInland_mode_of_transport)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportMeans_of_transportInland_mode_of_transport object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportMeans_of_transportInland_mode_of_transport object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportMeans_of_transportInland_mode_of_transport object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportMeans_of_transportInland_mode_of_transport obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportMeans_of_transportInland_mode_of_transport);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportInland_mode_of_transport obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportMeans_of_transportInland_mode_of_transport obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportMeans_of_transportInland_mode_of_transport LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportMeans_of_transportInland_mode_of_transport LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportMeans_of_transportInland_mode_of_transport object
        /// </summary>
        public virtual ASYCUDATransportMeans_of_transportInland_mode_of_transport Clone()
        {
            return ((ASYCUDATransportMeans_of_transportInland_mode_of_transport)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportDelivery_terms")]
    public partial class ASYCUDATransportDelivery_terms : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportDelivery_termsCode codeField;

        private ASYCUDATransportDelivery_termsPlace placeField;

        private ASYCUDATransportDelivery_termsSituation situationField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportDelivery_terms()
        {
            this.textField = new ObservableCollection<string>();
            this.situationField = new ASYCUDATransportDelivery_termsSituation();
            this.placeField = new ASYCUDATransportDelivery_termsPlace();
            this.codeField = new ASYCUDATransportDelivery_termsCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportDelivery_termsCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportDelivery_termsPlace Place
        {
            get
            {
                return this.placeField;
            }
            set
            {
                if ((this.placeField != null))
                {
                    if ((placeField.Equals(value) != true))
                    {
                        this.placeField = value;
                        this.OnPropertyChanged("Place");
                    }
                }
                else
                {
                    this.placeField = value;
                    this.OnPropertyChanged("Place");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportDelivery_termsSituation Situation
        {
            get
            {
                return this.situationField;
            }
            set
            {
                if ((this.situationField != null))
                {
                    if ((situationField.Equals(value) != true))
                    {
                        this.situationField = value;
                        this.OnPropertyChanged("Situation");
                    }
                }
                else
                {
                    this.situationField = value;
                    this.OnPropertyChanged("Situation");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportDelivery_terms));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_terms object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportDelivery_terms object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_terms object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_terms obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_terms);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_terms obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_terms Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportDelivery_terms)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_terms object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportDelivery_terms object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_terms object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportDelivery_terms obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_terms);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_terms obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_terms obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_terms LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportDelivery_terms LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportDelivery_terms object
        /// </summary>
        public virtual ASYCUDATransportDelivery_terms Clone()
        {
            return ((ASYCUDATransportDelivery_terms)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportDelivery_termsCode")]
    public partial class ASYCUDATransportDelivery_termsCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportDelivery_termsCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportDelivery_termsCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_termsCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportDelivery_termsCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_termsCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_termsCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_termsCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_termsCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_termsCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportDelivery_termsCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_termsCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportDelivery_termsCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_termsCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportDelivery_termsCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_termsCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_termsCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_termsCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_termsCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportDelivery_termsCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportDelivery_termsCode object
        /// </summary>
        public virtual ASYCUDATransportDelivery_termsCode Clone()
        {
            return ((ASYCUDATransportDelivery_termsCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportDelivery_termsPlace")]
    public partial class ASYCUDATransportDelivery_termsPlace : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportDelivery_termsPlace()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportDelivery_termsPlace));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_termsPlace object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportDelivery_termsPlace object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_termsPlace object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_termsPlace obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_termsPlace);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_termsPlace obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_termsPlace Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportDelivery_termsPlace)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_termsPlace object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportDelivery_termsPlace object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_termsPlace object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportDelivery_termsPlace obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_termsPlace);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_termsPlace obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_termsPlace obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_termsPlace LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportDelivery_termsPlace LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportDelivery_termsPlace object
        /// </summary>
        public virtual ASYCUDATransportDelivery_termsPlace Clone()
        {
            return ((ASYCUDATransportDelivery_termsPlace)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportDelivery_termsSituation")]
    public partial class ASYCUDATransportDelivery_termsSituation : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportDelivery_termsSituation()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportDelivery_termsSituation));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_termsSituation object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportDelivery_termsSituation object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_termsSituation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_termsSituation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_termsSituation);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportDelivery_termsSituation obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_termsSituation Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportDelivery_termsSituation)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportDelivery_termsSituation object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportDelivery_termsSituation object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportDelivery_termsSituation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportDelivery_termsSituation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportDelivery_termsSituation);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_termsSituation obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportDelivery_termsSituation obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportDelivery_termsSituation LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportDelivery_termsSituation LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportDelivery_termsSituation object
        /// </summary>
        public virtual ASYCUDATransportDelivery_termsSituation Clone()
        {
            return ((ASYCUDATransportDelivery_termsSituation)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportBorder_office")]
    public partial class ASYCUDATransportBorder_office : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportBorder_officeCode codeField;

        private ASYCUDATransportBorder_officeName nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportBorder_office()
        {
            this.textField = new ObservableCollection<string>();
            this.nameField = new ASYCUDATransportBorder_officeName();
            this.codeField = new ASYCUDATransportBorder_officeCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportBorder_officeCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportBorder_officeName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportBorder_office));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportBorder_office object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportBorder_office object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportBorder_office object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportBorder_office obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportBorder_office);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportBorder_office obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportBorder_office Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportBorder_office)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportBorder_office object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportBorder_office object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportBorder_office object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportBorder_office obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportBorder_office);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportBorder_office obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportBorder_office obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportBorder_office LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportBorder_office LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportBorder_office object
        /// </summary>
        public virtual ASYCUDATransportBorder_office Clone()
        {
            return ((ASYCUDATransportBorder_office)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportBorder_officeCode")]
    public partial class ASYCUDATransportBorder_officeCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportBorder_officeCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportBorder_officeCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportBorder_officeCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportBorder_officeCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportBorder_officeCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportBorder_officeCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportBorder_officeCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportBorder_officeCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportBorder_officeCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportBorder_officeCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportBorder_officeCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportBorder_officeCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportBorder_officeCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportBorder_officeCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportBorder_officeCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportBorder_officeCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportBorder_officeCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportBorder_officeCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportBorder_officeCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportBorder_officeCode object
        /// </summary>
        public virtual ASYCUDATransportBorder_officeCode Clone()
        {
            return ((ASYCUDATransportBorder_officeCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportBorder_officeName")]
    public partial class ASYCUDATransportBorder_officeName : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportBorder_officeName()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportBorder_officeName));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportBorder_officeName object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportBorder_officeName object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportBorder_officeName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportBorder_officeName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportBorder_officeName);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportBorder_officeName obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportBorder_officeName Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportBorder_officeName)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportBorder_officeName object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportBorder_officeName object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportBorder_officeName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportBorder_officeName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportBorder_officeName);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportBorder_officeName obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportBorder_officeName obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportBorder_officeName LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportBorder_officeName LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportBorder_officeName object
        /// </summary>
        public virtual ASYCUDATransportBorder_officeName Clone()
        {
            return ((ASYCUDATransportBorder_officeName)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportPlace_of_loading")]
    public partial class ASYCUDATransportPlace_of_loading : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransportPlace_of_loadingCode codeField;

        private ASYCUDATransportPlace_of_loadingName nameField;

        private ASYCUDATransportPlace_of_loadingCountry countryField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportPlace_of_loading()
        {
            this.textField = new ObservableCollection<string>();
            this.countryField = new ASYCUDATransportPlace_of_loadingCountry();
            this.nameField = new ASYCUDATransportPlace_of_loadingName();
            this.codeField = new ASYCUDATransportPlace_of_loadingCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportPlace_of_loadingCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportPlace_of_loadingName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransportPlace_of_loadingCountry Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                if ((this.countryField != null))
                {
                    if ((countryField.Equals(value) != true))
                    {
                        this.countryField = value;
                        this.OnPropertyChanged("Country");
                    }
                }
                else
                {
                    this.countryField = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportPlace_of_loading));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loading object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportPlace_of_loading object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loading object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loading obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loading);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loading obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loading Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportPlace_of_loading)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loading object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportPlace_of_loading object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loading object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportPlace_of_loading obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loading);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loading obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loading obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loading LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportPlace_of_loading LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportPlace_of_loading object
        /// </summary>
        public virtual ASYCUDATransportPlace_of_loading Clone()
        {
            return ((ASYCUDATransportPlace_of_loading)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportPlace_of_loadingCode")]
    public partial class ASYCUDATransportPlace_of_loadingCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportPlace_of_loadingCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportPlace_of_loadingCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loadingCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportPlace_of_loadingCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loadingCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loadingCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loadingCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loadingCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loadingCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportPlace_of_loadingCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loadingCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportPlace_of_loadingCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loadingCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportPlace_of_loadingCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loadingCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loadingCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loadingCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loadingCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportPlace_of_loadingCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportPlace_of_loadingCode object
        /// </summary>
        public virtual ASYCUDATransportPlace_of_loadingCode Clone()
        {
            return ((ASYCUDATransportPlace_of_loadingCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportPlace_of_loadingName")]
    public partial class ASYCUDATransportPlace_of_loadingName : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportPlace_of_loadingName()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportPlace_of_loadingName));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loadingName object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportPlace_of_loadingName object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loadingName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loadingName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loadingName);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loadingName obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loadingName Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportPlace_of_loadingName)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loadingName object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportPlace_of_loadingName object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loadingName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportPlace_of_loadingName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loadingName);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loadingName obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loadingName obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loadingName LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportPlace_of_loadingName LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportPlace_of_loadingName object
        /// </summary>
        public virtual ASYCUDATransportPlace_of_loadingName Clone()
        {
            return ((ASYCUDATransportPlace_of_loadingName)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportPlace_of_loadingCountry")]
    public partial class ASYCUDATransportPlace_of_loadingCountry : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportPlace_of_loadingCountry()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportPlace_of_loadingCountry));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loadingCountry object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportPlace_of_loadingCountry object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loadingCountry object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loadingCountry obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loadingCountry);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportPlace_of_loadingCountry obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loadingCountry Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportPlace_of_loadingCountry)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportPlace_of_loadingCountry object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportPlace_of_loadingCountry object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportPlace_of_loadingCountry object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportPlace_of_loadingCountry obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportPlace_of_loadingCountry);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loadingCountry obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportPlace_of_loadingCountry obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportPlace_of_loadingCountry LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportPlace_of_loadingCountry LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportPlace_of_loadingCountry object
        /// </summary>
        public virtual ASYCUDATransportPlace_of_loadingCountry Clone()
        {
            return ((ASYCUDATransportPlace_of_loadingCountry)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransportLocation_of_goods")]
    public partial class ASYCUDATransportLocation_of_goods : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransportLocation_of_goods()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransportLocation_of_goods));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransportLocation_of_goods object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransportLocation_of_goods object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransportLocation_of_goods object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransportLocation_of_goods obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportLocation_of_goods);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransportLocation_of_goods obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransportLocation_of_goods Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransportLocation_of_goods)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransportLocation_of_goods object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransportLocation_of_goods object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransportLocation_of_goods object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransportLocation_of_goods obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransportLocation_of_goods);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportLocation_of_goods obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransportLocation_of_goods obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransportLocation_of_goods LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransportLocation_of_goods LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransportLocation_of_goods object
        /// </summary>
        public virtual ASYCUDATransportLocation_of_goods Clone()
        {
            return ((ASYCUDATransportLocation_of_goods)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancial")]
    public partial class ASYCUDAFinancial : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAFinancialFinancial_transaction financial_transactionField;

        private ASYCUDAFinancialBank bankField;

        private ASYCUDAFinancialTerms termsField;

        private object total_invoiceField;

        private ASYCUDAFinancialDeffered_payment_reference deffered_payment_referenceField;

        private string mode_of_paymentField;

        private ASYCUDAFinancialAmounts amountsField;

        private ASYCUDAFinancialGuarantee guaranteeField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancial()
        {
            this.textField = new ObservableCollection<string>();
            this.guaranteeField = new ASYCUDAFinancialGuarantee();
            this.amountsField = new ASYCUDAFinancialAmounts();
            this.deffered_payment_referenceField = new ASYCUDAFinancialDeffered_payment_reference();
            this.termsField = new ASYCUDAFinancialTerms();
            this.bankField = new ASYCUDAFinancialBank();
            this.financial_transactionField = new ASYCUDAFinancialFinancial_transaction();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialFinancial_transaction Financial_transaction
        {
            get
            {
                return this.financial_transactionField;
            }
            set
            {
                if ((this.financial_transactionField != null))
                {
                    if ((financial_transactionField.Equals(value) != true))
                    {
                        this.financial_transactionField = value;
                        this.OnPropertyChanged("Financial_transaction");
                    }
                }
                else
                {
                    this.financial_transactionField = value;
                    this.OnPropertyChanged("Financial_transaction");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialBank Bank
        {
            get
            {
                return this.bankField;
            }
            set
            {
                if ((this.bankField != null))
                {
                    if ((bankField.Equals(value) != true))
                    {
                        this.bankField = value;
                        this.OnPropertyChanged("Bank");
                    }
                }
                else
                {
                    this.bankField = value;
                    this.OnPropertyChanged("Bank");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialTerms Terms
        {
            get
            {
                return this.termsField;
            }
            set
            {
                if ((this.termsField != null))
                {
                    if ((termsField.Equals(value) != true))
                    {
                        this.termsField = value;
                        this.OnPropertyChanged("Terms");
                    }
                }
                else
                {
                    this.termsField = value;
                    this.OnPropertyChanged("Terms");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Total_invoice
        {
            get
            {
                return this.total_invoiceField;
            }
            set
            {
                if ((this.total_invoiceField != null))
                {
                    if ((total_invoiceField.Equals(value) != true))
                    {
                        this.total_invoiceField = value;
                        this.OnPropertyChanged("Total_invoice");
                    }
                }
                else
                {
                    this.total_invoiceField = value;
                    this.OnPropertyChanged("Total_invoice");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialDeffered_payment_reference Deffered_payment_reference
        {
            get
            {
                return this.deffered_payment_referenceField;
            }
            set
            {
                if ((this.deffered_payment_referenceField != null))
                {
                    if ((deffered_payment_referenceField.Equals(value) != true))
                    {
                        this.deffered_payment_referenceField = value;
                        this.OnPropertyChanged("Deffered_payment_reference");
                    }
                }
                else
                {
                    this.deffered_payment_referenceField = value;
                    this.OnPropertyChanged("Deffered_payment_reference");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode_of_payment
        {
            get
            {
                return this.mode_of_paymentField;
            }
            set
            {
                if ((this.mode_of_paymentField != null))
                {
                    if ((mode_of_paymentField.Equals(value) != true))
                    {
                        this.mode_of_paymentField = value;
                        this.OnPropertyChanged("Mode_of_payment");
                    }
                }
                else
                {
                    this.mode_of_paymentField = value;
                    this.OnPropertyChanged("Mode_of_payment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialAmounts Amounts
        {
            get
            {
                return this.amountsField;
            }
            set
            {
                if ((this.amountsField != null))
                {
                    if ((amountsField.Equals(value) != true))
                    {
                        this.amountsField = value;
                        this.OnPropertyChanged("Amounts");
                    }
                }
                else
                {
                    this.amountsField = value;
                    this.OnPropertyChanged("Amounts");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialGuarantee Guarantee
        {
            get
            {
                return this.guaranteeField;
            }
            set
            {
                if ((this.guaranteeField != null))
                {
                    if ((guaranteeField.Equals(value) != true))
                    {
                        this.guaranteeField = value;
                        this.OnPropertyChanged("Guarantee");
                    }
                }
                else
                {
                    this.guaranteeField = value;
                    this.OnPropertyChanged("Guarantee");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancial));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancial object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancial object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancial object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancial obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancial);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancial obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancial Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancial)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancial object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancial object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancial object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancial obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancial);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancial obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancial obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancial LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancial LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancial object
        /// </summary>
        public virtual ASYCUDAFinancial Clone()
        {
            return ((ASYCUDAFinancial)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialFinancial_transaction")]
    public partial class ASYCUDAFinancialFinancial_transaction : System.ComponentModel.INotifyPropertyChanged
    {

        private object code1Field;

        private object code2Field;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialFinancial_transaction()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object code1
        {
            get
            {
                return this.code1Field;
            }
            set
            {
                if ((this.code1Field != null))
                {
                    if ((code1Field.Equals(value) != true))
                    {
                        this.code1Field = value;
                        this.OnPropertyChanged("code1");
                    }
                }
                else
                {
                    this.code1Field = value;
                    this.OnPropertyChanged("code1");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object code2
        {
            get
            {
                return this.code2Field;
            }
            set
            {
                if ((this.code2Field != null))
                {
                    if ((code2Field.Equals(value) != true))
                    {
                        this.code2Field = value;
                        this.OnPropertyChanged("code2");
                    }
                }
                else
                {
                    this.code2Field = value;
                    this.OnPropertyChanged("code2");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialFinancial_transaction));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialFinancial_transaction object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialFinancial_transaction object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialFinancial_transaction object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialFinancial_transaction obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialFinancial_transaction);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialFinancial_transaction obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialFinancial_transaction Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialFinancial_transaction)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialFinancial_transaction object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialFinancial_transaction object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialFinancial_transaction object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialFinancial_transaction obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialFinancial_transaction);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialFinancial_transaction obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialFinancial_transaction obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialFinancial_transaction LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialFinancial_transaction LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialFinancial_transaction object
        /// </summary>
        public virtual ASYCUDAFinancialFinancial_transaction Clone()
        {
            return ((ASYCUDAFinancialFinancial_transaction)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialBank")]
    public partial class ASYCUDAFinancialBank : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAFinancialBankCode codeField;

        private ASYCUDAFinancialBankName nameField;

        private ASYCUDAFinancialBankBranch branchField;

        private ASYCUDAFinancialBankReference referenceField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialBank()
        {
            this.textField = new ObservableCollection<string>();
            this.referenceField = new ASYCUDAFinancialBankReference();
            this.branchField = new ASYCUDAFinancialBankBranch();
            this.nameField = new ASYCUDAFinancialBankName();
            this.codeField = new ASYCUDAFinancialBankCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialBankCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialBankName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialBankBranch Branch
        {
            get
            {
                return this.branchField;
            }
            set
            {
                if ((this.branchField != null))
                {
                    if ((branchField.Equals(value) != true))
                    {
                        this.branchField = value;
                        this.OnPropertyChanged("Branch");
                    }
                }
                else
                {
                    this.branchField = value;
                    this.OnPropertyChanged("Branch");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialBankReference Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                if ((this.referenceField != null))
                {
                    if ((referenceField.Equals(value) != true))
                    {
                        this.referenceField = value;
                        this.OnPropertyChanged("Reference");
                    }
                }
                else
                {
                    this.referenceField = value;
                    this.OnPropertyChanged("Reference");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialBank));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialBank object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialBank object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBank object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialBank obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBank);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialBank obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialBank Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialBank)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialBank object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialBank object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBank object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialBank obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBank);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBank obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBank obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialBank LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialBank LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialBank object
        /// </summary>
        public virtual ASYCUDAFinancialBank Clone()
        {
            return ((ASYCUDAFinancialBank)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialBankCode")]
    public partial class ASYCUDAFinancialBankCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialBankCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialBankCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialBankCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialBankCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialBankCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialBankCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialBankCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialBankCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialBankCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialBankCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialBankCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialBankCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialBankCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialBankCode object
        /// </summary>
        public virtual ASYCUDAFinancialBankCode Clone()
        {
            return ((ASYCUDAFinancialBankCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialBankName")]
    public partial class ASYCUDAFinancialBankName : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialBankName()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialBankName));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialBankName object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialBankName object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialBankName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankName);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialBankName obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialBankName Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialBankName)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialBankName object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialBankName object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialBankName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankName);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankName obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankName obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialBankName LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialBankName LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialBankName object
        /// </summary>
        public virtual ASYCUDAFinancialBankName Clone()
        {
            return ((ASYCUDAFinancialBankName)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialBankBranch")]
    public partial class ASYCUDAFinancialBankBranch : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialBankBranch()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialBankBranch));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialBankBranch object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialBankBranch object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankBranch object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialBankBranch obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankBranch);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialBankBranch obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialBankBranch Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialBankBranch)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialBankBranch object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialBankBranch object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankBranch object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialBankBranch obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankBranch);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankBranch obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankBranch obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialBankBranch LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialBankBranch LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialBankBranch object
        /// </summary>
        public virtual ASYCUDAFinancialBankBranch Clone()
        {
            return ((ASYCUDAFinancialBankBranch)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialBankReference")]
    public partial class ASYCUDAFinancialBankReference : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialBankReference()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialBankReference));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialBankReference object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialBankReference object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankReference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialBankReference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankReference);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialBankReference obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialBankReference Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialBankReference)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialBankReference object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialBankReference object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialBankReference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialBankReference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialBankReference);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankReference obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialBankReference obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialBankReference LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialBankReference LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialBankReference object
        /// </summary>
        public virtual ASYCUDAFinancialBankReference Clone()
        {
            return ((ASYCUDAFinancialBankReference)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialTerms")]
    public partial class ASYCUDAFinancialTerms : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAFinancialTermsCode codeField;

        private ASYCUDAFinancialTermsDescription descriptionField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialTerms()
        {
            this.textField = new ObservableCollection<string>();
            this.descriptionField = new ASYCUDAFinancialTermsDescription();
            this.codeField = new ASYCUDAFinancialTermsCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialTermsCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialTermsDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description");
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialTerms));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialTerms object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialTerms object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialTerms object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialTerms obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialTerms);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialTerms obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialTerms Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialTerms)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialTerms object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialTerms object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialTerms object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialTerms obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialTerms);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialTerms obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialTerms obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialTerms LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialTerms LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialTerms object
        /// </summary>
        public virtual ASYCUDAFinancialTerms Clone()
        {
            return ((ASYCUDAFinancialTerms)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialTermsCode")]
    public partial class ASYCUDAFinancialTermsCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialTermsCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialTermsCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialTermsCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialTermsCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialTermsCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialTermsCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialTermsCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialTermsCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialTermsCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialTermsCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialTermsCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialTermsCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialTermsCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialTermsCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialTermsCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialTermsCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialTermsCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialTermsCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialTermsCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialTermsCode object
        /// </summary>
        public virtual ASYCUDAFinancialTermsCode Clone()
        {
            return ((ASYCUDAFinancialTermsCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialTermsDescription")]
    public partial class ASYCUDAFinancialTermsDescription : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialTermsDescription()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialTermsDescription));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialTermsDescription object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialTermsDescription object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialTermsDescription object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialTermsDescription obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialTermsDescription);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialTermsDescription obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialTermsDescription Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialTermsDescription)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialTermsDescription object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialTermsDescription object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialTermsDescription object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialTermsDescription obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialTermsDescription);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialTermsDescription obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialTermsDescription obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialTermsDescription LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialTermsDescription LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialTermsDescription object
        /// </summary>
        public virtual ASYCUDAFinancialTermsDescription Clone()
        {
            return ((ASYCUDAFinancialTermsDescription)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialDeffered_payment_reference")]
    public partial class ASYCUDAFinancialDeffered_payment_reference : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialDeffered_payment_reference()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialDeffered_payment_reference));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialDeffered_payment_reference object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialDeffered_payment_reference object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialDeffered_payment_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialDeffered_payment_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialDeffered_payment_reference);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialDeffered_payment_reference obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialDeffered_payment_reference Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialDeffered_payment_reference)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialDeffered_payment_reference object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialDeffered_payment_reference object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialDeffered_payment_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialDeffered_payment_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialDeffered_payment_reference);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialDeffered_payment_reference obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialDeffered_payment_reference obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialDeffered_payment_reference LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialDeffered_payment_reference LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialDeffered_payment_reference object
        /// </summary>
        public virtual ASYCUDAFinancialDeffered_payment_reference Clone()
        {
            return ((ASYCUDAFinancialDeffered_payment_reference)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialAmounts")]
    public partial class ASYCUDAFinancialAmounts : System.ComponentModel.INotifyPropertyChanged
    {

        private object total_manual_taxesField;

        private string global_taxesField;

        private string totals_taxesField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialAmounts()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Total_manual_taxes
        {
            get
            {
                return this.total_manual_taxesField;
            }
            set
            {
                if ((this.total_manual_taxesField != null))
                {
                    if ((total_manual_taxesField.Equals(value) != true))
                    {
                        this.total_manual_taxesField = value;
                        this.OnPropertyChanged("Total_manual_taxes");
                    }
                }
                else
                {
                    this.total_manual_taxesField = value;
                    this.OnPropertyChanged("Total_manual_taxes");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Global_taxes
        {
            get
            {
                return this.global_taxesField;
            }
            set
            {
                if ((this.global_taxesField != null))
                {
                    if ((global_taxesField.Equals(value) != true))
                    {
                        this.global_taxesField = value;
                        this.OnPropertyChanged("Global_taxes");
                    }
                }
                else
                {
                    this.global_taxesField = value;
                    this.OnPropertyChanged("Global_taxes");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Totals_taxes
        {
            get
            {
                return this.totals_taxesField;
            }
            set
            {
                if ((this.totals_taxesField != null))
                {
                    if ((totals_taxesField.Equals(value) != true))
                    {
                        this.totals_taxesField = value;
                        this.OnPropertyChanged("Totals_taxes");
                    }
                }
                else
                {
                    this.totals_taxesField = value;
                    this.OnPropertyChanged("Totals_taxes");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialAmounts));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialAmounts object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialAmounts object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialAmounts object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialAmounts obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialAmounts);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialAmounts obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialAmounts Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialAmounts)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialAmounts object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialAmounts object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialAmounts object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialAmounts obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialAmounts);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialAmounts obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialAmounts obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialAmounts LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialAmounts LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialAmounts object
        /// </summary>
        public virtual ASYCUDAFinancialAmounts Clone()
        {
            return ((ASYCUDAFinancialAmounts)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialGuarantee")]
    public partial class ASYCUDAFinancialGuarantee : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAFinancialGuaranteeName nameField;

        private string amountField;

        private object dateField;

        private ASYCUDAFinancialGuaranteeExcluded_country excluded_countryField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialGuarantee()
        {
            this.textField = new ObservableCollection<string>();
            this.excluded_countryField = new ASYCUDAFinancialGuaranteeExcluded_country();
            this.nameField = new ASYCUDAFinancialGuaranteeName();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialGuaranteeName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount
        {
            get
            {
                return this.amountField;
            }
            set
            {
                if ((this.amountField != null))
                {
                    if ((amountField.Equals(value) != true))
                    {
                        this.amountField = value;
                        this.OnPropertyChanged("Amount");
                    }
                }
                else
                {
                    this.amountField = value;
                    this.OnPropertyChanged("Amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((this.dateField != null))
                {
                    if ((dateField.Equals(value) != true))
                    {
                        this.dateField = value;
                        this.OnPropertyChanged("Date");
                    }
                }
                else
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialGuaranteeExcluded_country Excluded_country
        {
            get
            {
                return this.excluded_countryField;
            }
            set
            {
                if ((this.excluded_countryField != null))
                {
                    if ((excluded_countryField.Equals(value) != true))
                    {
                        this.excluded_countryField = value;
                        this.OnPropertyChanged("Excluded_country");
                    }
                }
                else
                {
                    this.excluded_countryField = value;
                    this.OnPropertyChanged("Excluded_country");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialGuarantee));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialGuarantee object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialGuarantee object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuarantee object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialGuarantee obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuarantee);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialGuarantee obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialGuarantee Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialGuarantee)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialGuarantee object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialGuarantee object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuarantee object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialGuarantee obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuarantee);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuarantee obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuarantee obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialGuarantee LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialGuarantee LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialGuarantee object
        /// </summary>
        public virtual ASYCUDAFinancialGuarantee Clone()
        {
            return ((ASYCUDAFinancialGuarantee)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialGuaranteeName")]
    public partial class ASYCUDAFinancialGuaranteeName : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialGuaranteeName()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialGuaranteeName));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeName object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialGuaranteeName object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeName);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeName obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeName Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialGuaranteeName)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeName object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialGuaranteeName object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialGuaranteeName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeName);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeName obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeName obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeName LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialGuaranteeName LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialGuaranteeName object
        /// </summary>
        public virtual ASYCUDAFinancialGuaranteeName Clone()
        {
            return ((ASYCUDAFinancialGuaranteeName)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialGuaranteeExcluded_country")]
    public partial class ASYCUDAFinancialGuaranteeExcluded_country : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAFinancialGuaranteeExcluded_countryCode codeField;

        private ASYCUDAFinancialGuaranteeExcluded_countryName nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialGuaranteeExcluded_country()
        {
            this.textField = new ObservableCollection<string>();
            this.nameField = new ASYCUDAFinancialGuaranteeExcluded_countryName();
            this.codeField = new ASYCUDAFinancialGuaranteeExcluded_countryCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialGuaranteeExcluded_countryCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAFinancialGuaranteeExcluded_countryName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialGuaranteeExcluded_country));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeExcluded_country object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialGuaranteeExcluded_country object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeExcluded_country object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeExcluded_country obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeExcluded_country);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeExcluded_country obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_country Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialGuaranteeExcluded_country)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeExcluded_country object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialGuaranteeExcluded_country object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeExcluded_country object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialGuaranteeExcluded_country obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeExcluded_country);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeExcluded_country obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeExcluded_country obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_country LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_country LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialGuaranteeExcluded_country object
        /// </summary>
        public virtual ASYCUDAFinancialGuaranteeExcluded_country Clone()
        {
            return ((ASYCUDAFinancialGuaranteeExcluded_country)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialGuaranteeExcluded_countryCode")]
    public partial class ASYCUDAFinancialGuaranteeExcluded_countryCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialGuaranteeExcluded_countryCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialGuaranteeExcluded_countryCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeExcluded_countryCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialGuaranteeExcluded_countryCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeExcluded_countryCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeExcluded_countryCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeExcluded_countryCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeExcluded_countryCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_countryCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialGuaranteeExcluded_countryCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeExcluded_countryCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialGuaranteeExcluded_countryCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeExcluded_countryCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialGuaranteeExcluded_countryCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeExcluded_countryCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeExcluded_countryCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeExcluded_countryCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_countryCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_countryCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialGuaranteeExcluded_countryCode object
        /// </summary>
        public virtual ASYCUDAFinancialGuaranteeExcluded_countryCode Clone()
        {
            return ((ASYCUDAFinancialGuaranteeExcluded_countryCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAFinancialGuaranteeExcluded_countryName")]
    public partial class ASYCUDAFinancialGuaranteeExcluded_countryName : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAFinancialGuaranteeExcluded_countryName()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAFinancialGuaranteeExcluded_countryName));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeExcluded_countryName object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAFinancialGuaranteeExcluded_countryName object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeExcluded_countryName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeExcluded_countryName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeExcluded_countryName);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAFinancialGuaranteeExcluded_countryName obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_countryName Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAFinancialGuaranteeExcluded_countryName)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAFinancialGuaranteeExcluded_countryName object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAFinancialGuaranteeExcluded_countryName object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAFinancialGuaranteeExcluded_countryName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAFinancialGuaranteeExcluded_countryName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAFinancialGuaranteeExcluded_countryName);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeExcluded_countryName obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAFinancialGuaranteeExcluded_countryName obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_countryName LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAFinancialGuaranteeExcluded_countryName LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAFinancialGuaranteeExcluded_countryName object
        /// </summary>
        public virtual ASYCUDAFinancialGuaranteeExcluded_countryName Clone()
        {
            return ((ASYCUDAFinancialGuaranteeExcluded_countryName)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAWarehouse")]
    public partial class ASYCUDAWarehouse : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAWarehouseIdentification identificationField;

        private string delayField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAWarehouse()
        {
            this.textField = new ObservableCollection<string>();
            this.identificationField = new ASYCUDAWarehouseIdentification();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAWarehouseIdentification Identification
        {
            get
            {
                return this.identificationField;
            }
            set
            {
                if ((this.identificationField != null))
                {
                    if ((identificationField.Equals(value) != true))
                    {
                        this.identificationField = value;
                        this.OnPropertyChanged("Identification");
                    }
                }
                else
                {
                    this.identificationField = value;
                    this.OnPropertyChanged("Identification");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Delay
        {
            get
            {
                return this.delayField;
            }
            set
            {
                if ((this.delayField != null))
                {
                    if ((delayField.Equals(value) != true))
                    {
                        this.delayField = value;
                        this.OnPropertyChanged("Delay");
                    }
                }
                else
                {
                    this.delayField = value;
                    this.OnPropertyChanged("Delay");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAWarehouse));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAWarehouse object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAWarehouse object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAWarehouse object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAWarehouse obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAWarehouse);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAWarehouse obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAWarehouse Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAWarehouse)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAWarehouse object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAWarehouse object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAWarehouse object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAWarehouse obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAWarehouse);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAWarehouse obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAWarehouse obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAWarehouse LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAWarehouse LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAWarehouse object
        /// </summary>
        public virtual ASYCUDAWarehouse Clone()
        {
            return ((ASYCUDAWarehouse)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAWarehouseIdentification")]
    public partial class ASYCUDAWarehouseIdentification : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAWarehouseIdentification()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAWarehouseIdentification));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAWarehouseIdentification object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAWarehouseIdentification object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAWarehouseIdentification object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAWarehouseIdentification obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAWarehouseIdentification);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAWarehouseIdentification obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAWarehouseIdentification Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAWarehouseIdentification)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAWarehouseIdentification object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAWarehouseIdentification object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAWarehouseIdentification object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAWarehouseIdentification obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAWarehouseIdentification);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAWarehouseIdentification obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAWarehouseIdentification obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAWarehouseIdentification LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAWarehouseIdentification LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAWarehouseIdentification object
        /// </summary>
        public virtual ASYCUDAWarehouseIdentification Clone()
        {
            return ((ASYCUDAWarehouseIdentification)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransit")]
    public partial class ASYCUDATransit : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransitPrincipal principalField;

        private ASYCUDATransitSignature signatureField;

        private ASYCUDATransitDestination destinationField;

        private ASYCUDATransitSeals sealsField;

        private ASYCUDATransitResult_of_control result_of_controlField;

        private object time_limitField;

        private ASYCUDATransitOfficer_name officer_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransit()
        {
            this.textField = new ObservableCollection<string>();
            this.officer_nameField = new ASYCUDATransitOfficer_name();
            this.result_of_controlField = new ASYCUDATransitResult_of_control();
            this.sealsField = new ASYCUDATransitSeals();
            this.destinationField = new ASYCUDATransitDestination();
            this.signatureField = new ASYCUDATransitSignature();
            this.principalField = new ASYCUDATransitPrincipal();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitPrincipal Principal
        {
            get
            {
                return this.principalField;
            }
            set
            {
                if ((this.principalField != null))
                {
                    if ((principalField.Equals(value) != true))
                    {
                        this.principalField = value;
                        this.OnPropertyChanged("Principal");
                    }
                }
                else
                {
                    this.principalField = value;
                    this.OnPropertyChanged("Principal");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitSignature Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature");
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitDestination Destination
        {
            get
            {
                return this.destinationField;
            }
            set
            {
                if ((this.destinationField != null))
                {
                    if ((destinationField.Equals(value) != true))
                    {
                        this.destinationField = value;
                        this.OnPropertyChanged("Destination");
                    }
                }
                else
                {
                    this.destinationField = value;
                    this.OnPropertyChanged("Destination");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitSeals Seals
        {
            get
            {
                return this.sealsField;
            }
            set
            {
                if ((this.sealsField != null))
                {
                    if ((sealsField.Equals(value) != true))
                    {
                        this.sealsField = value;
                        this.OnPropertyChanged("Seals");
                    }
                }
                else
                {
                    this.sealsField = value;
                    this.OnPropertyChanged("Seals");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitResult_of_control Result_of_control
        {
            get
            {
                return this.result_of_controlField;
            }
            set
            {
                if ((this.result_of_controlField != null))
                {
                    if ((result_of_controlField.Equals(value) != true))
                    {
                        this.result_of_controlField = value;
                        this.OnPropertyChanged("Result_of_control");
                    }
                }
                else
                {
                    this.result_of_controlField = value;
                    this.OnPropertyChanged("Result_of_control");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Time_limit
        {
            get
            {
                return this.time_limitField;
            }
            set
            {
                if ((this.time_limitField != null))
                {
                    if ((time_limitField.Equals(value) != true))
                    {
                        this.time_limitField = value;
                        this.OnPropertyChanged("Time_limit");
                    }
                }
                else
                {
                    this.time_limitField = value;
                    this.OnPropertyChanged("Time_limit");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitOfficer_name Officer_name
        {
            get
            {
                return this.officer_nameField;
            }
            set
            {
                if ((this.officer_nameField != null))
                {
                    if ((officer_nameField.Equals(value) != true))
                    {
                        this.officer_nameField = value;
                        this.OnPropertyChanged("Officer_name");
                    }
                }
                else
                {
                    this.officer_nameField = value;
                    this.OnPropertyChanged("Officer_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransit));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransit object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransit object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransit object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransit obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransit);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransit obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransit Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransit)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransit object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransit object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransit object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransit obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransit);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransit obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransit obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransit LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransit LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransit object
        /// </summary>
        public virtual ASYCUDATransit Clone()
        {
            return ((ASYCUDATransit)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitPrincipal")]
    public partial class ASYCUDATransitPrincipal : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransitPrincipalCode codeField;

        private ASYCUDATransitPrincipalName nameField;

        private ASYCUDATransitPrincipalRepresentative representativeField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitPrincipal()
        {
            this.textField = new ObservableCollection<string>();
            this.representativeField = new ASYCUDATransitPrincipalRepresentative();
            this.nameField = new ASYCUDATransitPrincipalName();
            this.codeField = new ASYCUDATransitPrincipalCode();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitPrincipalCode Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitPrincipalName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitPrincipalRepresentative Representative
        {
            get
            {
                return this.representativeField;
            }
            set
            {
                if ((this.representativeField != null))
                {
                    if ((representativeField.Equals(value) != true))
                    {
                        this.representativeField = value;
                        this.OnPropertyChanged("Representative");
                    }
                }
                else
                {
                    this.representativeField = value;
                    this.OnPropertyChanged("Representative");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitPrincipal));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitPrincipal object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitPrincipal object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipal object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitPrincipal obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipal);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitPrincipal obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitPrincipal Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitPrincipal)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitPrincipal object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitPrincipal object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipal object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitPrincipal obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipal);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipal obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipal obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitPrincipal LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitPrincipal LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitPrincipal object
        /// </summary>
        public virtual ASYCUDATransitPrincipal Clone()
        {
            return ((ASYCUDATransitPrincipal)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitPrincipalCode")]
    public partial class ASYCUDATransitPrincipalCode : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitPrincipalCode()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitPrincipalCode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitPrincipalCode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitPrincipalCode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipalCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitPrincipalCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipalCode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitPrincipalCode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitPrincipalCode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitPrincipalCode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitPrincipalCode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitPrincipalCode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipalCode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitPrincipalCode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipalCode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipalCode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipalCode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitPrincipalCode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitPrincipalCode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitPrincipalCode object
        /// </summary>
        public virtual ASYCUDATransitPrincipalCode Clone()
        {
            return ((ASYCUDATransitPrincipalCode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitPrincipalName")]
    public partial class ASYCUDATransitPrincipalName : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitPrincipalName()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitPrincipalName));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitPrincipalName object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitPrincipalName object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipalName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitPrincipalName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipalName);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitPrincipalName obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitPrincipalName Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitPrincipalName)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitPrincipalName object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitPrincipalName object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipalName object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitPrincipalName obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipalName);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipalName obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipalName obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitPrincipalName LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitPrincipalName LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitPrincipalName object
        /// </summary>
        public virtual ASYCUDATransitPrincipalName Clone()
        {
            return ((ASYCUDATransitPrincipalName)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitPrincipalRepresentative")]
    public partial class ASYCUDATransitPrincipalRepresentative : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitPrincipalRepresentative()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitPrincipalRepresentative));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitPrincipalRepresentative object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitPrincipalRepresentative object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipalRepresentative object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitPrincipalRepresentative obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipalRepresentative);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitPrincipalRepresentative obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitPrincipalRepresentative Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitPrincipalRepresentative)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitPrincipalRepresentative object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitPrincipalRepresentative object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitPrincipalRepresentative object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitPrincipalRepresentative obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitPrincipalRepresentative);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipalRepresentative obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitPrincipalRepresentative obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitPrincipalRepresentative LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitPrincipalRepresentative LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitPrincipalRepresentative object
        /// </summary>
        public virtual ASYCUDATransitPrincipalRepresentative Clone()
        {
            return ((ASYCUDATransitPrincipalRepresentative)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitSignature")]
    public partial class ASYCUDATransitSignature : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransitSignaturePlace placeField;

        private object dateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitSignature()
        {
            this.textField = new ObservableCollection<string>();
            this.placeField = new ASYCUDATransitSignaturePlace();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitSignaturePlace Place
        {
            get
            {
                return this.placeField;
            }
            set
            {
                if ((this.placeField != null))
                {
                    if ((placeField.Equals(value) != true))
                    {
                        this.placeField = value;
                        this.OnPropertyChanged("Place");
                    }
                }
                else
                {
                    this.placeField = value;
                    this.OnPropertyChanged("Place");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((this.dateField != null))
                {
                    if ((dateField.Equals(value) != true))
                    {
                        this.dateField = value;
                        this.OnPropertyChanged("Date");
                    }
                }
                else
                {
                    this.dateField = value;
                    this.OnPropertyChanged("Date");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitSignature));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitSignature object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitSignature object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSignature object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitSignature obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSignature);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitSignature obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitSignature Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitSignature)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitSignature object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitSignature object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSignature object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitSignature obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSignature);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSignature obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSignature obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitSignature LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitSignature LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitSignature object
        /// </summary>
        public virtual ASYCUDATransitSignature Clone()
        {
            return ((ASYCUDATransitSignature)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitSignaturePlace")]
    public partial class ASYCUDATransitSignaturePlace : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitSignaturePlace()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitSignaturePlace));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitSignaturePlace object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitSignaturePlace object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSignaturePlace object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitSignaturePlace obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSignaturePlace);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitSignaturePlace obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitSignaturePlace Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitSignaturePlace)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitSignaturePlace object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitSignaturePlace object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSignaturePlace object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitSignaturePlace obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSignaturePlace);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSignaturePlace obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSignaturePlace obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitSignaturePlace LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitSignaturePlace LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitSignaturePlace object
        /// </summary>
        public virtual ASYCUDATransitSignaturePlace Clone()
        {
            return ((ASYCUDATransitSignaturePlace)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitDestination")]
    public partial class ASYCUDATransitDestination : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDATransitDestinationOffice officeField;

        private ASYCUDATransitDestinationCountry countryField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitDestination()
        {
            this.textField = new ObservableCollection<string>();
            this.countryField = new ASYCUDATransitDestinationCountry();
            this.officeField = new ASYCUDATransitDestinationOffice();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitDestinationOffice Office
        {
            get
            {
                return this.officeField;
            }
            set
            {
                if ((this.officeField != null))
                {
                    if ((officeField.Equals(value) != true))
                    {
                        this.officeField = value;
                        this.OnPropertyChanged("Office");
                    }
                }
                else
                {
                    this.officeField = value;
                    this.OnPropertyChanged("Office");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitDestinationCountry Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                if ((this.countryField != null))
                {
                    if ((countryField.Equals(value) != true))
                    {
                        this.countryField = value;
                        this.OnPropertyChanged("Country");
                    }
                }
                else
                {
                    this.countryField = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitDestination));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitDestination object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitDestination object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitDestination object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitDestination obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitDestination);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitDestination obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitDestination Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitDestination)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitDestination object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitDestination object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitDestination object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitDestination obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitDestination);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitDestination obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitDestination obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitDestination LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitDestination LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitDestination object
        /// </summary>
        public virtual ASYCUDATransitDestination Clone()
        {
            return ((ASYCUDATransitDestination)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitDestinationOffice")]
    public partial class ASYCUDATransitDestinationOffice : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitDestinationOffice()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitDestinationOffice));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitDestinationOffice object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitDestinationOffice object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitDestinationOffice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitDestinationOffice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitDestinationOffice);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitDestinationOffice obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitDestinationOffice Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitDestinationOffice)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitDestinationOffice object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitDestinationOffice object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitDestinationOffice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitDestinationOffice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitDestinationOffice);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitDestinationOffice obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitDestinationOffice obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitDestinationOffice LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitDestinationOffice LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitDestinationOffice object
        /// </summary>
        public virtual ASYCUDATransitDestinationOffice Clone()
        {
            return ((ASYCUDATransitDestinationOffice)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitDestinationCountry")]
    public partial class ASYCUDATransitDestinationCountry : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitDestinationCountry()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitDestinationCountry));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitDestinationCountry object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitDestinationCountry object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitDestinationCountry object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitDestinationCountry obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitDestinationCountry);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitDestinationCountry obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitDestinationCountry Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitDestinationCountry)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitDestinationCountry object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitDestinationCountry object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitDestinationCountry object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitDestinationCountry obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitDestinationCountry);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitDestinationCountry obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitDestinationCountry obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitDestinationCountry LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitDestinationCountry LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitDestinationCountry object
        /// </summary>
        public virtual ASYCUDATransitDestinationCountry Clone()
        {
            return ((ASYCUDATransitDestinationCountry)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitSeals")]
    public partial class ASYCUDATransitSeals : System.ComponentModel.INotifyPropertyChanged
    {

        private object numberField;

        private ASYCUDATransitSealsIdentity identityField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitSeals()
        {
            this.textField = new ObservableCollection<string>();
            this.identityField = new ASYCUDATransitSealsIdentity();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                if ((this.numberField != null))
                {
                    if ((numberField.Equals(value) != true))
                    {
                        this.numberField = value;
                        this.OnPropertyChanged("Number");
                    }
                }
                else
                {
                    this.numberField = value;
                    this.OnPropertyChanged("Number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDATransitSealsIdentity Identity
        {
            get
            {
                return this.identityField;
            }
            set
            {
                if ((this.identityField != null))
                {
                    if ((identityField.Equals(value) != true))
                    {
                        this.identityField = value;
                        this.OnPropertyChanged("Identity");
                    }
                }
                else
                {
                    this.identityField = value;
                    this.OnPropertyChanged("Identity");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitSeals));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitSeals object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitSeals object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSeals object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitSeals obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSeals);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitSeals obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitSeals Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitSeals)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitSeals object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitSeals object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSeals object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitSeals obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSeals);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSeals obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSeals obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitSeals LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitSeals LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitSeals object
        /// </summary>
        public virtual ASYCUDATransitSeals Clone()
        {
            return ((ASYCUDATransitSeals)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitSealsIdentity")]
    public partial class ASYCUDATransitSealsIdentity : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitSealsIdentity()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitSealsIdentity));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitSealsIdentity object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitSealsIdentity object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSealsIdentity object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitSealsIdentity obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSealsIdentity);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitSealsIdentity obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitSealsIdentity Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitSealsIdentity)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitSealsIdentity object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitSealsIdentity object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitSealsIdentity object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitSealsIdentity obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitSealsIdentity);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSealsIdentity obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitSealsIdentity obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitSealsIdentity LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitSealsIdentity LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitSealsIdentity object
        /// </summary>
        public virtual ASYCUDATransitSealsIdentity Clone()
        {
            return ((ASYCUDATransitSealsIdentity)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitResult_of_control")]
    public partial class ASYCUDATransitResult_of_control : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitResult_of_control()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitResult_of_control));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitResult_of_control object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitResult_of_control object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitResult_of_control object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitResult_of_control obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitResult_of_control);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitResult_of_control obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitResult_of_control Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitResult_of_control)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitResult_of_control object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitResult_of_control object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitResult_of_control object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitResult_of_control obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitResult_of_control);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitResult_of_control obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitResult_of_control obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitResult_of_control LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitResult_of_control LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitResult_of_control object
        /// </summary>
        public virtual ASYCUDATransitResult_of_control Clone()
        {
            return ((ASYCUDATransitResult_of_control)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDATransitOfficer_name")]
    public partial class ASYCUDATransitOfficer_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDATransitOfficer_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDATransitOfficer_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDATransitOfficer_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDATransitOfficer_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDATransitOfficer_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDATransitOfficer_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitOfficer_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDATransitOfficer_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDATransitOfficer_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDATransitOfficer_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDATransitOfficer_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDATransitOfficer_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDATransitOfficer_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDATransitOfficer_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDATransitOfficer_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitOfficer_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDATransitOfficer_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDATransitOfficer_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDATransitOfficer_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDATransitOfficer_name object
        /// </summary>
        public virtual ASYCUDATransitOfficer_name Clone()
        {
            return ((ASYCUDATransitOfficer_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuation")]
    public partial class ASYCUDAValuation : System.ComponentModel.INotifyPropertyChanged
    {

        private string calculation_working_modeField;

        private ASYCUDAValuationWeight weightField;

        private string total_costField;

        private string total_CIFField;

        private ASYCUDAValuationGs_Invoice gs_InvoiceField;

        private ASYCUDAValuationGs_external_freight gs_external_freightField;

        private ASYCUDAValuationGs_internal_freight gs_internal_freightField;

        private ASYCUDAValuationGs_insurance gs_insuranceField;

        private ASYCUDAValuationGs_other_cost gs_other_costField;

        private ASYCUDAValuationGs_deduction gs_deductionField;

        private ASYCUDAValuationTotal totalField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuation()
        {
            this.textField = new ObservableCollection<string>();
            this.totalField = new ASYCUDAValuationTotal();
            this.gs_deductionField = new ASYCUDAValuationGs_deduction();
            this.gs_other_costField = new ASYCUDAValuationGs_other_cost();
            this.gs_insuranceField = new ASYCUDAValuationGs_insurance();
            this.gs_internal_freightField = new ASYCUDAValuationGs_internal_freight();
            this.gs_external_freightField = new ASYCUDAValuationGs_external_freight();
            this.gs_InvoiceField = new ASYCUDAValuationGs_Invoice();
            this.weightField = new ASYCUDAValuationWeight();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Calculation_working_mode
        {
            get
            {
                return this.calculation_working_modeField;
            }
            set
            {
                if ((this.calculation_working_modeField != null))
                {
                    if ((calculation_working_modeField.Equals(value) != true))
                    {
                        this.calculation_working_modeField = value;
                        this.OnPropertyChanged("Calculation_working_mode");
                    }
                }
                else
                {
                    this.calculation_working_modeField = value;
                    this.OnPropertyChanged("Calculation_working_mode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationWeight Weight
        {
            get
            {
                return this.weightField;
            }
            set
            {
                if ((this.weightField != null))
                {
                    if ((weightField.Equals(value) != true))
                    {
                        this.weightField = value;
                        this.OnPropertyChanged("Weight");
                    }
                }
                else
                {
                    this.weightField = value;
                    this.OnPropertyChanged("Weight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_cost
        {
            get
            {
                return this.total_costField;
            }
            set
            {
                if ((this.total_costField != null))
                {
                    if ((total_costField.Equals(value) != true))
                    {
                        this.total_costField = value;
                        this.OnPropertyChanged("Total_cost");
                    }
                }
                else
                {
                    this.total_costField = value;
                    this.OnPropertyChanged("Total_cost");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_CIF
        {
            get
            {
                return this.total_CIFField;
            }
            set
            {
                if ((this.total_CIFField != null))
                {
                    if ((total_CIFField.Equals(value) != true))
                    {
                        this.total_CIFField = value;
                        this.OnPropertyChanged("Total_CIF");
                    }
                }
                else
                {
                    this.total_CIFField = value;
                    this.OnPropertyChanged("Total_CIF");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_Invoice Gs_Invoice
        {
            get
            {
                return this.gs_InvoiceField;
            }
            set
            {
                if ((this.gs_InvoiceField != null))
                {
                    if ((gs_InvoiceField.Equals(value) != true))
                    {
                        this.gs_InvoiceField = value;
                        this.OnPropertyChanged("Gs_Invoice");
                    }
                }
                else
                {
                    this.gs_InvoiceField = value;
                    this.OnPropertyChanged("Gs_Invoice");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_external_freight Gs_external_freight
        {
            get
            {
                return this.gs_external_freightField;
            }
            set
            {
                if ((this.gs_external_freightField != null))
                {
                    if ((gs_external_freightField.Equals(value) != true))
                    {
                        this.gs_external_freightField = value;
                        this.OnPropertyChanged("Gs_external_freight");
                    }
                }
                else
                {
                    this.gs_external_freightField = value;
                    this.OnPropertyChanged("Gs_external_freight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_internal_freight Gs_internal_freight
        {
            get
            {
                return this.gs_internal_freightField;
            }
            set
            {
                if ((this.gs_internal_freightField != null))
                {
                    if ((gs_internal_freightField.Equals(value) != true))
                    {
                        this.gs_internal_freightField = value;
                        this.OnPropertyChanged("Gs_internal_freight");
                    }
                }
                else
                {
                    this.gs_internal_freightField = value;
                    this.OnPropertyChanged("Gs_internal_freight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_insurance Gs_insurance
        {
            get
            {
                return this.gs_insuranceField;
            }
            set
            {
                if ((this.gs_insuranceField != null))
                {
                    if ((gs_insuranceField.Equals(value) != true))
                    {
                        this.gs_insuranceField = value;
                        this.OnPropertyChanged("Gs_insurance");
                    }
                }
                else
                {
                    this.gs_insuranceField = value;
                    this.OnPropertyChanged("Gs_insurance");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_other_cost Gs_other_cost
        {
            get
            {
                return this.gs_other_costField;
            }
            set
            {
                if ((this.gs_other_costField != null))
                {
                    if ((gs_other_costField.Equals(value) != true))
                    {
                        this.gs_other_costField = value;
                        this.OnPropertyChanged("Gs_other_cost");
                    }
                }
                else
                {
                    this.gs_other_costField = value;
                    this.OnPropertyChanged("Gs_other_cost");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_deduction Gs_deduction
        {
            get
            {
                return this.gs_deductionField;
            }
            set
            {
                if ((this.gs_deductionField != null))
                {
                    if ((gs_deductionField.Equals(value) != true))
                    {
                        this.gs_deductionField = value;
                        this.OnPropertyChanged("Gs_deduction");
                    }
                }
                else
                {
                    this.gs_deductionField = value;
                    this.OnPropertyChanged("Gs_deduction");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationTotal Total
        {
            get
            {
                return this.totalField;
            }
            set
            {
                if ((this.totalField != null))
                {
                    if ((totalField.Equals(value) != true))
                    {
                        this.totalField = value;
                        this.OnPropertyChanged("Total");
                    }
                }
                else
                {
                    this.totalField = value;
                    this.OnPropertyChanged("Total");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuation));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuation object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuation object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuation);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuation obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuation Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuation)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuation object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuation object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuation);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuation obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuation obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuation LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuation LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuation object
        /// </summary>
        public virtual ASYCUDAValuation Clone()
        {
            return ((ASYCUDAValuation)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationWeight")]
    public partial class ASYCUDAValuationWeight : System.ComponentModel.INotifyPropertyChanged
    {

        private string gross_weightField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationWeight()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gross_weight
        {
            get
            {
                return this.gross_weightField;
            }
            set
            {
                if ((this.gross_weightField != null))
                {
                    if ((gross_weightField.Equals(value) != true))
                    {
                        this.gross_weightField = value;
                        this.OnPropertyChanged("Gross_weight");
                    }
                }
                else
                {
                    this.gross_weightField = value;
                    this.OnPropertyChanged("Gross_weight");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationWeight));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationWeight object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationWeight object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationWeight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationWeight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationWeight);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationWeight obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationWeight Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationWeight)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationWeight object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationWeight object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationWeight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationWeight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationWeight);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationWeight obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationWeight obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationWeight LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationWeight LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationWeight object
        /// </summary>
        public virtual ASYCUDAValuationWeight Clone()
        {
            return ((ASYCUDAValuationWeight)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_Invoice")]
    public partial class ASYCUDAValuationGs_Invoice : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAValuationGs_InvoiceCurrency_code currency_codeField;

        private ASYCUDAValuationGs_InvoiceCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_Invoice()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAValuationGs_InvoiceCurrency_name();
            this.currency_codeField = new ASYCUDAValuationGs_InvoiceCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_InvoiceCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_InvoiceCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_Invoice));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_Invoice object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_Invoice object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_Invoice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_Invoice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_Invoice);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_Invoice obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_Invoice Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_Invoice)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_Invoice object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_Invoice object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_Invoice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_Invoice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_Invoice);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_Invoice obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_Invoice obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_Invoice LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_Invoice LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_Invoice object
        /// </summary>
        public virtual ASYCUDAValuationGs_Invoice Clone()
        {
            return ((ASYCUDAValuationGs_Invoice)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_InvoiceCurrency_code")]
    public partial class ASYCUDAValuationGs_InvoiceCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_InvoiceCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_InvoiceCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_InvoiceCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_InvoiceCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_InvoiceCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_InvoiceCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_InvoiceCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_InvoiceCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_InvoiceCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_InvoiceCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_InvoiceCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_InvoiceCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_InvoiceCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_InvoiceCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_InvoiceCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_InvoiceCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_InvoiceCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_InvoiceCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_InvoiceCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_InvoiceCurrency_code object
        /// </summary>
        public virtual ASYCUDAValuationGs_InvoiceCurrency_code Clone()
        {
            return ((ASYCUDAValuationGs_InvoiceCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_InvoiceCurrency_name")]
    public partial class ASYCUDAValuationGs_InvoiceCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_InvoiceCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_InvoiceCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_InvoiceCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_InvoiceCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_InvoiceCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_InvoiceCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_InvoiceCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_InvoiceCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_InvoiceCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_InvoiceCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_InvoiceCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_InvoiceCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_InvoiceCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_InvoiceCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_InvoiceCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_InvoiceCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_InvoiceCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_InvoiceCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_InvoiceCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_InvoiceCurrency_name object
        /// </summary>
        public virtual ASYCUDAValuationGs_InvoiceCurrency_name Clone()
        {
            return ((ASYCUDAValuationGs_InvoiceCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_external_freight")]
    public partial class ASYCUDAValuationGs_external_freight : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAValuationGs_external_freightCurrency_code currency_codeField;

        private string currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_external_freight()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_codeField = new ASYCUDAValuationGs_external_freightCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_external_freightCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_external_freight));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_external_freight object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_external_freight object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_external_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_external_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_external_freight);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_external_freight obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_external_freight Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_external_freight)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_external_freight object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_external_freight object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_external_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_external_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_external_freight);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_external_freight obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_external_freight obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_external_freight LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_external_freight LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_external_freight object
        /// </summary>
        public virtual ASYCUDAValuationGs_external_freight Clone()
        {
            return ((ASYCUDAValuationGs_external_freight)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_external_freightCurrency_code")]
    public partial class ASYCUDAValuationGs_external_freightCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_external_freightCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_external_freightCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_external_freightCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_external_freightCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_external_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_external_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_external_freightCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_external_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_external_freightCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_external_freightCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_external_freightCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_external_freightCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_external_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_external_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_external_freightCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_external_freightCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_external_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_external_freightCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_external_freightCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_external_freightCurrency_code object
        /// </summary>
        public virtual ASYCUDAValuationGs_external_freightCurrency_code Clone()
        {
            return ((ASYCUDAValuationGs_external_freightCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_internal_freight")]
    public partial class ASYCUDAValuationGs_internal_freight : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAValuationGs_internal_freightCurrency_code currency_codeField;

        private string currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_internal_freight()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_codeField = new ASYCUDAValuationGs_internal_freightCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_internal_freightCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_internal_freight));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_internal_freight object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_internal_freight object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_internal_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_internal_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_internal_freight);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_internal_freight obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_internal_freight Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_internal_freight)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_internal_freight object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_internal_freight object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_internal_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_internal_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_internal_freight);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_internal_freight obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_internal_freight obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_internal_freight LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_internal_freight LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_internal_freight object
        /// </summary>
        public virtual ASYCUDAValuationGs_internal_freight Clone()
        {
            return ((ASYCUDAValuationGs_internal_freight)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_internal_freightCurrency_code")]
    public partial class ASYCUDAValuationGs_internal_freightCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_internal_freightCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_internal_freightCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_internal_freightCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_internal_freightCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_internal_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_internal_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_internal_freightCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_internal_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_internal_freightCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_internal_freightCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_internal_freightCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_internal_freightCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_internal_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_internal_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_internal_freightCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_internal_freightCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_internal_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_internal_freightCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_internal_freightCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_internal_freightCurrency_code object
        /// </summary>
        public virtual ASYCUDAValuationGs_internal_freightCurrency_code Clone()
        {
            return ((ASYCUDAValuationGs_internal_freightCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_insurance")]
    public partial class ASYCUDAValuationGs_insurance : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAValuationGs_insuranceCurrency_code currency_codeField;

        private string currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_insurance()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_codeField = new ASYCUDAValuationGs_insuranceCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_insuranceCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_insurance));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_insurance object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_insurance object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_insurance object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_insurance obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_insurance);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_insurance obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_insurance Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_insurance)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_insurance object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_insurance object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_insurance object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_insurance obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_insurance);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_insurance obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_insurance obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_insurance LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_insurance LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_insurance object
        /// </summary>
        public virtual ASYCUDAValuationGs_insurance Clone()
        {
            return ((ASYCUDAValuationGs_insurance)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_insuranceCurrency_code")]
    public partial class ASYCUDAValuationGs_insuranceCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_insuranceCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_insuranceCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_insuranceCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_insuranceCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_insuranceCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_insuranceCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_insuranceCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_insuranceCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_insuranceCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_insuranceCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_insuranceCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_insuranceCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_insuranceCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_insuranceCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_insuranceCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_insuranceCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_insuranceCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_insuranceCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_insuranceCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_insuranceCurrency_code object
        /// </summary>
        public virtual ASYCUDAValuationGs_insuranceCurrency_code Clone()
        {
            return ((ASYCUDAValuationGs_insuranceCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_other_cost")]
    public partial class ASYCUDAValuationGs_other_cost : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAValuationGs_other_costCurrency_code currency_codeField;

        private string currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_other_cost()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_codeField = new ASYCUDAValuationGs_other_costCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_other_costCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_other_cost));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_other_cost object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_other_cost object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_other_cost object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_other_cost obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_other_cost);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_other_cost obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_other_cost Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_other_cost)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_other_cost object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_other_cost object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_other_cost object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_other_cost obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_other_cost);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_other_cost obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_other_cost obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_other_cost LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_other_cost LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_other_cost object
        /// </summary>
        public virtual ASYCUDAValuationGs_other_cost Clone()
        {
            return ((ASYCUDAValuationGs_other_cost)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_other_costCurrency_code")]
    public partial class ASYCUDAValuationGs_other_costCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_other_costCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_other_costCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_other_costCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_other_costCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_other_costCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_other_costCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_other_costCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_other_costCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_other_costCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_other_costCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_other_costCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_other_costCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_other_costCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_other_costCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_other_costCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_other_costCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_other_costCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_other_costCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_other_costCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_other_costCurrency_code object
        /// </summary>
        public virtual ASYCUDAValuationGs_other_costCurrency_code Clone()
        {
            return ((ASYCUDAValuationGs_other_costCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_deduction")]
    public partial class ASYCUDAValuationGs_deduction : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAValuationGs_deductionCurrency_code currency_codeField;

        private string currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_deduction()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_codeField = new ASYCUDAValuationGs_deductionCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAValuationGs_deductionCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_deduction));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_deduction object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_deduction object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_deduction object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_deduction obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_deduction);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_deduction obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_deduction Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_deduction)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_deduction object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_deduction object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_deduction object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_deduction obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_deduction);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_deduction obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_deduction obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_deduction LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_deduction LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_deduction object
        /// </summary>
        public virtual ASYCUDAValuationGs_deduction Clone()
        {
            return ((ASYCUDAValuationGs_deduction)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationGs_deductionCurrency_code")]
    public partial class ASYCUDAValuationGs_deductionCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationGs_deductionCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationGs_deductionCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationGs_deductionCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationGs_deductionCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_deductionCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationGs_deductionCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_deductionCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationGs_deductionCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationGs_deductionCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationGs_deductionCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationGs_deductionCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationGs_deductionCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationGs_deductionCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationGs_deductionCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationGs_deductionCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_deductionCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationGs_deductionCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationGs_deductionCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationGs_deductionCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationGs_deductionCurrency_code object
        /// </summary>
        public virtual ASYCUDAValuationGs_deductionCurrency_code Clone()
        {
            return ((ASYCUDAValuationGs_deductionCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAValuationTotal")]
    public partial class ASYCUDAValuationTotal : System.ComponentModel.INotifyPropertyChanged
    {

        private string total_invoiceField;

        private string total_weightField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAValuationTotal()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_invoice
        {
            get
            {
                return this.total_invoiceField;
            }
            set
            {
                if ((this.total_invoiceField != null))
                {
                    if ((total_invoiceField.Equals(value) != true))
                    {
                        this.total_invoiceField = value;
                        this.OnPropertyChanged("Total_invoice");
                    }
                }
                else
                {
                    this.total_invoiceField = value;
                    this.OnPropertyChanged("Total_invoice");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_weight
        {
            get
            {
                return this.total_weightField;
            }
            set
            {
                if ((this.total_weightField != null))
                {
                    if ((total_weightField.Equals(value) != true))
                    {
                        this.total_weightField = value;
                        this.OnPropertyChanged("Total_weight");
                    }
                }
                else
                {
                    this.total_weightField = value;
                    this.OnPropertyChanged("Total_weight");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAValuationTotal));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAValuationTotal object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAValuationTotal object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationTotal object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAValuationTotal obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationTotal);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAValuationTotal obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAValuationTotal Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAValuationTotal)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAValuationTotal object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAValuationTotal object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAValuationTotal object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAValuationTotal obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAValuationTotal);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationTotal obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAValuationTotal obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAValuationTotal LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAValuationTotal LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAValuationTotal object
        /// </summary>
        public virtual ASYCUDAValuationTotal Clone()
        {
            return ((ASYCUDAValuationTotal)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAContainer")]
    public partial class ASYCUDAContainer : System.ComponentModel.INotifyPropertyChanged
    {

        private string item_NumberField;

        private string container_identityField;

        private string container_typeField;

        private string empty_full_indicatorField;

        private ASYCUDAContainerGross_weight gross_weightField;

        private string goods_descriptionField;

        private string packages_typeField;

        private string packages_numberField;

        private string packages_weightField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAContainer()
        {
            this.textField = new ObservableCollection<string>();
            this.gross_weightField = new ASYCUDAContainerGross_weight();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item_Number
        {
            get
            {
                return this.item_NumberField;
            }
            set
            {
                if ((this.item_NumberField != null))
                {
                    if ((item_NumberField.Equals(value) != true))
                    {
                        this.item_NumberField = value;
                        this.OnPropertyChanged("Item_Number");
                    }
                }
                else
                {
                    this.item_NumberField = value;
                    this.OnPropertyChanged("Item_Number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Container_identity
        {
            get
            {
                return this.container_identityField;
            }
            set
            {
                if ((this.container_identityField != null))
                {
                    if ((container_identityField.Equals(value) != true))
                    {
                        this.container_identityField = value;
                        this.OnPropertyChanged("Container_identity");
                    }
                }
                else
                {
                    this.container_identityField = value;
                    this.OnPropertyChanged("Container_identity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Container_type
        {
            get
            {
                return this.container_typeField;
            }
            set
            {
                if ((this.container_typeField != null))
                {
                    if ((container_typeField.Equals(value) != true))
                    {
                        this.container_typeField = value;
                        this.OnPropertyChanged("Container_type");
                    }
                }
                else
                {
                    this.container_typeField = value;
                    this.OnPropertyChanged("Container_type");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Empty_full_indicator
        {
            get
            {
                return this.empty_full_indicatorField;
            }
            set
            {
                if ((this.empty_full_indicatorField != null))
                {
                    if ((empty_full_indicatorField.Equals(value) != true))
                    {
                        this.empty_full_indicatorField = value;
                        this.OnPropertyChanged("Empty_full_indicator");
                    }
                }
                else
                {
                    this.empty_full_indicatorField = value;
                    this.OnPropertyChanged("Empty_full_indicator");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAContainerGross_weight Gross_weight
        {
            get
            {
                return this.gross_weightField;
            }
            set
            {
                if ((this.gross_weightField != null))
                {
                    if ((gross_weightField.Equals(value) != true))
                    {
                        this.gross_weightField = value;
                        this.OnPropertyChanged("Gross_weight");
                    }
                }
                else
                {
                    this.gross_weightField = value;
                    this.OnPropertyChanged("Gross_weight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goods_description
        {
            get
            {
                return this.goods_descriptionField;
            }
            set
            {
                if ((this.goods_descriptionField != null))
                {
                    if ((goods_descriptionField.Equals(value) != true))
                    {
                        this.goods_descriptionField = value;
                        this.OnPropertyChanged("Goods_description");
                    }
                }
                else
                {
                    this.goods_descriptionField = value;
                    this.OnPropertyChanged("Goods_description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Packages_type
        {
            get
            {
                return this.packages_typeField;
            }
            set
            {
                if ((this.packages_typeField != null))
                {
                    if ((packages_typeField.Equals(value) != true))
                    {
                        this.packages_typeField = value;
                        this.OnPropertyChanged("Packages_type");
                    }
                }
                else
                {
                    this.packages_typeField = value;
                    this.OnPropertyChanged("Packages_type");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Packages_number
        {
            get
            {
                return this.packages_numberField;
            }
            set
            {
                if ((this.packages_numberField != null))
                {
                    if ((packages_numberField.Equals(value) != true))
                    {
                        this.packages_numberField = value;
                        this.OnPropertyChanged("Packages_number");
                    }
                }
                else
                {
                    this.packages_numberField = value;
                    this.OnPropertyChanged("Packages_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Packages_weight
        {
            get
            {
                return this.packages_weightField;
            }
            set
            {
                if ((this.packages_weightField != null))
                {
                    if ((packages_weightField.Equals(value) != true))
                    {
                        this.packages_weightField = value;
                        this.OnPropertyChanged("Packages_weight");
                    }
                }
                else
                {
                    this.packages_weightField = value;
                    this.OnPropertyChanged("Packages_weight");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAContainer));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAContainer object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAContainer object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAContainer object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAContainer obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAContainer);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAContainer obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAContainer Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAContainer)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAContainer object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAContainer object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAContainer object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAContainer obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAContainer);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAContainer obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAContainer obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAContainer LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAContainer LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAContainer object
        /// </summary>
        public virtual ASYCUDAContainer Clone()
        {
            return ((ASYCUDAContainer)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAContainerGross_weight")]
    public partial class ASYCUDAContainerGross_weight : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAContainerGross_weight()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAContainerGross_weight));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAContainerGross_weight object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAContainerGross_weight object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAContainerGross_weight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAContainerGross_weight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAContainerGross_weight);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAContainerGross_weight obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAContainerGross_weight Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAContainerGross_weight)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAContainerGross_weight object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAContainerGross_weight object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAContainerGross_weight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAContainerGross_weight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAContainerGross_weight);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAContainerGross_weight obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAContainerGross_weight obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAContainerGross_weight LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAContainerGross_weight LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAContainerGross_weight object
        /// </summary>
        public virtual ASYCUDAContainerGross_weight Clone()
        {
            return ((ASYCUDAContainerGross_weight)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAPreviousItem")]
    public partial class ASYCUDAPreviousItem : System.ComponentModel.INotifyPropertyChanged
    {

        private string packages_numberField;

        private string previous_Packages_numberField;

        private string hs_codeField;

        private string commodity_codeField;

        private string previous_item_numberField;

        private string goods_originField;

        private string net_weightField;

        private string prev_net_weightField;

        private string prev_reg_serField;

        private string prev_reg_nbrField;

        private string prev_reg_datField;

        private string prev_reg_cuoField;

        private ASYCUDAPreviousItemFlag flagField;

        private string suplementary_QuantityField;

        private string preveious_suplementary_quantityField;

        private string current_valueField;

        private string previous_valueField;

        private string current_item_numberField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAPreviousItem()
        {
            this.textField = new ObservableCollection<string>();
            this.flagField = new ASYCUDAPreviousItemFlag();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Packages_number
        {
            get
            {
                return this.packages_numberField;
            }
            set
            {
                if ((this.packages_numberField != null))
                {
                    if ((packages_numberField.Equals(value) != true))
                    {
                        this.packages_numberField = value;
                        this.OnPropertyChanged("Packages_number");
                    }
                }
                else
                {
                    this.packages_numberField = value;
                    this.OnPropertyChanged("Packages_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Previous_Packages_number
        {
            get
            {
                return this.previous_Packages_numberField;
            }
            set
            {
                if ((this.previous_Packages_numberField != null))
                {
                    if ((previous_Packages_numberField.Equals(value) != true))
                    {
                        this.previous_Packages_numberField = value;
                        this.OnPropertyChanged("Previous_Packages_number");
                    }
                }
                else
                {
                    this.previous_Packages_numberField = value;
                    this.OnPropertyChanged("Previous_Packages_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hs_code
        {
            get
            {
                return this.hs_codeField;
            }
            set
            {
                if ((this.hs_codeField != null))
                {
                    if ((hs_codeField.Equals(value) != true))
                    {
                        this.hs_codeField = value;
                        this.OnPropertyChanged("Hs_code");
                    }
                }
                else
                {
                    this.hs_codeField = value;
                    this.OnPropertyChanged("Hs_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commodity_code
        {
            get
            {
                return this.commodity_codeField;
            }
            set
            {
                if ((this.commodity_codeField != null))
                {
                    if ((commodity_codeField.Equals(value) != true))
                    {
                        this.commodity_codeField = value;
                        this.OnPropertyChanged("Commodity_code");
                    }
                }
                else
                {
                    this.commodity_codeField = value;
                    this.OnPropertyChanged("Commodity_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Previous_item_number
        {
            get
            {
                return this.previous_item_numberField;
            }
            set
            {
                if ((this.previous_item_numberField != null))
                {
                    if ((previous_item_numberField.Equals(value) != true))
                    {
                        this.previous_item_numberField = value;
                        this.OnPropertyChanged("Previous_item_number");
                    }
                }
                else
                {
                    this.previous_item_numberField = value;
                    this.OnPropertyChanged("Previous_item_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goods_origin
        {
            get
            {
                return this.goods_originField;
            }
            set
            {
                if ((this.goods_originField != null))
                {
                    if ((goods_originField.Equals(value) != true))
                    {
                        this.goods_originField = value;
                        this.OnPropertyChanged("Goods_origin");
                    }
                }
                else
                {
                    this.goods_originField = value;
                    this.OnPropertyChanged("Goods_origin");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Net_weight
        {
            get
            {
                return this.net_weightField;
            }
            set
            {
                if ((this.net_weightField != null))
                {
                    if ((net_weightField.Equals(value) != true))
                    {
                        this.net_weightField = value;
                        this.OnPropertyChanged("Net_weight");
                    }
                }
                else
                {
                    this.net_weightField = value;
                    this.OnPropertyChanged("Net_weight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prev_net_weight
        {
            get
            {
                return this.prev_net_weightField;
            }
            set
            {
                if ((this.prev_net_weightField != null))
                {
                    if ((prev_net_weightField.Equals(value) != true))
                    {
                        this.prev_net_weightField = value;
                        this.OnPropertyChanged("Prev_net_weight");
                    }
                }
                else
                {
                    this.prev_net_weightField = value;
                    this.OnPropertyChanged("Prev_net_weight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prev_reg_ser
        {
            get
            {
                return this.prev_reg_serField;
            }
            set
            {
                if ((this.prev_reg_serField != null))
                {
                    if ((prev_reg_serField.Equals(value) != true))
                    {
                        this.prev_reg_serField = value;
                        this.OnPropertyChanged("Prev_reg_ser");
                    }
                }
                else
                {
                    this.prev_reg_serField = value;
                    this.OnPropertyChanged("Prev_reg_ser");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prev_reg_nbr
        {
            get
            {
                return this.prev_reg_nbrField;
            }
            set
            {
                if ((this.prev_reg_nbrField != null))
                {
                    if ((prev_reg_nbrField.Equals(value) != true))
                    {
                        this.prev_reg_nbrField = value;
                        this.OnPropertyChanged("Prev_reg_nbr");
                    }
                }
                else
                {
                    this.prev_reg_nbrField = value;
                    this.OnPropertyChanged("Prev_reg_nbr");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prev_reg_dat
        {
            get
            {
                return this.prev_reg_datField;
            }
            set
            {
                if ((this.prev_reg_datField != null))
                {
                    if ((prev_reg_datField.Equals(value) != true))
                    {
                        this.prev_reg_datField = value;
                        this.OnPropertyChanged("Prev_reg_dat");
                    }
                }
                else
                {
                    this.prev_reg_datField = value;
                    this.OnPropertyChanged("Prev_reg_dat");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prev_reg_cuo
        {
            get
            {
                return this.prev_reg_cuoField;
            }
            set
            {
                if ((this.prev_reg_cuoField != null))
                {
                    if ((prev_reg_cuoField.Equals(value) != true))
                    {
                        this.prev_reg_cuoField = value;
                        this.OnPropertyChanged("Prev_reg_cuo");
                    }
                }
                else
                {
                    this.prev_reg_cuoField = value;
                    this.OnPropertyChanged("Prev_reg_cuo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAPreviousItemFlag flag
        {
            get
            {
                return this.flagField;
            }
            set
            {
                if ((this.flagField != null))
                {
                    if ((flagField.Equals(value) != true))
                    {
                        this.flagField = value;
                        this.OnPropertyChanged("flag");
                    }
                }
                else
                {
                    this.flagField = value;
                    this.OnPropertyChanged("flag");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suplementary_Quantity
        {
            get
            {
                return this.suplementary_QuantityField;
            }
            set
            {
                if ((this.suplementary_QuantityField != null))
                {
                    if ((suplementary_QuantityField.Equals(value) != true))
                    {
                        this.suplementary_QuantityField = value;
                        this.OnPropertyChanged("Suplementary_Quantity");
                    }
                }
                else
                {
                    this.suplementary_QuantityField = value;
                    this.OnPropertyChanged("Suplementary_Quantity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preveious_suplementary_quantity
        {
            get
            {
                return this.preveious_suplementary_quantityField;
            }
            set
            {
                if ((this.preveious_suplementary_quantityField != null))
                {
                    if ((preveious_suplementary_quantityField.Equals(value) != true))
                    {
                        this.preveious_suplementary_quantityField = value;
                        this.OnPropertyChanged("Preveious_suplementary_quantity");
                    }
                }
                else
                {
                    this.preveious_suplementary_quantityField = value;
                    this.OnPropertyChanged("Preveious_suplementary_quantity");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Current_value
        {
            get
            {
                return this.current_valueField;
            }
            set
            {
                if ((this.current_valueField != null))
                {
                    if ((current_valueField.Equals(value) != true))
                    {
                        this.current_valueField = value;
                        this.OnPropertyChanged("Current_value");
                    }
                }
                else
                {
                    this.current_valueField = value;
                    this.OnPropertyChanged("Current_value");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Previous_value
        {
            get
            {
                return this.previous_valueField;
            }
            set
            {
                if ((this.previous_valueField != null))
                {
                    if ((previous_valueField.Equals(value) != true))
                    {
                        this.previous_valueField = value;
                        this.OnPropertyChanged("Previous_value");
                    }
                }
                else
                {
                    this.previous_valueField = value;
                    this.OnPropertyChanged("Previous_value");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Current_item_number
        {
            get
            {
                return this.current_item_numberField;
            }
            set
            {
                if ((this.current_item_numberField != null))
                {
                    if ((current_item_numberField.Equals(value) != true))
                    {
                        this.current_item_numberField = value;
                        this.OnPropertyChanged("Current_item_number");
                    }
                }
                else
                {
                    this.current_item_numberField = value;
                    this.OnPropertyChanged("Current_item_number");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAPreviousItem));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAPreviousItem object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAPreviousItem object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAPreviousItem object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAPreviousItem obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPreviousItem);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAPreviousItem obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAPreviousItem Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAPreviousItem)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAPreviousItem object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAPreviousItem object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAPreviousItem object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAPreviousItem obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPreviousItem);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPreviousItem obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPreviousItem obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAPreviousItem LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAPreviousItem LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAPreviousItem object
        /// </summary>
        public virtual ASYCUDAPreviousItem Clone()
        {
            return ((ASYCUDAPreviousItem)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAPreviousItemFlag")]
    public partial class ASYCUDAPreviousItemFlag : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAPreviousItemFlag()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAPreviousItemFlag));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAPreviousItemFlag object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAPreviousItemFlag object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAPreviousItemFlag object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAPreviousItemFlag obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPreviousItemFlag);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAPreviousItemFlag obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAPreviousItemFlag Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAPreviousItemFlag)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAPreviousItemFlag object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAPreviousItemFlag object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAPreviousItemFlag object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAPreviousItemFlag obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAPreviousItemFlag);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPreviousItemFlag obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAPreviousItemFlag obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAPreviousItemFlag LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAPreviousItemFlag LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAPreviousItemFlag object
        /// </summary>
        public virtual ASYCUDAPreviousItemFlag Clone()
        {
            return ((ASYCUDAPreviousItemFlag)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItem")]
    public partial class ASYCUDAItem : System.ComponentModel.INotifyPropertyChanged
    {

        private ObservableCollection<ASYCUDAItemAttached_documents> attached_documentsField;

        private ASYCUDAItemSuppliers_link suppliers_linkField;

        private ASYCUDAItemPackages packagesField;

        private ASYCUDAItemTarification tarificationField;

        private ASYCUDAItemGoods_description goods_descriptionField;

        private ASYCUDAItemPrevious_doc previous_docField;

        private ASYCUDAItemLicence_number licence_numberField;

        private string amount_deducted_from_licenceField;

        private string quantity_deducted_from_licenceField;

        private ASYCUDAItemFree_text_1 free_text_1Field;

        private ASYCUDAItemFree_text_2 free_text_2Field;

        private ASYCUDAItemTaxation taxationField;

        private ASYCUDAItemValuation_item valuation_itemField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItem()
        {
            this.textField = new ObservableCollection<string>();
            this.valuation_itemField = new ASYCUDAItemValuation_item();
            this.taxationField = new ASYCUDAItemTaxation();
            this.free_text_2Field = new ASYCUDAItemFree_text_2();
            this.free_text_1Field = new ASYCUDAItemFree_text_1();
            this.licence_numberField = new ASYCUDAItemLicence_number();
            this.previous_docField = new ASYCUDAItemPrevious_doc();
            this.goods_descriptionField = new ASYCUDAItemGoods_description();
            this.tarificationField = new ASYCUDAItemTarification();
            this.packagesField = new ASYCUDAItemPackages();
            this.suppliers_linkField = new ASYCUDAItemSuppliers_link();
            this.attached_documentsField = new ObservableCollection<ASYCUDAItemAttached_documents>();
        }

        [System.Xml.Serialization.XmlElementAttribute("Attached_documents")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<ASYCUDAItemAttached_documents> Attached_documents
        {
            get
            {
                return this.attached_documentsField;
            }
            set
            {
                if ((this.attached_documentsField != null))
                {
                    if ((attached_documentsField.Equals(value) != true))
                    {
                        this.attached_documentsField = value;
                        this.OnPropertyChanged("Attached_documents");
                    }
                }
                else
                {
                    this.attached_documentsField = value;
                    this.OnPropertyChanged("Attached_documents");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemSuppliers_link Suppliers_link
        {
            get
            {
                return this.suppliers_linkField;
            }
            set
            {
                if ((this.suppliers_linkField != null))
                {
                    if ((suppliers_linkField.Equals(value) != true))
                    {
                        this.suppliers_linkField = value;
                        this.OnPropertyChanged("Suppliers_link");
                    }
                }
                else
                {
                    this.suppliers_linkField = value;
                    this.OnPropertyChanged("Suppliers_link");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPackages Packages
        {
            get
            {
                return this.packagesField;
            }
            set
            {
                if ((this.packagesField != null))
                {
                    if ((packagesField.Equals(value) != true))
                    {
                        this.packagesField = value;
                        this.OnPropertyChanged("Packages");
                    }
                }
                else
                {
                    this.packagesField = value;
                    this.OnPropertyChanged("Packages");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarification Tarification
        {
            get
            {
                return this.tarificationField;
            }
            set
            {
                if ((this.tarificationField != null))
                {
                    if ((tarificationField.Equals(value) != true))
                    {
                        this.tarificationField = value;
                        this.OnPropertyChanged("Tarification");
                    }
                }
                else
                {
                    this.tarificationField = value;
                    this.OnPropertyChanged("Tarification");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemGoods_description Goods_description
        {
            get
            {
                return this.goods_descriptionField;
            }
            set
            {
                if ((this.goods_descriptionField != null))
                {
                    if ((goods_descriptionField.Equals(value) != true))
                    {
                        this.goods_descriptionField = value;
                        this.OnPropertyChanged("Goods_description");
                    }
                }
                else
                {
                    this.goods_descriptionField = value;
                    this.OnPropertyChanged("Goods_description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPrevious_doc Previous_doc
        {
            get
            {
                return this.previous_docField;
            }
            set
            {
                if ((this.previous_docField != null))
                {
                    if ((previous_docField.Equals(value) != true))
                    {
                        this.previous_docField = value;
                        this.OnPropertyChanged("Previous_doc");
                    }
                }
                else
                {
                    this.previous_docField = value;
                    this.OnPropertyChanged("Previous_doc");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemLicence_number Licence_number
        {
            get
            {
                return this.licence_numberField;
            }
            set
            {
                if ((this.licence_numberField != null))
                {
                    if ((licence_numberField.Equals(value) != true))
                    {
                        this.licence_numberField = value;
                        this.OnPropertyChanged("Licence_number");
                    }
                }
                else
                {
                    this.licence_numberField = value;
                    this.OnPropertyChanged("Licence_number");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_deducted_from_licence
        {
            get
            {
                return this.amount_deducted_from_licenceField;
            }
            set
            {
                if ((this.amount_deducted_from_licenceField != null))
                {
                    if ((amount_deducted_from_licenceField.Equals(value) != true))
                    {
                        this.amount_deducted_from_licenceField = value;
                        this.OnPropertyChanged("Amount_deducted_from_licence");
                    }
                }
                else
                {
                    this.amount_deducted_from_licenceField = value;
                    this.OnPropertyChanged("Amount_deducted_from_licence");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantity_deducted_from_licence
        {
            get
            {
                return this.quantity_deducted_from_licenceField;
            }
            set
            {
                if ((this.quantity_deducted_from_licenceField != null))
                {
                    if ((quantity_deducted_from_licenceField.Equals(value) != true))
                    {
                        this.quantity_deducted_from_licenceField = value;
                        this.OnPropertyChanged("Quantity_deducted_from_licence");
                    }
                }
                else
                {
                    this.quantity_deducted_from_licenceField = value;
                    this.OnPropertyChanged("Quantity_deducted_from_licence");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemFree_text_1 Free_text_1
        {
            get
            {
                return this.free_text_1Field;
            }
            set
            {
                if ((this.free_text_1Field != null))
                {
                    if ((free_text_1Field.Equals(value) != true))
                    {
                        this.free_text_1Field = value;
                        this.OnPropertyChanged("Free_text_1");
                    }
                }
                else
                {
                    this.free_text_1Field = value;
                    this.OnPropertyChanged("Free_text_1");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemFree_text_2 Free_text_2
        {
            get
            {
                return this.free_text_2Field;
            }
            set
            {
                if ((this.free_text_2Field != null))
                {
                    if ((free_text_2Field.Equals(value) != true))
                    {
                        this.free_text_2Field = value;
                        this.OnPropertyChanged("Free_text_2");
                    }
                }
                else
                {
                    this.free_text_2Field = value;
                    this.OnPropertyChanged("Free_text_2");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTaxation Taxation
        {
            get
            {
                return this.taxationField;
            }
            set
            {
                if ((this.taxationField != null))
                {
                    if ((taxationField.Equals(value) != true))
                    {
                        this.taxationField = value;
                        this.OnPropertyChanged("Taxation");
                    }
                }
                else
                {
                    this.taxationField = value;
                    this.OnPropertyChanged("Taxation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_item Valuation_item
        {
            get
            {
                return this.valuation_itemField;
            }
            set
            {
                if ((this.valuation_itemField != null))
                {
                    if ((valuation_itemField.Equals(value) != true))
                    {
                        this.valuation_itemField = value;
                        this.OnPropertyChanged("Valuation_item");
                    }
                }
                else
                {
                    this.valuation_itemField = value;
                    this.OnPropertyChanged("Valuation_item");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItem));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItem object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItem object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItem object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItem obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItem);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItem obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItem Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItem)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItem object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItem object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItem object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItem obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItem);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItem obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItem obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItem LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItem LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItem object
        /// </summary>
        public virtual ASYCUDAItem Clone()
        {
            return ((ASYCUDAItem)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemAttached_documents")]
    public partial class ASYCUDAItemAttached_documents : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAItemAttached_documentsAttached_document_code attached_document_codeField;

        private ASYCUDAItemAttached_documentsAttached_document_name attached_document_nameField;

        private ASYCUDAItemAttached_documentsAttached_document_reference attached_document_referenceField;

        private ASYCUDAItemAttached_documentsAttached_document_from_rule attached_document_from_ruleField;

        private string attached_document_dateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemAttached_documents()
        {
            this.textField = new ObservableCollection<string>();
            this.attached_document_from_ruleField = new ASYCUDAItemAttached_documentsAttached_document_from_rule();
            this.attached_document_referenceField = new ASYCUDAItemAttached_documentsAttached_document_reference();
            this.attached_document_nameField = new ASYCUDAItemAttached_documentsAttached_document_name();
            this.attached_document_codeField = new ASYCUDAItemAttached_documentsAttached_document_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemAttached_documentsAttached_document_code Attached_document_code
        {
            get
            {
                return this.attached_document_codeField;
            }
            set
            {
                if ((this.attached_document_codeField != null))
                {
                    if ((attached_document_codeField.Equals(value) != true))
                    {
                        this.attached_document_codeField = value;
                        this.OnPropertyChanged("Attached_document_code");
                    }
                }
                else
                {
                    this.attached_document_codeField = value;
                    this.OnPropertyChanged("Attached_document_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemAttached_documentsAttached_document_name Attached_document_name
        {
            get
            {
                return this.attached_document_nameField;
            }
            set
            {
                if ((this.attached_document_nameField != null))
                {
                    if ((attached_document_nameField.Equals(value) != true))
                    {
                        this.attached_document_nameField = value;
                        this.OnPropertyChanged("Attached_document_name");
                    }
                }
                else
                {
                    this.attached_document_nameField = value;
                    this.OnPropertyChanged("Attached_document_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemAttached_documentsAttached_document_reference Attached_document_reference
        {
            get
            {
                return this.attached_document_referenceField;
            }
            set
            {
                if ((this.attached_document_referenceField != null))
                {
                    if ((attached_document_referenceField.Equals(value) != true))
                    {
                        this.attached_document_referenceField = value;
                        this.OnPropertyChanged("Attached_document_reference");
                    }
                }
                else
                {
                    this.attached_document_referenceField = value;
                    this.OnPropertyChanged("Attached_document_reference");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemAttached_documentsAttached_document_from_rule Attached_document_from_rule
        {
            get
            {
                return this.attached_document_from_ruleField;
            }
            set
            {
                if ((this.attached_document_from_ruleField != null))
                {
                    if ((attached_document_from_ruleField.Equals(value) != true))
                    {
                        this.attached_document_from_ruleField = value;
                        this.OnPropertyChanged("Attached_document_from_rule");
                    }
                }
                else
                {
                    this.attached_document_from_ruleField = value;
                    this.OnPropertyChanged("Attached_document_from_rule");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attached_document_date
        {
            get
            {
                return this.attached_document_dateField;
            }
            set
            {
                if ((this.attached_document_dateField != null))
                {
                    if ((attached_document_dateField.Equals(value) != true))
                    {
                        this.attached_document_dateField = value;
                        this.OnPropertyChanged("Attached_document_date");
                    }
                }
                else
                {
                    this.attached_document_dateField = value;
                    this.OnPropertyChanged("Attached_document_date");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemAttached_documents));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documents object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemAttached_documents object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documents object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documents obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documents);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documents obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documents Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemAttached_documents)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documents object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemAttached_documents object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documents object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemAttached_documents obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documents);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documents obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documents obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documents LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemAttached_documents LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemAttached_documents object
        /// </summary>
        public virtual ASYCUDAItemAttached_documents Clone()
        {
            return ((ASYCUDAItemAttached_documents)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemAttached_documentsAttached_document_code")]
    public partial class ASYCUDAItemAttached_documentsAttached_document_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemAttached_documentsAttached_document_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemAttached_documentsAttached_document_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemAttached_documentsAttached_document_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemAttached_documentsAttached_document_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemAttached_documentsAttached_document_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemAttached_documentsAttached_document_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemAttached_documentsAttached_document_code object
        /// </summary>
        public virtual ASYCUDAItemAttached_documentsAttached_document_code Clone()
        {
            return ((ASYCUDAItemAttached_documentsAttached_document_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemAttached_documentsAttached_document_name")]
    public partial class ASYCUDAItemAttached_documentsAttached_document_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemAttached_documentsAttached_document_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemAttached_documentsAttached_document_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemAttached_documentsAttached_document_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemAttached_documentsAttached_document_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemAttached_documentsAttached_document_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemAttached_documentsAttached_document_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemAttached_documentsAttached_document_name object
        /// </summary>
        public virtual ASYCUDAItemAttached_documentsAttached_document_name Clone()
        {
            return ((ASYCUDAItemAttached_documentsAttached_document_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemAttached_documentsAttached_document_reference")]
    public partial class ASYCUDAItemAttached_documentsAttached_document_reference : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemAttached_documentsAttached_document_reference()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemAttached_documentsAttached_document_reference));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_reference object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemAttached_documentsAttached_document_reference object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_reference);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_reference obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_reference Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemAttached_documentsAttached_document_reference)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_reference object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemAttached_documentsAttached_document_reference object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemAttached_documentsAttached_document_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_reference);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_reference obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_reference obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_reference LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_reference LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemAttached_documentsAttached_document_reference object
        /// </summary>
        public virtual ASYCUDAItemAttached_documentsAttached_document_reference Clone()
        {
            return ((ASYCUDAItemAttached_documentsAttached_document_reference)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemAttached_documentsAttached_document_from_rule")]
    public partial class ASYCUDAItemAttached_documentsAttached_document_from_rule : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemAttached_documentsAttached_document_from_rule()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemAttached_documentsAttached_document_from_rule));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_from_rule object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemAttached_documentsAttached_document_from_rule object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_from_rule object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_from_rule obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_from_rule);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemAttached_documentsAttached_document_from_rule obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_from_rule Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemAttached_documentsAttached_document_from_rule)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemAttached_documentsAttached_document_from_rule object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemAttached_documentsAttached_document_from_rule object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemAttached_documentsAttached_document_from_rule object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemAttached_documentsAttached_document_from_rule obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemAttached_documentsAttached_document_from_rule);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_from_rule obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemAttached_documentsAttached_document_from_rule obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_from_rule LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemAttached_documentsAttached_document_from_rule LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemAttached_documentsAttached_document_from_rule object
        /// </summary>
        public virtual ASYCUDAItemAttached_documentsAttached_document_from_rule Clone()
        {
            return ((ASYCUDAItemAttached_documentsAttached_document_from_rule)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemSuppliers_link")]
    public partial class ASYCUDAItemSuppliers_link : System.ComponentModel.INotifyPropertyChanged
    {

        private string suppliers_link_codeField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemSuppliers_link()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suppliers_link_code
        {
            get
            {
                return this.suppliers_link_codeField;
            }
            set
            {
                if ((this.suppliers_link_codeField != null))
                {
                    if ((suppliers_link_codeField.Equals(value) != true))
                    {
                        this.suppliers_link_codeField = value;
                        this.OnPropertyChanged("Suppliers_link_code");
                    }
                }
                else
                {
                    this.suppliers_link_codeField = value;
                    this.OnPropertyChanged("Suppliers_link_code");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemSuppliers_link));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemSuppliers_link object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemSuppliers_link object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemSuppliers_link object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemSuppliers_link obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemSuppliers_link);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemSuppliers_link obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemSuppliers_link Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemSuppliers_link)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemSuppliers_link object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemSuppliers_link object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemSuppliers_link object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemSuppliers_link obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemSuppliers_link);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemSuppliers_link obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemSuppliers_link obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemSuppliers_link LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemSuppliers_link LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemSuppliers_link object
        /// </summary>
        public virtual ASYCUDAItemSuppliers_link Clone()
        {
            return ((ASYCUDAItemSuppliers_link)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPackages")]
    public partial class ASYCUDAItemPackages : System.ComponentModel.INotifyPropertyChanged
    {

        private string number_of_packagesField;

        private ASYCUDAItemPackagesMarks1_of_packages marks1_of_packagesField;

        private ASYCUDAItemPackagesMarks2_of_packages marks2_of_packagesField;

        private string kind_of_packages_codeField;

        private string kind_of_packages_nameField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPackages()
        {
            this.textField = new ObservableCollection<string>();
            this.marks2_of_packagesField = new ASYCUDAItemPackagesMarks2_of_packages();
            this.marks1_of_packagesField = new ASYCUDAItemPackagesMarks1_of_packages();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number_of_packages
        {
            get
            {
                return this.number_of_packagesField;
            }
            set
            {
                if ((this.number_of_packagesField != null))
                {
                    if ((number_of_packagesField.Equals(value) != true))
                    {
                        this.number_of_packagesField = value;
                        this.OnPropertyChanged("Number_of_packages");
                    }
                }
                else
                {
                    this.number_of_packagesField = value;
                    this.OnPropertyChanged("Number_of_packages");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPackagesMarks1_of_packages Marks1_of_packages
        {
            get
            {
                return this.marks1_of_packagesField;
            }
            set
            {
                if ((this.marks1_of_packagesField != null))
                {
                    if ((marks1_of_packagesField.Equals(value) != true))
                    {
                        this.marks1_of_packagesField = value;
                        this.OnPropertyChanged("Marks1_of_packages");
                    }
                }
                else
                {
                    this.marks1_of_packagesField = value;
                    this.OnPropertyChanged("Marks1_of_packages");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPackagesMarks2_of_packages Marks2_of_packages
        {
            get
            {
                return this.marks2_of_packagesField;
            }
            set
            {
                if ((this.marks2_of_packagesField != null))
                {
                    if ((marks2_of_packagesField.Equals(value) != true))
                    {
                        this.marks2_of_packagesField = value;
                        this.OnPropertyChanged("Marks2_of_packages");
                    }
                }
                else
                {
                    this.marks2_of_packagesField = value;
                    this.OnPropertyChanged("Marks2_of_packages");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kind_of_packages_code
        {
            get
            {
                return this.kind_of_packages_codeField;
            }
            set
            {
                if ((this.kind_of_packages_codeField != null))
                {
                    if ((kind_of_packages_codeField.Equals(value) != true))
                    {
                        this.kind_of_packages_codeField = value;
                        this.OnPropertyChanged("Kind_of_packages_code");
                    }
                }
                else
                {
                    this.kind_of_packages_codeField = value;
                    this.OnPropertyChanged("Kind_of_packages_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kind_of_packages_name
        {
            get
            {
                return this.kind_of_packages_nameField;
            }
            set
            {
                if ((this.kind_of_packages_nameField != null))
                {
                    if ((kind_of_packages_nameField.Equals(value) != true))
                    {
                        this.kind_of_packages_nameField = value;
                        this.OnPropertyChanged("Kind_of_packages_name");
                    }
                }
                else
                {
                    this.kind_of_packages_nameField = value;
                    this.OnPropertyChanged("Kind_of_packages_name");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPackages));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPackages object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPackages object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPackages object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPackages obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPackages);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPackages obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPackages Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPackages)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPackages object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPackages object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPackages object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPackages obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPackages);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPackages obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPackages obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPackages LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPackages LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPackages object
        /// </summary>
        public virtual ASYCUDAItemPackages Clone()
        {
            return ((ASYCUDAItemPackages)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPackagesMarks1_of_packages")]
    public partial class ASYCUDAItemPackagesMarks1_of_packages : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPackagesMarks1_of_packages()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPackagesMarks1_of_packages));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPackagesMarks1_of_packages object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPackagesMarks1_of_packages object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPackagesMarks1_of_packages object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPackagesMarks1_of_packages obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPackagesMarks1_of_packages);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPackagesMarks1_of_packages obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPackagesMarks1_of_packages Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPackagesMarks1_of_packages)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPackagesMarks1_of_packages object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPackagesMarks1_of_packages object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPackagesMarks1_of_packages object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPackagesMarks1_of_packages obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPackagesMarks1_of_packages);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPackagesMarks1_of_packages obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPackagesMarks1_of_packages obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPackagesMarks1_of_packages LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPackagesMarks1_of_packages LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPackagesMarks1_of_packages object
        /// </summary>
        public virtual ASYCUDAItemPackagesMarks1_of_packages Clone()
        {
            return ((ASYCUDAItemPackagesMarks1_of_packages)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPackagesMarks2_of_packages")]
    public partial class ASYCUDAItemPackagesMarks2_of_packages : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPackagesMarks2_of_packages()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPackagesMarks2_of_packages));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPackagesMarks2_of_packages object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPackagesMarks2_of_packages object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPackagesMarks2_of_packages object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPackagesMarks2_of_packages obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPackagesMarks2_of_packages);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPackagesMarks2_of_packages obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPackagesMarks2_of_packages Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPackagesMarks2_of_packages)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPackagesMarks2_of_packages object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPackagesMarks2_of_packages object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPackagesMarks2_of_packages object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPackagesMarks2_of_packages obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPackagesMarks2_of_packages);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPackagesMarks2_of_packages obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPackagesMarks2_of_packages obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPackagesMarks2_of_packages LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPackagesMarks2_of_packages LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPackagesMarks2_of_packages object
        /// </summary>
        public virtual ASYCUDAItemPackagesMarks2_of_packages Clone()
        {
            return ((ASYCUDAItemPackagesMarks2_of_packages)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarification")]
    public partial class ASYCUDAItemTarification : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAItemTarificationTarification_data tarification_dataField;

        private ASYCUDAItemTarificationHScode hScodeField;

        private ASYCUDAItemTarificationPreference_code preference_codeField;

        private string extended_customs_procedureField;

        private string national_customs_procedureField;

        private ASYCUDAItemTarificationQuota_code quota_codeField;

        private ObservableCollection<ASYCUDAItemTarificationSupplementary_unit> supplementary_unitField;

        private string item_priceField;

        private ASYCUDAItemTarificationValuation_method_code valuation_method_codeField;

        private ASYCUDAItemTarificationValue_item value_itemField;

        private ASYCUDAItemTarificationAttached_doc_item attached_doc_itemField;

        private ASYCUDAItemTarificationAI_code aI_codeField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarification()
        {
            this.textField = new ObservableCollection<string>();
            this.aI_codeField = new ASYCUDAItemTarificationAI_code();
            this.attached_doc_itemField = new ASYCUDAItemTarificationAttached_doc_item();
            this.value_itemField = new ASYCUDAItemTarificationValue_item();
            this.valuation_method_codeField = new ASYCUDAItemTarificationValuation_method_code();
            this.supplementary_unitField = new ObservableCollection<ASYCUDAItemTarificationSupplementary_unit>();
            this.quota_codeField = new ASYCUDAItemTarificationQuota_code();
            this.preference_codeField = new ASYCUDAItemTarificationPreference_code();
            this.hScodeField = new ASYCUDAItemTarificationHScode();
            this.tarification_dataField = new ASYCUDAItemTarificationTarification_data();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationTarification_data Tarification_data
        {
            get
            {
                return this.tarification_dataField;
            }
            set
            {
                if ((this.tarification_dataField != null))
                {
                    if ((tarification_dataField.Equals(value) != true))
                    {
                        this.tarification_dataField = value;
                        this.OnPropertyChanged("Tarification_data");
                    }
                }
                else
                {
                    this.tarification_dataField = value;
                    this.OnPropertyChanged("Tarification_data");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationHScode HScode
        {
            get
            {
                return this.hScodeField;
            }
            set
            {
                if ((this.hScodeField != null))
                {
                    if ((hScodeField.Equals(value) != true))
                    {
                        this.hScodeField = value;
                        this.OnPropertyChanged("HScode");
                    }
                }
                else
                {
                    this.hScodeField = value;
                    this.OnPropertyChanged("HScode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationPreference_code Preference_code
        {
            get
            {
                return this.preference_codeField;
            }
            set
            {
                if ((this.preference_codeField != null))
                {
                    if ((preference_codeField.Equals(value) != true))
                    {
                        this.preference_codeField = value;
                        this.OnPropertyChanged("Preference_code");
                    }
                }
                else
                {
                    this.preference_codeField = value;
                    this.OnPropertyChanged("Preference_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extended_customs_procedure
        {
            get
            {
                return this.extended_customs_procedureField;
            }
            set
            {
                if ((this.extended_customs_procedureField != null))
                {
                    if ((extended_customs_procedureField.Equals(value) != true))
                    {
                        this.extended_customs_procedureField = value;
                        this.OnPropertyChanged("Extended_customs_procedure");
                    }
                }
                else
                {
                    this.extended_customs_procedureField = value;
                    this.OnPropertyChanged("Extended_customs_procedure");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string National_customs_procedure
        {
            get
            {
                return this.national_customs_procedureField;
            }
            set
            {
                if ((this.national_customs_procedureField != null))
                {
                    if ((national_customs_procedureField.Equals(value) != true))
                    {
                        this.national_customs_procedureField = value;
                        this.OnPropertyChanged("National_customs_procedure");
                    }
                }
                else
                {
                    this.national_customs_procedureField = value;
                    this.OnPropertyChanged("National_customs_procedure");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationQuota_code Quota_code
        {
            get
            {
                return this.quota_codeField;
            }
            set
            {
                if ((this.quota_codeField != null))
                {
                    if ((quota_codeField.Equals(value) != true))
                    {
                        this.quota_codeField = value;
                        this.OnPropertyChanged("Quota_code");
                    }
                }
                else
                {
                    this.quota_codeField = value;
                    this.OnPropertyChanged("Quota_code");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Supplementary_unit")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<ASYCUDAItemTarificationSupplementary_unit> Supplementary_unit
        {
            get
            {
                return this.supplementary_unitField;
            }
            set
            {
                if ((this.supplementary_unitField != null))
                {
                    if ((supplementary_unitField.Equals(value) != true))
                    {
                        this.supplementary_unitField = value;
                        this.OnPropertyChanged("Supplementary_unit");
                    }
                }
                else
                {
                    this.supplementary_unitField = value;
                    this.OnPropertyChanged("Supplementary_unit");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item_price
        {
            get
            {
                return this.item_priceField;
            }
            set
            {
                if ((this.item_priceField != null))
                {
                    if ((item_priceField.Equals(value) != true))
                    {
                        this.item_priceField = value;
                        this.OnPropertyChanged("Item_price");
                    }
                }
                else
                {
                    this.item_priceField = value;
                    this.OnPropertyChanged("Item_price");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationValuation_method_code Valuation_method_code
        {
            get
            {
                return this.valuation_method_codeField;
            }
            set
            {
                if ((this.valuation_method_codeField != null))
                {
                    if ((valuation_method_codeField.Equals(value) != true))
                    {
                        this.valuation_method_codeField = value;
                        this.OnPropertyChanged("Valuation_method_code");
                    }
                }
                else
                {
                    this.valuation_method_codeField = value;
                    this.OnPropertyChanged("Valuation_method_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationValue_item Value_item
        {
            get
            {
                return this.value_itemField;
            }
            set
            {
                if ((this.value_itemField != null))
                {
                    if ((value_itemField.Equals(value) != true))
                    {
                        this.value_itemField = value;
                        this.OnPropertyChanged("Value_item");
                    }
                }
                else
                {
                    this.value_itemField = value;
                    this.OnPropertyChanged("Value_item");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationAttached_doc_item Attached_doc_item
        {
            get
            {
                return this.attached_doc_itemField;
            }
            set
            {
                if ((this.attached_doc_itemField != null))
                {
                    if ((attached_doc_itemField.Equals(value) != true))
                    {
                        this.attached_doc_itemField = value;
                        this.OnPropertyChanged("Attached_doc_item");
                    }
                }
                else
                {
                    this.attached_doc_itemField = value;
                    this.OnPropertyChanged("Attached_doc_item");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("A.I._code")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationAI_code AI_code
        {
            get
            {
                return this.aI_codeField;
            }
            set
            {
                if ((this.aI_codeField != null))
                {
                    if ((aI_codeField.Equals(value) != true))
                    {
                        this.aI_codeField = value;
                        this.OnPropertyChanged("AI_code");
                    }
                }
                else
                {
                    this.aI_codeField = value;
                    this.OnPropertyChanged("AI_code");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarification));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarification object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarification object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarification object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarification obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarification);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarification obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarification Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarification)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarification object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarification object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarification object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarification obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarification);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarification obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarification obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarification LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarification LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarification object
        /// </summary>
        public virtual ASYCUDAItemTarification Clone()
        {
            return ((ASYCUDAItemTarification)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationTarification_data")]
    public partial class ASYCUDAItemTarificationTarification_data : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationTarification_data()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationTarification_data));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationTarification_data object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationTarification_data object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationTarification_data object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationTarification_data obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationTarification_data);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationTarification_data obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationTarification_data Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationTarification_data)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationTarification_data object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationTarification_data object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationTarification_data object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationTarification_data obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationTarification_data);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationTarification_data obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationTarification_data obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationTarification_data LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationTarification_data LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationTarification_data object
        /// </summary>
        public virtual ASYCUDAItemTarificationTarification_data Clone()
        {
            return ((ASYCUDAItemTarificationTarification_data)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationHScode")]
    public partial class ASYCUDAItemTarificationHScode : System.ComponentModel.INotifyPropertyChanged
    {

        private string commodity_codeField;

        private string precision_1Field;

        private ASYCUDAItemTarificationHScodePrecision_2 precision_2Field;

        private ASYCUDAItemTarificationHScodePrecision_3 precision_3Field;

        private ASYCUDAItemTarificationHScodePrecision_4 precision_4Field;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationHScode()
        {
            this.textField = new ObservableCollection<string>();
            this.precision_4Field = new ASYCUDAItemTarificationHScodePrecision_4();
            this.precision_3Field = new ASYCUDAItemTarificationHScodePrecision_3();
            this.precision_2Field = new ASYCUDAItemTarificationHScodePrecision_2();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commodity_code
        {
            get
            {
                return this.commodity_codeField;
            }
            set
            {
                if ((this.commodity_codeField != null))
                {
                    if ((commodity_codeField.Equals(value) != true))
                    {
                        this.commodity_codeField = value;
                        this.OnPropertyChanged("Commodity_code");
                    }
                }
                else
                {
                    this.commodity_codeField = value;
                    this.OnPropertyChanged("Commodity_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Precision_1
        {
            get
            {
                return this.precision_1Field;
            }
            set
            {
                if ((this.precision_1Field != null))
                {
                    if ((precision_1Field.Equals(value) != true))
                    {
                        this.precision_1Field = value;
                        this.OnPropertyChanged("Precision_1");
                    }
                }
                else
                {
                    this.precision_1Field = value;
                    this.OnPropertyChanged("Precision_1");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationHScodePrecision_2 Precision_2
        {
            get
            {
                return this.precision_2Field;
            }
            set
            {
                if ((this.precision_2Field != null))
                {
                    if ((precision_2Field.Equals(value) != true))
                    {
                        this.precision_2Field = value;
                        this.OnPropertyChanged("Precision_2");
                    }
                }
                else
                {
                    this.precision_2Field = value;
                    this.OnPropertyChanged("Precision_2");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationHScodePrecision_3 Precision_3
        {
            get
            {
                return this.precision_3Field;
            }
            set
            {
                if ((this.precision_3Field != null))
                {
                    if ((precision_3Field.Equals(value) != true))
                    {
                        this.precision_3Field = value;
                        this.OnPropertyChanged("Precision_3");
                    }
                }
                else
                {
                    this.precision_3Field = value;
                    this.OnPropertyChanged("Precision_3");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationHScodePrecision_4 Precision_4
        {
            get
            {
                return this.precision_4Field;
            }
            set
            {
                if ((this.precision_4Field != null))
                {
                    if ((precision_4Field.Equals(value) != true))
                    {
                        this.precision_4Field = value;
                        this.OnPropertyChanged("Precision_4");
                    }
                }
                else
                {
                    this.precision_4Field = value;
                    this.OnPropertyChanged("Precision_4");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationHScode));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScode object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationHScode object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScode);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScode obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScode Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationHScode)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScode object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationHScode object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScode object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationHScode obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScode);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScode obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScode obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScode LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationHScode LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationHScode object
        /// </summary>
        public virtual ASYCUDAItemTarificationHScode Clone()
        {
            return ((ASYCUDAItemTarificationHScode)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationHScodePrecision_2")]
    public partial class ASYCUDAItemTarificationHScodePrecision_2 : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationHScodePrecision_2()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationHScodePrecision_2));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScodePrecision_2 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationHScodePrecision_2 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScodePrecision_2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScodePrecision_2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScodePrecision_2);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScodePrecision_2 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScodePrecision_2 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationHScodePrecision_2)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScodePrecision_2 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationHScodePrecision_2 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScodePrecision_2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationHScodePrecision_2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScodePrecision_2);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScodePrecision_2 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScodePrecision_2 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScodePrecision_2 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationHScodePrecision_2 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationHScodePrecision_2 object
        /// </summary>
        public virtual ASYCUDAItemTarificationHScodePrecision_2 Clone()
        {
            return ((ASYCUDAItemTarificationHScodePrecision_2)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationHScodePrecision_3")]
    public partial class ASYCUDAItemTarificationHScodePrecision_3 : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationHScodePrecision_3));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScodePrecision_3 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationHScodePrecision_3 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScodePrecision_3 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScodePrecision_3 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScodePrecision_3);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScodePrecision_3 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScodePrecision_3 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationHScodePrecision_3)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScodePrecision_3 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationHScodePrecision_3 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScodePrecision_3 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationHScodePrecision_3 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScodePrecision_3);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScodePrecision_3 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScodePrecision_3 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScodePrecision_3 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationHScodePrecision_3 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationHScodePrecision_3 object
        /// </summary>
        public virtual ASYCUDAItemTarificationHScodePrecision_3 Clone()
        {
            return ((ASYCUDAItemTarificationHScodePrecision_3)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationHScodePrecision_4")]
    public partial class ASYCUDAItemTarificationHScodePrecision_4 : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationHScodePrecision_4()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationHScodePrecision_4));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScodePrecision_4 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationHScodePrecision_4 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScodePrecision_4 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScodePrecision_4 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScodePrecision_4);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationHScodePrecision_4 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScodePrecision_4 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationHScodePrecision_4)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationHScodePrecision_4 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationHScodePrecision_4 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationHScodePrecision_4 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationHScodePrecision_4 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationHScodePrecision_4);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScodePrecision_4 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationHScodePrecision_4 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationHScodePrecision_4 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationHScodePrecision_4 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationHScodePrecision_4 object
        /// </summary>
        public virtual ASYCUDAItemTarificationHScodePrecision_4 Clone()
        {
            return ((ASYCUDAItemTarificationHScodePrecision_4)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationPreference_code")]
    public partial class ASYCUDAItemTarificationPreference_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationPreference_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationPreference_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationPreference_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationPreference_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationPreference_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationPreference_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationPreference_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationPreference_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationPreference_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationPreference_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationPreference_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationPreference_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationPreference_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationPreference_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationPreference_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationPreference_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationPreference_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationPreference_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationPreference_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationPreference_code object
        /// </summary>
        public virtual ASYCUDAItemTarificationPreference_code Clone()
        {
            return ((ASYCUDAItemTarificationPreference_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationQuota_code")]
    public partial class ASYCUDAItemTarificationQuota_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationQuota_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationQuota_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationQuota_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationQuota_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationQuota_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationQuota_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationQuota_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationQuota_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationQuota_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationQuota_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationQuota_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationQuota_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationQuota_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationQuota_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationQuota_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationQuota_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationQuota_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationQuota_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationQuota_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationQuota_code object
        /// </summary>
        public virtual ASYCUDAItemTarificationQuota_code Clone()
        {
            return ((ASYCUDAItemTarificationQuota_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationSupplementary_unit")]
    public partial class ASYCUDAItemTarificationSupplementary_unit : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code suppplementary_unit_codeField;

        private ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name suppplementary_unit_nameField;

        private string suppplementary_unit_quantityField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationSupplementary_unit()
        {
            this.textField = new ObservableCollection<string>();
            this.suppplementary_unit_nameField = new ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name();
            this.suppplementary_unit_codeField = new ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code Suppplementary_unit_code
        {
            get
            {
                return this.suppplementary_unit_codeField;
            }
            set
            {
                if ((this.suppplementary_unit_codeField != null))
                {
                    if ((suppplementary_unit_codeField.Equals(value) != true))
                    {
                        this.suppplementary_unit_codeField = value;
                        this.OnPropertyChanged("Suppplementary_unit_code");
                    }
                }
                else
                {
                    this.suppplementary_unit_codeField = value;
                    this.OnPropertyChanged("Suppplementary_unit_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name Suppplementary_unit_name
        {
            get
            {
                return this.suppplementary_unit_nameField;
            }
            set
            {
                if ((this.suppplementary_unit_nameField != null))
                {
                    if ((suppplementary_unit_nameField.Equals(value) != true))
                    {
                        this.suppplementary_unit_nameField = value;
                        this.OnPropertyChanged("Suppplementary_unit_name");
                    }
                }
                else
                {
                    this.suppplementary_unit_nameField = value;
                    this.OnPropertyChanged("Suppplementary_unit_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suppplementary_unit_quantity
        {
            get
            {
                return this.suppplementary_unit_quantityField;
            }
            set
            {
                if ((this.suppplementary_unit_quantityField != null))
                {
                    if ((suppplementary_unit_quantityField.Equals(value) != true))
                    {
                        this.suppplementary_unit_quantityField = value;
                        this.OnPropertyChanged("Suppplementary_unit_quantity");
                    }
                }
                else
                {
                    this.suppplementary_unit_quantityField = value;
                    this.OnPropertyChanged("Suppplementary_unit_quantity");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationSupplementary_unit));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationSupplementary_unit object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationSupplementary_unit object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationSupplementary_unit object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationSupplementary_unit obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationSupplementary_unit);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationSupplementary_unit obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationSupplementary_unit Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationSupplementary_unit)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationSupplementary_unit object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationSupplementary_unit object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationSupplementary_unit object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationSupplementary_unit obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationSupplementary_unit);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationSupplementary_unit obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationSupplementary_unit obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationSupplementary_unit LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationSupplementary_unit LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationSupplementary_unit object
        /// </summary>
        public virtual ASYCUDAItemTarificationSupplementary_unit Clone()
        {
            return ((ASYCUDAItemTarificationSupplementary_unit)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code")]
    public partial class ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code object
        /// </summary>
        public virtual ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code Clone()
        {
            return ((ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name")]
    public partial class ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name object
        /// </summary>
        public virtual ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name Clone()
        {
            return ((ASYCUDAItemTarificationSupplementary_unitSuppplementary_unit_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationValuation_method_code")]
    public partial class ASYCUDAItemTarificationValuation_method_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationValuation_method_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationValuation_method_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationValuation_method_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationValuation_method_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationValuation_method_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationValuation_method_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationValuation_method_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationValuation_method_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationValuation_method_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationValuation_method_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationValuation_method_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationValuation_method_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationValuation_method_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationValuation_method_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationValuation_method_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationValuation_method_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationValuation_method_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationValuation_method_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationValuation_method_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationValuation_method_code object
        /// </summary>
        public virtual ASYCUDAItemTarificationValuation_method_code Clone()
        {
            return ((ASYCUDAItemTarificationValuation_method_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationValue_item")]
    public partial class ASYCUDAItemTarificationValue_item : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationValue_item()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationValue_item));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationValue_item object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationValue_item object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationValue_item object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationValue_item obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationValue_item);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationValue_item obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationValue_item Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationValue_item)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationValue_item object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationValue_item object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationValue_item object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationValue_item obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationValue_item);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationValue_item obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationValue_item obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationValue_item LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationValue_item LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationValue_item object
        /// </summary>
        public virtual ASYCUDAItemTarificationValue_item Clone()
        {
            return ((ASYCUDAItemTarificationValue_item)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationAttached_doc_item")]
    public partial class ASYCUDAItemTarificationAttached_doc_item : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationAttached_doc_item()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationAttached_doc_item));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationAttached_doc_item object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationAttached_doc_item object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationAttached_doc_item object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationAttached_doc_item obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationAttached_doc_item);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationAttached_doc_item obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationAttached_doc_item Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationAttached_doc_item)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationAttached_doc_item object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationAttached_doc_item object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationAttached_doc_item object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationAttached_doc_item obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationAttached_doc_item);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationAttached_doc_item obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationAttached_doc_item obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationAttached_doc_item LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationAttached_doc_item LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationAttached_doc_item object
        /// </summary>
        public virtual ASYCUDAItemTarificationAttached_doc_item Clone()
        {
            return ((ASYCUDAItemTarificationAttached_doc_item)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTarificationAI_code")]
    public partial class ASYCUDAItemTarificationAI_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTarificationAI_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTarificationAI_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTarificationAI_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTarificationAI_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationAI_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTarificationAI_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationAI_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTarificationAI_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTarificationAI_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTarificationAI_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTarificationAI_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTarificationAI_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTarificationAI_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTarificationAI_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTarificationAI_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationAI_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTarificationAI_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTarificationAI_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTarificationAI_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTarificationAI_code object
        /// </summary>
        public virtual ASYCUDAItemTarificationAI_code Clone()
        {
            return ((ASYCUDAItemTarificationAI_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemGoods_description")]
    public partial class ASYCUDAItemGoods_description : System.ComponentModel.INotifyPropertyChanged
    {

        private string country_of_origin_codeField;

        private ASYCUDAItemGoods_descriptionCountry_of_origin_region country_of_origin_regionField;

        private ASYCUDAItemGoods_descriptionDescription_of_goods description_of_goodsField;

        private string commercial_DescriptionField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemGoods_description()
        {
            this.textField = new ObservableCollection<string>();
            this.description_of_goodsField = new ASYCUDAItemGoods_descriptionDescription_of_goods();
            this.country_of_origin_regionField = new ASYCUDAItemGoods_descriptionCountry_of_origin_region();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_of_origin_code
        {
            get
            {
                return this.country_of_origin_codeField;
            }
            set
            {
                if ((this.country_of_origin_codeField != null))
                {
                    if ((country_of_origin_codeField.Equals(value) != true))
                    {
                        this.country_of_origin_codeField = value;
                        this.OnPropertyChanged("Country_of_origin_code");
                    }
                }
                else
                {
                    this.country_of_origin_codeField = value;
                    this.OnPropertyChanged("Country_of_origin_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemGoods_descriptionCountry_of_origin_region Country_of_origin_region
        {
            get
            {
                return this.country_of_origin_regionField;
            }
            set
            {
                if ((this.country_of_origin_regionField != null))
                {
                    if ((country_of_origin_regionField.Equals(value) != true))
                    {
                        this.country_of_origin_regionField = value;
                        this.OnPropertyChanged("Country_of_origin_region");
                    }
                }
                else
                {
                    this.country_of_origin_regionField = value;
                    this.OnPropertyChanged("Country_of_origin_region");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemGoods_descriptionDescription_of_goods Description_of_goods
        {
            get
            {
                return this.description_of_goodsField;
            }
            set
            {
                if ((this.description_of_goodsField != null))
                {
                    if ((description_of_goodsField.Equals(value) != true))
                    {
                        this.description_of_goodsField = value;
                        this.OnPropertyChanged("Description_of_goods");
                    }
                }
                else
                {
                    this.description_of_goodsField = value;
                    this.OnPropertyChanged("Description_of_goods");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commercial_Description
        {
            get
            {
                return this.commercial_DescriptionField;
            }
            set
            {
                if ((this.commercial_DescriptionField != null))
                {
                    if ((commercial_DescriptionField.Equals(value) != true))
                    {
                        this.commercial_DescriptionField = value;
                        this.OnPropertyChanged("Commercial_Description");
                    }
                }
                else
                {
                    this.commercial_DescriptionField = value;
                    this.OnPropertyChanged("Commercial_Description");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemGoods_description));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemGoods_description object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemGoods_description object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemGoods_description object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemGoods_description obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemGoods_description);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemGoods_description obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemGoods_description Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemGoods_description)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemGoods_description object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemGoods_description object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemGoods_description object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemGoods_description obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemGoods_description);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemGoods_description obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemGoods_description obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemGoods_description LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemGoods_description LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemGoods_description object
        /// </summary>
        public virtual ASYCUDAItemGoods_description Clone()
        {
            return ((ASYCUDAItemGoods_description)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemGoods_descriptionCountry_of_origin_region")]
    public partial class ASYCUDAItemGoods_descriptionCountry_of_origin_region : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemGoods_descriptionCountry_of_origin_region()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemGoods_descriptionCountry_of_origin_region));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemGoods_descriptionCountry_of_origin_region object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemGoods_descriptionCountry_of_origin_region object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemGoods_descriptionCountry_of_origin_region object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemGoods_descriptionCountry_of_origin_region obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemGoods_descriptionCountry_of_origin_region);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemGoods_descriptionCountry_of_origin_region obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemGoods_descriptionCountry_of_origin_region Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemGoods_descriptionCountry_of_origin_region)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemGoods_descriptionCountry_of_origin_region object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemGoods_descriptionCountry_of_origin_region object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemGoods_descriptionCountry_of_origin_region object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemGoods_descriptionCountry_of_origin_region obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemGoods_descriptionCountry_of_origin_region);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemGoods_descriptionCountry_of_origin_region obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemGoods_descriptionCountry_of_origin_region obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemGoods_descriptionCountry_of_origin_region LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemGoods_descriptionCountry_of_origin_region LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemGoods_descriptionCountry_of_origin_region object
        /// </summary>
        public virtual ASYCUDAItemGoods_descriptionCountry_of_origin_region Clone()
        {
            return ((ASYCUDAItemGoods_descriptionCountry_of_origin_region)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemGoods_descriptionDescription_of_goods")]
    public partial class ASYCUDAItemGoods_descriptionDescription_of_goods : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemGoods_descriptionDescription_of_goods()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemGoods_descriptionDescription_of_goods));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemGoods_descriptionDescription_of_goods object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemGoods_descriptionDescription_of_goods object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemGoods_descriptionDescription_of_goods object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemGoods_descriptionDescription_of_goods obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemGoods_descriptionDescription_of_goods);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemGoods_descriptionDescription_of_goods obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemGoods_descriptionDescription_of_goods Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemGoods_descriptionDescription_of_goods)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemGoods_descriptionDescription_of_goods object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemGoods_descriptionDescription_of_goods object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemGoods_descriptionDescription_of_goods object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemGoods_descriptionDescription_of_goods obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemGoods_descriptionDescription_of_goods);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemGoods_descriptionDescription_of_goods obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemGoods_descriptionDescription_of_goods obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemGoods_descriptionDescription_of_goods LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemGoods_descriptionDescription_of_goods LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemGoods_descriptionDescription_of_goods object
        /// </summary>
        public virtual ASYCUDAItemGoods_descriptionDescription_of_goods Clone()
        {
            return ((ASYCUDAItemGoods_descriptionDescription_of_goods)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPrevious_doc")]
    public partial class ASYCUDAItemPrevious_doc : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAItemPrevious_docSummary_declaration summary_declarationField;

        private ASYCUDAItemPrevious_docSummary_declaration_sl summary_declaration_slField;

        private ASYCUDAItemPrevious_docPrevious_document_reference previous_document_referenceField;

        private ASYCUDAItemPrevious_docPrevious_warehouse_code previous_warehouse_codeField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPrevious_doc()
        {
            this.textField = new ObservableCollection<string>();
            this.previous_warehouse_codeField = new ASYCUDAItemPrevious_docPrevious_warehouse_code();
            this.previous_document_referenceField = new ASYCUDAItemPrevious_docPrevious_document_reference();
            this.summary_declaration_slField = new ASYCUDAItemPrevious_docSummary_declaration_sl();
            this.summary_declarationField = new ASYCUDAItemPrevious_docSummary_declaration();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPrevious_docSummary_declaration Summary_declaration
        {
            get
            {
                return this.summary_declarationField;
            }
            set
            {
                if ((this.summary_declarationField != null))
                {
                    if ((summary_declarationField.Equals(value) != true))
                    {
                        this.summary_declarationField = value;
                        this.OnPropertyChanged("Summary_declaration");
                    }
                }
                else
                {
                    this.summary_declarationField = value;
                    this.OnPropertyChanged("Summary_declaration");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPrevious_docSummary_declaration_sl Summary_declaration_sl
        {
            get
            {
                return this.summary_declaration_slField;
            }
            set
            {
                if ((this.summary_declaration_slField != null))
                {
                    if ((summary_declaration_slField.Equals(value) != true))
                    {
                        this.summary_declaration_slField = value;
                        this.OnPropertyChanged("Summary_declaration_sl");
                    }
                }
                else
                {
                    this.summary_declaration_slField = value;
                    this.OnPropertyChanged("Summary_declaration_sl");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPrevious_docPrevious_document_reference Previous_document_reference
        {
            get
            {
                return this.previous_document_referenceField;
            }
            set
            {
                if ((this.previous_document_referenceField != null))
                {
                    if ((previous_document_referenceField.Equals(value) != true))
                    {
                        this.previous_document_referenceField = value;
                        this.OnPropertyChanged("Previous_document_reference");
                    }
                }
                else
                {
                    this.previous_document_referenceField = value;
                    this.OnPropertyChanged("Previous_document_reference");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemPrevious_docPrevious_warehouse_code Previous_warehouse_code
        {
            get
            {
                return this.previous_warehouse_codeField;
            }
            set
            {
                if ((this.previous_warehouse_codeField != null))
                {
                    if ((previous_warehouse_codeField.Equals(value) != true))
                    {
                        this.previous_warehouse_codeField = value;
                        this.OnPropertyChanged("Previous_warehouse_code");
                    }
                }
                else
                {
                    this.previous_warehouse_codeField = value;
                    this.OnPropertyChanged("Previous_warehouse_code");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPrevious_doc));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_doc object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPrevious_doc object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_doc object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_doc obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_doc);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_doc obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_doc Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPrevious_doc)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_doc object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPrevious_doc object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_doc object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPrevious_doc obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_doc);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_doc obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_doc obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_doc LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPrevious_doc LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPrevious_doc object
        /// </summary>
        public virtual ASYCUDAItemPrevious_doc Clone()
        {
            return ((ASYCUDAItemPrevious_doc)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPrevious_docSummary_declaration")]
    public partial class ASYCUDAItemPrevious_docSummary_declaration : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPrevious_docSummary_declaration()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPrevious_docSummary_declaration));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docSummary_declaration object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPrevious_docSummary_declaration object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docSummary_declaration object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docSummary_declaration obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docSummary_declaration);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docSummary_declaration obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docSummary_declaration Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPrevious_docSummary_declaration)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docSummary_declaration object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPrevious_docSummary_declaration object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docSummary_declaration object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPrevious_docSummary_declaration obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docSummary_declaration);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docSummary_declaration obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docSummary_declaration obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docSummary_declaration LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPrevious_docSummary_declaration LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPrevious_docSummary_declaration object
        /// </summary>
        public virtual ASYCUDAItemPrevious_docSummary_declaration Clone()
        {
            return ((ASYCUDAItemPrevious_docSummary_declaration)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPrevious_docSummary_declaration_sl")]
    public partial class ASYCUDAItemPrevious_docSummary_declaration_sl : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPrevious_docSummary_declaration_sl()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPrevious_docSummary_declaration_sl));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docSummary_declaration_sl object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPrevious_docSummary_declaration_sl object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docSummary_declaration_sl object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docSummary_declaration_sl obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docSummary_declaration_sl);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docSummary_declaration_sl obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docSummary_declaration_sl Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPrevious_docSummary_declaration_sl)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docSummary_declaration_sl object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPrevious_docSummary_declaration_sl object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docSummary_declaration_sl object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPrevious_docSummary_declaration_sl obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docSummary_declaration_sl);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docSummary_declaration_sl obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docSummary_declaration_sl obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docSummary_declaration_sl LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPrevious_docSummary_declaration_sl LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPrevious_docSummary_declaration_sl object
        /// </summary>
        public virtual ASYCUDAItemPrevious_docSummary_declaration_sl Clone()
        {
            return ((ASYCUDAItemPrevious_docSummary_declaration_sl)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPrevious_docPrevious_document_reference")]
    public partial class ASYCUDAItemPrevious_docPrevious_document_reference : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPrevious_docPrevious_document_reference()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPrevious_docPrevious_document_reference));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docPrevious_document_reference object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPrevious_docPrevious_document_reference object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docPrevious_document_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docPrevious_document_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docPrevious_document_reference);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docPrevious_document_reference obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docPrevious_document_reference Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPrevious_docPrevious_document_reference)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docPrevious_document_reference object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPrevious_docPrevious_document_reference object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docPrevious_document_reference object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPrevious_docPrevious_document_reference obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docPrevious_document_reference);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docPrevious_document_reference obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docPrevious_document_reference obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docPrevious_document_reference LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPrevious_docPrevious_document_reference LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPrevious_docPrevious_document_reference object
        /// </summary>
        public virtual ASYCUDAItemPrevious_docPrevious_document_reference Clone()
        {
            return ((ASYCUDAItemPrevious_docPrevious_document_reference)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemPrevious_docPrevious_warehouse_code")]
    public partial class ASYCUDAItemPrevious_docPrevious_warehouse_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemPrevious_docPrevious_warehouse_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemPrevious_docPrevious_warehouse_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docPrevious_warehouse_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemPrevious_docPrevious_warehouse_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docPrevious_warehouse_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docPrevious_warehouse_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docPrevious_warehouse_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemPrevious_docPrevious_warehouse_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docPrevious_warehouse_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemPrevious_docPrevious_warehouse_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemPrevious_docPrevious_warehouse_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemPrevious_docPrevious_warehouse_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemPrevious_docPrevious_warehouse_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemPrevious_docPrevious_warehouse_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemPrevious_docPrevious_warehouse_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docPrevious_warehouse_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemPrevious_docPrevious_warehouse_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemPrevious_docPrevious_warehouse_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemPrevious_docPrevious_warehouse_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemPrevious_docPrevious_warehouse_code object
        /// </summary>
        public virtual ASYCUDAItemPrevious_docPrevious_warehouse_code Clone()
        {
            return ((ASYCUDAItemPrevious_docPrevious_warehouse_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemLicence_number")]
    public partial class ASYCUDAItemLicence_number : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemLicence_number()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemLicence_number));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemLicence_number object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemLicence_number object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemLicence_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemLicence_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemLicence_number);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemLicence_number obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemLicence_number Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemLicence_number)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemLicence_number object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemLicence_number object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemLicence_number object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemLicence_number obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemLicence_number);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemLicence_number obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemLicence_number obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemLicence_number LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemLicence_number LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemLicence_number object
        /// </summary>
        public virtual ASYCUDAItemLicence_number Clone()
        {
            return ((ASYCUDAItemLicence_number)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemFree_text_1")]
    public partial class ASYCUDAItemFree_text_1 : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemFree_text_1()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemFree_text_1));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemFree_text_1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemFree_text_1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemFree_text_1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemFree_text_1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemFree_text_1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemFree_text_1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemFree_text_1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemFree_text_1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemFree_text_1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemFree_text_1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemFree_text_1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemFree_text_1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemFree_text_1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemFree_text_1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemFree_text_1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemFree_text_1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemFree_text_1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemFree_text_1 object
        /// </summary>
        public virtual ASYCUDAItemFree_text_1 Clone()
        {
            return ((ASYCUDAItemFree_text_1)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemFree_text_2")]
    public partial class ASYCUDAItemFree_text_2 : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemFree_text_2()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemFree_text_2));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemFree_text_2 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemFree_text_2 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemFree_text_2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemFree_text_2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemFree_text_2);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemFree_text_2 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemFree_text_2 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemFree_text_2)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemFree_text_2 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemFree_text_2 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemFree_text_2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemFree_text_2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemFree_text_2);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemFree_text_2 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemFree_text_2 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemFree_text_2 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemFree_text_2 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemFree_text_2 object
        /// </summary>
        public virtual ASYCUDAItemFree_text_2 Clone()
        {
            return ((ASYCUDAItemFree_text_2)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTaxation")]
    public partial class ASYCUDAItemTaxation : System.ComponentModel.INotifyPropertyChanged
    {

        private string item_taxes_amountField;

        private object item_taxes_guaranted_amountField;

        private ASYCUDAItemTaxationItem_taxes_mode_of_payment item_taxes_mode_of_paymentField;

        private object counter_of_normal_mode_of_paymentField;

        private object displayed_item_taxes_amountField;

        private ObservableCollection<ASYCUDAItemTaxationTaxation_line> taxation_lineField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTaxation()
        {
            this.textField = new ObservableCollection<string>();
            this.taxation_lineField = new ObservableCollection<ASYCUDAItemTaxationTaxation_line>();
            this.item_taxes_mode_of_paymentField = new ASYCUDAItemTaxationItem_taxes_mode_of_payment();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item_taxes_amount
        {
            get
            {
                return this.item_taxes_amountField;
            }
            set
            {
                if ((this.item_taxes_amountField != null))
                {
                    if ((item_taxes_amountField.Equals(value) != true))
                    {
                        this.item_taxes_amountField = value;
                        this.OnPropertyChanged("Item_taxes_amount");
                    }
                }
                else
                {
                    this.item_taxes_amountField = value;
                    this.OnPropertyChanged("Item_taxes_amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Item_taxes_guaranted_amount
        {
            get
            {
                return this.item_taxes_guaranted_amountField;
            }
            set
            {
                if ((this.item_taxes_guaranted_amountField != null))
                {
                    if ((item_taxes_guaranted_amountField.Equals(value) != true))
                    {
                        this.item_taxes_guaranted_amountField = value;
                        this.OnPropertyChanged("Item_taxes_guaranted_amount");
                    }
                }
                else
                {
                    this.item_taxes_guaranted_amountField = value;
                    this.OnPropertyChanged("Item_taxes_guaranted_amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTaxationItem_taxes_mode_of_payment Item_taxes_mode_of_payment
        {
            get
            {
                return this.item_taxes_mode_of_paymentField;
            }
            set
            {
                if ((this.item_taxes_mode_of_paymentField != null))
                {
                    if ((item_taxes_mode_of_paymentField.Equals(value) != true))
                    {
                        this.item_taxes_mode_of_paymentField = value;
                        this.OnPropertyChanged("Item_taxes_mode_of_payment");
                    }
                }
                else
                {
                    this.item_taxes_mode_of_paymentField = value;
                    this.OnPropertyChanged("Item_taxes_mode_of_payment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Counter_of_normal_mode_of_payment
        {
            get
            {
                return this.counter_of_normal_mode_of_paymentField;
            }
            set
            {
                if ((this.counter_of_normal_mode_of_paymentField != null))
                {
                    if ((counter_of_normal_mode_of_paymentField.Equals(value) != true))
                    {
                        this.counter_of_normal_mode_of_paymentField = value;
                        this.OnPropertyChanged("Counter_of_normal_mode_of_payment");
                    }
                }
                else
                {
                    this.counter_of_normal_mode_of_paymentField = value;
                    this.OnPropertyChanged("Counter_of_normal_mode_of_payment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Displayed_item_taxes_amount
        {
            get
            {
                return this.displayed_item_taxes_amountField;
            }
            set
            {
                if ((this.displayed_item_taxes_amountField != null))
                {
                    if ((displayed_item_taxes_amountField.Equals(value) != true))
                    {
                        this.displayed_item_taxes_amountField = value;
                        this.OnPropertyChanged("Displayed_item_taxes_amount");
                    }
                }
                else
                {
                    this.displayed_item_taxes_amountField = value;
                    this.OnPropertyChanged("Displayed_item_taxes_amount");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("Taxation_line")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<ASYCUDAItemTaxationTaxation_line> Taxation_line
        {
            get
            {
                return this.taxation_lineField;
            }
            set
            {
                if ((this.taxation_lineField != null))
                {
                    if ((taxation_lineField.Equals(value) != true))
                    {
                        this.taxation_lineField = value;
                        this.OnPropertyChanged("Taxation_line");
                    }
                }
                else
                {
                    this.taxation_lineField = value;
                    this.OnPropertyChanged("Taxation_line");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTaxation));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTaxation object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTaxation object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTaxation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxation);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTaxation obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTaxation Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTaxation)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTaxation object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTaxation object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTaxation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxation);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxation obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxation obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTaxation LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTaxation LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTaxation object
        /// </summary>
        public virtual ASYCUDAItemTaxation Clone()
        {
            return ((ASYCUDAItemTaxation)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTaxationItem_taxes_mode_of_payment")]
    public partial class ASYCUDAItemTaxationItem_taxes_mode_of_payment : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTaxationItem_taxes_mode_of_payment()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTaxationItem_taxes_mode_of_payment));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTaxationItem_taxes_mode_of_payment object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTaxationItem_taxes_mode_of_payment object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationItem_taxes_mode_of_payment object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTaxationItem_taxes_mode_of_payment obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationItem_taxes_mode_of_payment);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTaxationItem_taxes_mode_of_payment obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTaxationItem_taxes_mode_of_payment Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTaxationItem_taxes_mode_of_payment)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTaxationItem_taxes_mode_of_payment object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTaxationItem_taxes_mode_of_payment object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationItem_taxes_mode_of_payment object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTaxationItem_taxes_mode_of_payment obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationItem_taxes_mode_of_payment);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationItem_taxes_mode_of_payment obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationItem_taxes_mode_of_payment obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTaxationItem_taxes_mode_of_payment LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTaxationItem_taxes_mode_of_payment LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTaxationItem_taxes_mode_of_payment object
        /// </summary>
        public virtual ASYCUDAItemTaxationItem_taxes_mode_of_payment Clone()
        {
            return ((ASYCUDAItemTaxationItem_taxes_mode_of_payment)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTaxationTaxation_line")]
    public partial class ASYCUDAItemTaxationTaxation_line : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAItemTaxationTaxation_lineDuty_tax_code duty_tax_codeField;

        private string duty_tax_BaseField;

        private string duty_tax_rateField;

        private string duty_tax_amountField;

        private ASYCUDAItemTaxationTaxation_lineDuty_tax_MP duty_tax_MPField;

        private ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation duty_tax_Type_of_calculationField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTaxationTaxation_line()
        {
            this.textField = new ObservableCollection<string>();
            this.duty_tax_Type_of_calculationField = new ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation();
            this.duty_tax_MPField = new ASYCUDAItemTaxationTaxation_lineDuty_tax_MP();
            this.duty_tax_codeField = new ASYCUDAItemTaxationTaxation_lineDuty_tax_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTaxationTaxation_lineDuty_tax_code Duty_tax_code
        {
            get
            {
                return this.duty_tax_codeField;
            }
            set
            {
                if ((this.duty_tax_codeField != null))
                {
                    if ((duty_tax_codeField.Equals(value) != true))
                    {
                        this.duty_tax_codeField = value;
                        this.OnPropertyChanged("Duty_tax_code");
                    }
                }
                else
                {
                    this.duty_tax_codeField = value;
                    this.OnPropertyChanged("Duty_tax_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duty_tax_Base
        {
            get
            {
                return this.duty_tax_BaseField;
            }
            set
            {
                if ((this.duty_tax_BaseField != null))
                {
                    if ((duty_tax_BaseField.Equals(value) != true))
                    {
                        this.duty_tax_BaseField = value;
                        this.OnPropertyChanged("Duty_tax_Base");
                    }
                }
                else
                {
                    this.duty_tax_BaseField = value;
                    this.OnPropertyChanged("Duty_tax_Base");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duty_tax_rate
        {
            get
            {
                return this.duty_tax_rateField;
            }
            set
            {
                if ((this.duty_tax_rateField != null))
                {
                    if ((duty_tax_rateField.Equals(value) != true))
                    {
                        this.duty_tax_rateField = value;
                        this.OnPropertyChanged("Duty_tax_rate");
                    }
                }
                else
                {
                    this.duty_tax_rateField = value;
                    this.OnPropertyChanged("Duty_tax_rate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duty_tax_amount
        {
            get
            {
                return this.duty_tax_amountField;
            }
            set
            {
                if ((this.duty_tax_amountField != null))
                {
                    if ((duty_tax_amountField.Equals(value) != true))
                    {
                        this.duty_tax_amountField = value;
                        this.OnPropertyChanged("Duty_tax_amount");
                    }
                }
                else
                {
                    this.duty_tax_amountField = value;
                    this.OnPropertyChanged("Duty_tax_amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTaxationTaxation_lineDuty_tax_MP Duty_tax_MP
        {
            get
            {
                return this.duty_tax_MPField;
            }
            set
            {
                if ((this.duty_tax_MPField != null))
                {
                    if ((duty_tax_MPField.Equals(value) != true))
                    {
                        this.duty_tax_MPField = value;
                        this.OnPropertyChanged("Duty_tax_MP");
                    }
                }
                else
                {
                    this.duty_tax_MPField = value;
                    this.OnPropertyChanged("Duty_tax_MP");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation Duty_tax_Type_of_calculation
        {
            get
            {
                return this.duty_tax_Type_of_calculationField;
            }
            set
            {
                if ((this.duty_tax_Type_of_calculationField != null))
                {
                    if ((duty_tax_Type_of_calculationField.Equals(value) != true))
                    {
                        this.duty_tax_Type_of_calculationField = value;
                        this.OnPropertyChanged("Duty_tax_Type_of_calculation");
                    }
                }
                else
                {
                    this.duty_tax_Type_of_calculationField = value;
                    this.OnPropertyChanged("Duty_tax_Type_of_calculation");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTaxationTaxation_line));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_line object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTaxationTaxation_line object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_line object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_line obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_line);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_line obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_line Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTaxationTaxation_line)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_line object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTaxationTaxation_line object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_line object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTaxationTaxation_line obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_line);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_line obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_line obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_line LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTaxationTaxation_line LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTaxationTaxation_line object
        /// </summary>
        public virtual ASYCUDAItemTaxationTaxation_line Clone()
        {
            return ((ASYCUDAItemTaxationTaxation_line)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTaxationTaxation_lineDuty_tax_code")]
    public partial class ASYCUDAItemTaxationTaxation_lineDuty_tax_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTaxationTaxation_lineDuty_tax_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTaxationTaxation_lineDuty_tax_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_lineDuty_tax_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTaxationTaxation_lineDuty_tax_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_lineDuty_tax_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_lineDuty_tax_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_lineDuty_tax_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_lineDuty_tax_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTaxationTaxation_lineDuty_tax_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_lineDuty_tax_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTaxationTaxation_lineDuty_tax_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_lineDuty_tax_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTaxationTaxation_lineDuty_tax_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_lineDuty_tax_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_lineDuty_tax_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_lineDuty_tax_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTaxationTaxation_lineDuty_tax_code object
        /// </summary>
        public virtual ASYCUDAItemTaxationTaxation_lineDuty_tax_code Clone()
        {
            return ((ASYCUDAItemTaxationTaxation_lineDuty_tax_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTaxationTaxation_lineDuty_tax_MP")]
    public partial class ASYCUDAItemTaxationTaxation_lineDuty_tax_MP : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTaxationTaxation_lineDuty_tax_MP()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTaxationTaxation_lineDuty_tax_MP));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_lineDuty_tax_MP obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_lineDuty_tax_MP);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_lineDuty_tax_MP obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_MP Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTaxationTaxation_lineDuty_tax_MP)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTaxationTaxation_lineDuty_tax_MP obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_lineDuty_tax_MP);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_lineDuty_tax_MP obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_lineDuty_tax_MP obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_MP LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_MP LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTaxationTaxation_lineDuty_tax_MP object
        /// </summary>
        public virtual ASYCUDAItemTaxationTaxation_lineDuty_tax_MP Clone()
        {
            return ((ASYCUDAItemTaxationTaxation_lineDuty_tax_MP)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation")]
    public partial class ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation object
        /// </summary>
        public virtual ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation Clone()
        {
            return ((ASYCUDAItemTaxationTaxation_lineDuty_tax_Type_of_calculation)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_item")]
    public partial class ASYCUDAItemValuation_item : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDAItemValuation_itemWeight_itm weight_itmField;

        private string total_cost_itmField;

        private string total_CIF_itmField;

        private string rate_of_adjustementField;

        private string statistical_valueField;

        private string alpha_coeficient_of_apportionmentField;

        private ASYCUDAItemValuation_itemItem_Invoice item_InvoiceField;

        private ASYCUDAItemValuation_itemItem_external_freight item_external_freightField;

        private ASYCUDAItemValuation_itemItem_internal_freight item_internal_freightField;

        private ASYCUDAItemValuation_itemItem_insurance item_insuranceField;

        private ASYCUDAItemValuation_itemItem_other_cost item_other_costField;

        private ASYCUDAItemValuation_itemItem_deduction item_deductionField;

        private ASYCUDAItemValuation_itemMarket_valuer market_valuerField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_item()
        {
            this.textField = new ObservableCollection<string>();
            this.market_valuerField = new ASYCUDAItemValuation_itemMarket_valuer();
            this.item_deductionField = new ASYCUDAItemValuation_itemItem_deduction();
            this.item_other_costField = new ASYCUDAItemValuation_itemItem_other_cost();
            this.item_insuranceField = new ASYCUDAItemValuation_itemItem_insurance();
            this.item_internal_freightField = new ASYCUDAItemValuation_itemItem_internal_freight();
            this.item_external_freightField = new ASYCUDAItemValuation_itemItem_external_freight();
            this.item_InvoiceField = new ASYCUDAItemValuation_itemItem_Invoice();
            this.weight_itmField = new ASYCUDAItemValuation_itemWeight_itm();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemWeight_itm Weight_itm
        {
            get
            {
                return this.weight_itmField;
            }
            set
            {
                if ((this.weight_itmField != null))
                {
                    if ((weight_itmField.Equals(value) != true))
                    {
                        this.weight_itmField = value;
                        this.OnPropertyChanged("Weight_itm");
                    }
                }
                else
                {
                    this.weight_itmField = value;
                    this.OnPropertyChanged("Weight_itm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_cost_itm
        {
            get
            {
                return this.total_cost_itmField;
            }
            set
            {
                if ((this.total_cost_itmField != null))
                {
                    if ((total_cost_itmField.Equals(value) != true))
                    {
                        this.total_cost_itmField = value;
                        this.OnPropertyChanged("Total_cost_itm");
                    }
                }
                else
                {
                    this.total_cost_itmField = value;
                    this.OnPropertyChanged("Total_cost_itm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total_CIF_itm
        {
            get
            {
                return this.total_CIF_itmField;
            }
            set
            {
                if ((this.total_CIF_itmField != null))
                {
                    if ((total_CIF_itmField.Equals(value) != true))
                    {
                        this.total_CIF_itmField = value;
                        this.OnPropertyChanged("Total_CIF_itm");
                    }
                }
                else
                {
                    this.total_CIF_itmField = value;
                    this.OnPropertyChanged("Total_CIF_itm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rate_of_adjustement
        {
            get
            {
                return this.rate_of_adjustementField;
            }
            set
            {
                if ((this.rate_of_adjustementField != null))
                {
                    if ((rate_of_adjustementField.Equals(value) != true))
                    {
                        this.rate_of_adjustementField = value;
                        this.OnPropertyChanged("Rate_of_adjustement");
                    }
                }
                else
                {
                    this.rate_of_adjustementField = value;
                    this.OnPropertyChanged("Rate_of_adjustement");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statistical_value
        {
            get
            {
                return this.statistical_valueField;
            }
            set
            {
                if ((this.statistical_valueField != null))
                {
                    if ((statistical_valueField.Equals(value) != true))
                    {
                        this.statistical_valueField = value;
                        this.OnPropertyChanged("Statistical_value");
                    }
                }
                else
                {
                    this.statistical_valueField = value;
                    this.OnPropertyChanged("Statistical_value");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alpha_coeficient_of_apportionment
        {
            get
            {
                return this.alpha_coeficient_of_apportionmentField;
            }
            set
            {
                if ((this.alpha_coeficient_of_apportionmentField != null))
                {
                    if ((alpha_coeficient_of_apportionmentField.Equals(value) != true))
                    {
                        this.alpha_coeficient_of_apportionmentField = value;
                        this.OnPropertyChanged("Alpha_coeficient_of_apportionment");
                    }
                }
                else
                {
                    this.alpha_coeficient_of_apportionmentField = value;
                    this.OnPropertyChanged("Alpha_coeficient_of_apportionment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_Invoice Item_Invoice
        {
            get
            {
                return this.item_InvoiceField;
            }
            set
            {
                if ((this.item_InvoiceField != null))
                {
                    if ((item_InvoiceField.Equals(value) != true))
                    {
                        this.item_InvoiceField = value;
                        this.OnPropertyChanged("Item_Invoice");
                    }
                }
                else
                {
                    this.item_InvoiceField = value;
                    this.OnPropertyChanged("Item_Invoice");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_external_freight item_external_freight
        {
            get
            {
                return this.item_external_freightField;
            }
            set
            {
                if ((this.item_external_freightField != null))
                {
                    if ((item_external_freightField.Equals(value) != true))
                    {
                        this.item_external_freightField = value;
                        this.OnPropertyChanged("item_external_freight");
                    }
                }
                else
                {
                    this.item_external_freightField = value;
                    this.OnPropertyChanged("item_external_freight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_internal_freight item_internal_freight
        {
            get
            {
                return this.item_internal_freightField;
            }
            set
            {
                if ((this.item_internal_freightField != null))
                {
                    if ((item_internal_freightField.Equals(value) != true))
                    {
                        this.item_internal_freightField = value;
                        this.OnPropertyChanged("item_internal_freight");
                    }
                }
                else
                {
                    this.item_internal_freightField = value;
                    this.OnPropertyChanged("item_internal_freight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_insurance item_insurance
        {
            get
            {
                return this.item_insuranceField;
            }
            set
            {
                if ((this.item_insuranceField != null))
                {
                    if ((item_insuranceField.Equals(value) != true))
                    {
                        this.item_insuranceField = value;
                        this.OnPropertyChanged("item_insurance");
                    }
                }
                else
                {
                    this.item_insuranceField = value;
                    this.OnPropertyChanged("item_insurance");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_other_cost item_other_cost
        {
            get
            {
                return this.item_other_costField;
            }
            set
            {
                if ((this.item_other_costField != null))
                {
                    if ((item_other_costField.Equals(value) != true))
                    {
                        this.item_other_costField = value;
                        this.OnPropertyChanged("item_other_cost");
                    }
                }
                else
                {
                    this.item_other_costField = value;
                    this.OnPropertyChanged("item_other_cost");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_deduction item_deduction
        {
            get
            {
                return this.item_deductionField;
            }
            set
            {
                if ((this.item_deductionField != null))
                {
                    if ((item_deductionField.Equals(value) != true))
                    {
                        this.item_deductionField = value;
                        this.OnPropertyChanged("item_deduction");
                    }
                }
                else
                {
                    this.item_deductionField = value;
                    this.OnPropertyChanged("item_deduction");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemMarket_valuer Market_valuer
        {
            get
            {
                return this.market_valuerField;
            }
            set
            {
                if ((this.market_valuerField != null))
                {
                    if ((market_valuerField.Equals(value) != true))
                    {
                        this.market_valuerField = value;
                        this.OnPropertyChanged("Market_valuer");
                    }
                }
                else
                {
                    this.market_valuerField = value;
                    this.OnPropertyChanged("Market_valuer");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_item));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_item object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_item object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_item object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_item obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_item);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_item obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_item Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_item)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_item object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_item object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_item object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_item obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_item);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_item obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_item obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_item LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_item LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_item object
        /// </summary>
        public virtual ASYCUDAItemValuation_item Clone()
        {
            return ((ASYCUDAItemValuation_item)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemWeight_itm")]
    public partial class ASYCUDAItemValuation_itemWeight_itm : System.ComponentModel.INotifyPropertyChanged
    {

        private string gross_weight_itmField;

        private string net_weight_itmField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemWeight_itm()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gross_weight_itm
        {
            get
            {
                return this.gross_weight_itmField;
            }
            set
            {
                if ((this.gross_weight_itmField != null))
                {
                    if ((gross_weight_itmField.Equals(value) != true))
                    {
                        this.gross_weight_itmField = value;
                        this.OnPropertyChanged("Gross_weight_itm");
                    }
                }
                else
                {
                    this.gross_weight_itmField = value;
                    this.OnPropertyChanged("Gross_weight_itm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Net_weight_itm
        {
            get
            {
                return this.net_weight_itmField;
            }
            set
            {
                if ((this.net_weight_itmField != null))
                {
                    if ((net_weight_itmField.Equals(value) != true))
                    {
                        this.net_weight_itmField = value;
                        this.OnPropertyChanged("Net_weight_itm");
                    }
                }
                else
                {
                    this.net_weight_itmField = value;
                    this.OnPropertyChanged("Net_weight_itm");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemWeight_itm));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemWeight_itm object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemWeight_itm object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemWeight_itm object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemWeight_itm obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemWeight_itm);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemWeight_itm obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemWeight_itm Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemWeight_itm)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemWeight_itm object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemWeight_itm object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemWeight_itm object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemWeight_itm obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemWeight_itm);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemWeight_itm obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemWeight_itm obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemWeight_itm LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemWeight_itm LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemWeight_itm object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemWeight_itm Clone()
        {
            return ((ASYCUDAItemValuation_itemWeight_itm)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_Invoice")]
    public partial class ASYCUDAItemValuation_itemItem_Invoice : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private string currency_codeField;

        private ASYCUDAItemValuation_itemItem_InvoiceCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_Invoice()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAItemValuation_itemItem_InvoiceCurrency_name();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_InvoiceCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_Invoice));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_Invoice object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_Invoice object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_Invoice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_Invoice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_Invoice);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_Invoice obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_Invoice Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_Invoice)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_Invoice object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_Invoice object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_Invoice object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_Invoice obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_Invoice);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_Invoice obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_Invoice obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_Invoice LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_Invoice LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_Invoice object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_Invoice Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_Invoice)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_InvoiceCurrency_name")]
    public partial class ASYCUDAItemValuation_itemItem_InvoiceCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_InvoiceCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_InvoiceCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_InvoiceCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_InvoiceCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_InvoiceCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_InvoiceCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_InvoiceCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_InvoiceCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_InvoiceCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_InvoiceCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_InvoiceCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_InvoiceCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_InvoiceCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_InvoiceCurrency_name object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_InvoiceCurrency_name Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_InvoiceCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_external_freight")]
    public partial class ASYCUDAItemValuation_itemItem_external_freight : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAItemValuation_itemItem_external_freightCurrency_code currency_codeField;

        private ASYCUDAItemValuation_itemItem_external_freightCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_external_freight()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAItemValuation_itemItem_external_freightCurrency_name();
            this.currency_codeField = new ASYCUDAItemValuation_itemItem_external_freightCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_external_freightCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_external_freightCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_external_freight));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_external_freight object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_external_freight object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_external_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_external_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_external_freight);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_external_freight obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_external_freight Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_external_freight)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_external_freight object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_external_freight object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_external_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_external_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_external_freight);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_external_freight obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_external_freight obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_external_freight LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_external_freight LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_external_freight object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_external_freight Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_external_freight)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_external_freightCurrency_code")]
    public partial class ASYCUDAItemValuation_itemItem_external_freightCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_external_freightCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_external_freightCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_external_freightCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_external_freightCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_external_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_external_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_external_freightCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_external_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_external_freightCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_external_freightCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_external_freightCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_external_freightCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_external_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_external_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_external_freightCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_external_freightCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_external_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_external_freightCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_external_freightCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_external_freightCurrency_code object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_external_freightCurrency_code Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_external_freightCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_external_freightCurrency_name")]
    public partial class ASYCUDAItemValuation_itemItem_external_freightCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_external_freightCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_external_freightCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_external_freightCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_external_freightCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_external_freightCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_external_freightCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_external_freightCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_external_freightCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_external_freightCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_external_freightCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_external_freightCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_external_freightCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_external_freightCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_external_freightCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_external_freightCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_external_freightCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_external_freightCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_external_freightCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_external_freightCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_external_freightCurrency_name object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_external_freightCurrency_name Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_external_freightCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_internal_freight")]
    public partial class ASYCUDAItemValuation_itemItem_internal_freight : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAItemValuation_itemItem_internal_freightCurrency_code currency_codeField;

        private ASYCUDAItemValuation_itemItem_internal_freightCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_internal_freight()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAItemValuation_itemItem_internal_freightCurrency_name();
            this.currency_codeField = new ASYCUDAItemValuation_itemItem_internal_freightCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_internal_freightCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_internal_freightCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_internal_freight));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_internal_freight object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_internal_freight object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_internal_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_internal_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_internal_freight);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_internal_freight obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freight Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_internal_freight)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_internal_freight object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_internal_freight object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_internal_freight object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_internal_freight obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_internal_freight);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_internal_freight obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_internal_freight obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freight LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freight LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_internal_freight object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_internal_freight Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_internal_freight)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_internal_freightCurrency_code")]
    public partial class ASYCUDAItemValuation_itemItem_internal_freightCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_internal_freightCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_internal_freightCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_internal_freightCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freightCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_internal_freightCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_internal_freightCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freightCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freightCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_internal_freightCurrency_code object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_internal_freightCurrency_code Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_internal_freightCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_internal_freightCurrency_name")]
    public partial class ASYCUDAItemValuation_itemItem_internal_freightCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_internal_freightCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_internal_freightCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_internal_freightCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freightCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_internal_freightCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_internal_freightCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_internal_freightCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freightCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_internal_freightCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_internal_freightCurrency_name object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_internal_freightCurrency_name Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_internal_freightCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_insurance")]
    public partial class ASYCUDAItemValuation_itemItem_insurance : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAItemValuation_itemItem_insuranceCurrency_code currency_codeField;

        private ASYCUDAItemValuation_itemItem_insuranceCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_insurance()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAItemValuation_itemItem_insuranceCurrency_name();
            this.currency_codeField = new ASYCUDAItemValuation_itemItem_insuranceCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_insuranceCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_insuranceCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_insurance));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_insurance object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_insurance object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_insurance object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_insurance obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_insurance);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_insurance obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_insurance Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_insurance)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_insurance object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_insurance object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_insurance object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_insurance obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_insurance);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_insurance obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_insurance obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_insurance LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_insurance LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_insurance object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_insurance Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_insurance)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_insuranceCurrency_code")]
    public partial class ASYCUDAItemValuation_itemItem_insuranceCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_insuranceCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_insuranceCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_insuranceCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_insuranceCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_insuranceCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_insuranceCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_insuranceCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_insuranceCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_insuranceCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_insuranceCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_insuranceCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_insuranceCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_insuranceCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_insuranceCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_insuranceCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_insuranceCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_insuranceCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_insuranceCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_insuranceCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_insuranceCurrency_code object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_insuranceCurrency_code Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_insuranceCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_insuranceCurrency_name")]
    public partial class ASYCUDAItemValuation_itemItem_insuranceCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_insuranceCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_insuranceCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_insuranceCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_insuranceCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_insuranceCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_insuranceCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_insuranceCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_insuranceCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_insuranceCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_insuranceCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_insuranceCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_insuranceCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_insuranceCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_insuranceCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_insuranceCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_insuranceCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_insuranceCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_insuranceCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_insuranceCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_insuranceCurrency_name object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_insuranceCurrency_name Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_insuranceCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_other_cost")]
    public partial class ASYCUDAItemValuation_itemItem_other_cost : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAItemValuation_itemItem_other_costCurrency_code currency_codeField;

        private ASYCUDAItemValuation_itemItem_other_costCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_other_cost()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAItemValuation_itemItem_other_costCurrency_name();
            this.currency_codeField = new ASYCUDAItemValuation_itemItem_other_costCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_other_costCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_other_costCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_other_cost));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_other_cost object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_other_cost object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_other_cost object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_other_cost obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_other_cost);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_other_cost obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_other_cost Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_other_cost)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_other_cost object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_other_cost object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_other_cost object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_other_cost obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_other_cost);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_other_cost obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_other_cost obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_other_cost LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_other_cost LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_other_cost object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_other_cost Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_other_cost)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_other_costCurrency_code")]
    public partial class ASYCUDAItemValuation_itemItem_other_costCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_other_costCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_other_costCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_other_costCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_other_costCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_other_costCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_other_costCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_other_costCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_other_costCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_other_costCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_other_costCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_other_costCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_other_costCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_other_costCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_other_costCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_other_costCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_other_costCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_other_costCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_other_costCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_other_costCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_other_costCurrency_code object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_other_costCurrency_code Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_other_costCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_other_costCurrency_name")]
    public partial class ASYCUDAItemValuation_itemItem_other_costCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_other_costCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_other_costCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_other_costCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_other_costCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_other_costCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_other_costCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_other_costCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_other_costCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_other_costCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_other_costCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_other_costCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_other_costCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_other_costCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_other_costCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_other_costCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_other_costCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_other_costCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_other_costCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_other_costCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_other_costCurrency_name object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_other_costCurrency_name Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_other_costCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_deduction")]
    public partial class ASYCUDAItemValuation_itemItem_deduction : System.ComponentModel.INotifyPropertyChanged
    {

        private string amount_national_currencyField;

        private string amount_foreign_currencyField;

        private ASYCUDAItemValuation_itemItem_deductionCurrency_code currency_codeField;

        private ASYCUDAItemValuation_itemItem_deductionCurrency_name currency_nameField;

        private string currency_rateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_deduction()
        {
            this.textField = new ObservableCollection<string>();
            this.currency_nameField = new ASYCUDAItemValuation_itemItem_deductionCurrency_name();
            this.currency_codeField = new ASYCUDAItemValuation_itemItem_deductionCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_national_currency
        {
            get
            {
                return this.amount_national_currencyField;
            }
            set
            {
                if ((this.amount_national_currencyField != null))
                {
                    if ((amount_national_currencyField.Equals(value) != true))
                    {
                        this.amount_national_currencyField = value;
                        this.OnPropertyChanged("Amount_national_currency");
                    }
                }
                else
                {
                    this.amount_national_currencyField = value;
                    this.OnPropertyChanged("Amount_national_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount_foreign_currency
        {
            get
            {
                return this.amount_foreign_currencyField;
            }
            set
            {
                if ((this.amount_foreign_currencyField != null))
                {
                    if ((amount_foreign_currencyField.Equals(value) != true))
                    {
                        this.amount_foreign_currencyField = value;
                        this.OnPropertyChanged("Amount_foreign_currency");
                    }
                }
                else
                {
                    this.amount_foreign_currencyField = value;
                    this.OnPropertyChanged("Amount_foreign_currency");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_deductionCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemItem_deductionCurrency_name Currency_name
        {
            get
            {
                return this.currency_nameField;
            }
            set
            {
                if ((this.currency_nameField != null))
                {
                    if ((currency_nameField.Equals(value) != true))
                    {
                        this.currency_nameField = value;
                        this.OnPropertyChanged("Currency_name");
                    }
                }
                else
                {
                    this.currency_nameField = value;
                    this.OnPropertyChanged("Currency_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_rate
        {
            get
            {
                return this.currency_rateField;
            }
            set
            {
                if ((this.currency_rateField != null))
                {
                    if ((currency_rateField.Equals(value) != true))
                    {
                        this.currency_rateField = value;
                        this.OnPropertyChanged("Currency_rate");
                    }
                }
                else
                {
                    this.currency_rateField = value;
                    this.OnPropertyChanged("Currency_rate");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_deduction));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_deduction object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_deduction object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_deduction object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_deduction obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_deduction);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_deduction obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_deduction Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_deduction)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_deduction object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_deduction object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_deduction object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_deduction obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_deduction);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_deduction obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_deduction obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_deduction LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_deduction LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_deduction object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_deduction Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_deduction)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_deductionCurrency_code")]
    public partial class ASYCUDAItemValuation_itemItem_deductionCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_deductionCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_deductionCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_deductionCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_deductionCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_deductionCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_deductionCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_deductionCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_deductionCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_deductionCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_deductionCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_deductionCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_deductionCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_deductionCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_deductionCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_deductionCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_deductionCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_deductionCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_deductionCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_deductionCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_deductionCurrency_code object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_deductionCurrency_code Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_deductionCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemItem_deductionCurrency_name")]
    public partial class ASYCUDAItemValuation_itemItem_deductionCurrency_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemItem_deductionCurrency_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemItem_deductionCurrency_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_deductionCurrency_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemItem_deductionCurrency_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_deductionCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_deductionCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_deductionCurrency_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemItem_deductionCurrency_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_deductionCurrency_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemItem_deductionCurrency_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemItem_deductionCurrency_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemItem_deductionCurrency_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemItem_deductionCurrency_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemItem_deductionCurrency_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemItem_deductionCurrency_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_deductionCurrency_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemItem_deductionCurrency_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemItem_deductionCurrency_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemItem_deductionCurrency_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemItem_deductionCurrency_name object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemItem_deductionCurrency_name Clone()
        {
            return ((ASYCUDAItemValuation_itemItem_deductionCurrency_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemMarket_valuer")]
    public partial class ASYCUDAItemValuation_itemMarket_valuer : System.ComponentModel.INotifyPropertyChanged
    {

        private object rateField;

        private ASYCUDAItemValuation_itemMarket_valuerCurrency_code currency_codeField;

        private string currency_amountField;

        private ASYCUDAItemValuation_itemMarket_valuerBasis_description basis_descriptionField;

        private object basis_amountField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemMarket_valuer()
        {
            this.textField = new ObservableCollection<string>();
            this.basis_descriptionField = new ASYCUDAItemValuation_itemMarket_valuerBasis_description();
            this.currency_codeField = new ASYCUDAItemValuation_itemMarket_valuerCurrency_code();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Rate
        {
            get
            {
                return this.rateField;
            }
            set
            {
                if ((this.rateField != null))
                {
                    if ((rateField.Equals(value) != true))
                    {
                        this.rateField = value;
                        this.OnPropertyChanged("Rate");
                    }
                }
                else
                {
                    this.rateField = value;
                    this.OnPropertyChanged("Rate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemMarket_valuerCurrency_code Currency_code
        {
            get
            {
                return this.currency_codeField;
            }
            set
            {
                if ((this.currency_codeField != null))
                {
                    if ((currency_codeField.Equals(value) != true))
                    {
                        this.currency_codeField = value;
                        this.OnPropertyChanged("Currency_code");
                    }
                }
                else
                {
                    this.currency_codeField = value;
                    this.OnPropertyChanged("Currency_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency_amount
        {
            get
            {
                return this.currency_amountField;
            }
            set
            {
                if ((this.currency_amountField != null))
                {
                    if ((currency_amountField.Equals(value) != true))
                    {
                        this.currency_amountField = value;
                        this.OnPropertyChanged("Currency_amount");
                    }
                }
                else
                {
                    this.currency_amountField = value;
                    this.OnPropertyChanged("Currency_amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDAItemValuation_itemMarket_valuerBasis_description Basis_description
        {
            get
            {
                return this.basis_descriptionField;
            }
            set
            {
                if ((this.basis_descriptionField != null))
                {
                    if ((basis_descriptionField.Equals(value) != true))
                    {
                        this.basis_descriptionField = value;
                        this.OnPropertyChanged("Basis_description");
                    }
                }
                else
                {
                    this.basis_descriptionField = value;
                    this.OnPropertyChanged("Basis_description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Basis_amount
        {
            get
            {
                return this.basis_amountField;
            }
            set
            {
                if ((this.basis_amountField != null))
                {
                    if ((basis_amountField.Equals(value) != true))
                    {
                        this.basis_amountField = value;
                        this.OnPropertyChanged("Basis_amount");
                    }
                }
                else
                {
                    this.basis_amountField = value;
                    this.OnPropertyChanged("Basis_amount");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemMarket_valuer));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemMarket_valuer object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemMarket_valuer object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemMarket_valuer object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemMarket_valuer obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemMarket_valuer);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemMarket_valuer obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemMarket_valuer Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemMarket_valuer)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemMarket_valuer object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemMarket_valuer object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemMarket_valuer object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemMarket_valuer obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemMarket_valuer);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemMarket_valuer obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemMarket_valuer obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemMarket_valuer LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemMarket_valuer LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemMarket_valuer object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemMarket_valuer Clone()
        {
            return ((ASYCUDAItemValuation_itemMarket_valuer)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemMarket_valuerCurrency_code")]
    public partial class ASYCUDAItemValuation_itemMarket_valuerCurrency_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemMarket_valuerCurrency_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemMarket_valuerCurrency_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemMarket_valuerCurrency_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemMarket_valuerCurrency_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemMarket_valuerCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemMarket_valuerCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemMarket_valuerCurrency_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemMarket_valuerCurrency_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemMarket_valuerCurrency_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemMarket_valuerCurrency_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemMarket_valuerCurrency_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemMarket_valuerCurrency_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemMarket_valuerCurrency_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemMarket_valuerCurrency_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemMarket_valuerCurrency_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemMarket_valuerCurrency_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemMarket_valuerCurrency_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemMarket_valuerCurrency_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemMarket_valuerCurrency_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemMarket_valuerCurrency_code object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemMarket_valuerCurrency_code Clone()
        {
            return ((ASYCUDAItemValuation_itemMarket_valuerCurrency_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDAItemValuation_itemMarket_valuerBasis_description")]
    public partial class ASYCUDAItemValuation_itemMarket_valuerBasis_description : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDAItemValuation_itemMarket_valuerBasis_description()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDAItemValuation_itemMarket_valuerBasis_description));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemMarket_valuerBasis_description object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDAItemValuation_itemMarket_valuerBasis_description object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemMarket_valuerBasis_description object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemMarket_valuerBasis_description obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemMarket_valuerBasis_description);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDAItemValuation_itemMarket_valuerBasis_description obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemMarket_valuerBasis_description Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDAItemValuation_itemMarket_valuerBasis_description)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDAItemValuation_itemMarket_valuerBasis_description object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDAItemValuation_itemMarket_valuerBasis_description object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDAItemValuation_itemMarket_valuerBasis_description object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDAItemValuation_itemMarket_valuerBasis_description obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDAItemValuation_itemMarket_valuerBasis_description);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemMarket_valuerBasis_description obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDAItemValuation_itemMarket_valuerBasis_description obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDAItemValuation_itemMarket_valuerBasis_description LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDAItemValuation_itemMarket_valuerBasis_description LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDAItemValuation_itemMarket_valuerBasis_description object
        /// </summary>
        public virtual ASYCUDAItemValuation_itemMarket_valuerBasis_description Clone()
        {
            return ((ASYCUDAItemValuation_itemMarket_valuerBasis_description)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documents")]
    public partial class ASYCUDASuppliers_documents : System.ComponentModel.INotifyPropertyChanged
    {

        private ASYCUDASuppliers_documentsSuppliers_document_itmlink suppliers_document_itmlinkField;

        private ASYCUDASuppliers_documentsSuppliers_document_code suppliers_document_codeField;

        private ASYCUDASuppliers_documentsSuppliers_document_name suppliers_document_nameField;

        private ASYCUDASuppliers_documentsSuppliers_document_country suppliers_document_countryField;

        private ASYCUDASuppliers_documentsSuppliers_document_city suppliers_document_cityField;

        private ASYCUDASuppliers_documentsSuppliers_document_street suppliers_document_streetField;

        private ASYCUDASuppliers_documentsSuppliers_document_telephone suppliers_document_telephoneField;

        private ASYCUDASuppliers_documentsSuppliers_document_fax suppliers_document_faxField;

        private ASYCUDASuppliers_documentsSuppliers_document_zip_code suppliers_document_zip_codeField;

        private ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr suppliers_document_invoice_nbrField;

        private ASYCUDASuppliers_documentsSuppliers_document_invoice_amt suppliers_document_invoice_amtField;

        private ASYCUDASuppliers_documentsSuppliers_document_type_code suppliers_document_type_codeField;

        private string suppliers_document_dateField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documents()
        {
            this.textField = new ObservableCollection<string>();
            this.suppliers_document_type_codeField = new ASYCUDASuppliers_documentsSuppliers_document_type_code();
            this.suppliers_document_invoice_amtField = new ASYCUDASuppliers_documentsSuppliers_document_invoice_amt();
            this.suppliers_document_invoice_nbrField = new ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr();
            this.suppliers_document_zip_codeField = new ASYCUDASuppliers_documentsSuppliers_document_zip_code();
            this.suppliers_document_faxField = new ASYCUDASuppliers_documentsSuppliers_document_fax();
            this.suppliers_document_telephoneField = new ASYCUDASuppliers_documentsSuppliers_document_telephone();
            this.suppliers_document_streetField = new ASYCUDASuppliers_documentsSuppliers_document_street();
            this.suppliers_document_cityField = new ASYCUDASuppliers_documentsSuppliers_document_city();
            this.suppliers_document_countryField = new ASYCUDASuppliers_documentsSuppliers_document_country();
            this.suppliers_document_nameField = new ASYCUDASuppliers_documentsSuppliers_document_name();
            this.suppliers_document_codeField = new ASYCUDASuppliers_documentsSuppliers_document_code();
            this.suppliers_document_itmlinkField = new ASYCUDASuppliers_documentsSuppliers_document_itmlink();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_itmlink Suppliers_document_itmlink
        {
            get
            {
                return this.suppliers_document_itmlinkField;
            }
            set
            {
                if ((this.suppliers_document_itmlinkField != null))
                {
                    if ((suppliers_document_itmlinkField.Equals(value) != true))
                    {
                        this.suppliers_document_itmlinkField = value;
                        this.OnPropertyChanged("Suppliers_document_itmlink");
                    }
                }
                else
                {
                    this.suppliers_document_itmlinkField = value;
                    this.OnPropertyChanged("Suppliers_document_itmlink");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_code Suppliers_document_code
        {
            get
            {
                return this.suppliers_document_codeField;
            }
            set
            {
                if ((this.suppliers_document_codeField != null))
                {
                    if ((suppliers_document_codeField.Equals(value) != true))
                    {
                        this.suppliers_document_codeField = value;
                        this.OnPropertyChanged("Suppliers_document_code");
                    }
                }
                else
                {
                    this.suppliers_document_codeField = value;
                    this.OnPropertyChanged("Suppliers_document_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_name Suppliers_document_name
        {
            get
            {
                return this.suppliers_document_nameField;
            }
            set
            {
                if ((this.suppliers_document_nameField != null))
                {
                    if ((suppliers_document_nameField.Equals(value) != true))
                    {
                        this.suppliers_document_nameField = value;
                        this.OnPropertyChanged("Suppliers_document_name");
                    }
                }
                else
                {
                    this.suppliers_document_nameField = value;
                    this.OnPropertyChanged("Suppliers_document_name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_country Suppliers_document_country
        {
            get
            {
                return this.suppliers_document_countryField;
            }
            set
            {
                if ((this.suppliers_document_countryField != null))
                {
                    if ((suppliers_document_countryField.Equals(value) != true))
                    {
                        this.suppliers_document_countryField = value;
                        this.OnPropertyChanged("Suppliers_document_country");
                    }
                }
                else
                {
                    this.suppliers_document_countryField = value;
                    this.OnPropertyChanged("Suppliers_document_country");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_city Suppliers_document_city
        {
            get
            {
                return this.suppliers_document_cityField;
            }
            set
            {
                if ((this.suppliers_document_cityField != null))
                {
                    if ((suppliers_document_cityField.Equals(value) != true))
                    {
                        this.suppliers_document_cityField = value;
                        this.OnPropertyChanged("Suppliers_document_city");
                    }
                }
                else
                {
                    this.suppliers_document_cityField = value;
                    this.OnPropertyChanged("Suppliers_document_city");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_street Suppliers_document_street
        {
            get
            {
                return this.suppliers_document_streetField;
            }
            set
            {
                if ((this.suppliers_document_streetField != null))
                {
                    if ((suppliers_document_streetField.Equals(value) != true))
                    {
                        this.suppliers_document_streetField = value;
                        this.OnPropertyChanged("Suppliers_document_street");
                    }
                }
                else
                {
                    this.suppliers_document_streetField = value;
                    this.OnPropertyChanged("Suppliers_document_street");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_telephone Suppliers_document_telephone
        {
            get
            {
                return this.suppliers_document_telephoneField;
            }
            set
            {
                if ((this.suppliers_document_telephoneField != null))
                {
                    if ((suppliers_document_telephoneField.Equals(value) != true))
                    {
                        this.suppliers_document_telephoneField = value;
                        this.OnPropertyChanged("Suppliers_document_telephone");
                    }
                }
                else
                {
                    this.suppliers_document_telephoneField = value;
                    this.OnPropertyChanged("Suppliers_document_telephone");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_fax Suppliers_document_fax
        {
            get
            {
                return this.suppliers_document_faxField;
            }
            set
            {
                if ((this.suppliers_document_faxField != null))
                {
                    if ((suppliers_document_faxField.Equals(value) != true))
                    {
                        this.suppliers_document_faxField = value;
                        this.OnPropertyChanged("Suppliers_document_fax");
                    }
                }
                else
                {
                    this.suppliers_document_faxField = value;
                    this.OnPropertyChanged("Suppliers_document_fax");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_zip_code Suppliers_document_zip_code
        {
            get
            {
                return this.suppliers_document_zip_codeField;
            }
            set
            {
                if ((this.suppliers_document_zip_codeField != null))
                {
                    if ((suppliers_document_zip_codeField.Equals(value) != true))
                    {
                        this.suppliers_document_zip_codeField = value;
                        this.OnPropertyChanged("Suppliers_document_zip_code");
                    }
                }
                else
                {
                    this.suppliers_document_zip_codeField = value;
                    this.OnPropertyChanged("Suppliers_document_zip_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr Suppliers_document_invoice_nbr
        {
            get
            {
                return this.suppliers_document_invoice_nbrField;
            }
            set
            {
                if ((this.suppliers_document_invoice_nbrField != null))
                {
                    if ((suppliers_document_invoice_nbrField.Equals(value) != true))
                    {
                        this.suppliers_document_invoice_nbrField = value;
                        this.OnPropertyChanged("Suppliers_document_invoice_nbr");
                    }
                }
                else
                {
                    this.suppliers_document_invoice_nbrField = value;
                    this.OnPropertyChanged("Suppliers_document_invoice_nbr");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_invoice_amt Suppliers_document_invoice_amt
        {
            get
            {
                return this.suppliers_document_invoice_amtField;
            }
            set
            {
                if ((this.suppliers_document_invoice_amtField != null))
                {
                    if ((suppliers_document_invoice_amtField.Equals(value) != true))
                    {
                        this.suppliers_document_invoice_amtField = value;
                        this.OnPropertyChanged("Suppliers_document_invoice_amt");
                    }
                }
                else
                {
                    this.suppliers_document_invoice_amtField = value;
                    this.OnPropertyChanged("Suppliers_document_invoice_amt");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ASYCUDASuppliers_documentsSuppliers_document_type_code Suppliers_document_type_code
        {
            get
            {
                return this.suppliers_document_type_codeField;
            }
            set
            {
                if ((this.suppliers_document_type_codeField != null))
                {
                    if ((suppliers_document_type_codeField.Equals(value) != true))
                    {
                        this.suppliers_document_type_codeField = value;
                        this.OnPropertyChanged("Suppliers_document_type_code");
                    }
                }
                else
                {
                    this.suppliers_document_type_codeField = value;
                    this.OnPropertyChanged("Suppliers_document_type_code");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suppliers_document_date
        {
            get
            {
                return this.suppliers_document_dateField;
            }
            set
            {
                if ((this.suppliers_document_dateField != null))
                {
                    if ((suppliers_document_dateField.Equals(value) != true))
                    {
                        this.suppliers_document_dateField = value;
                        this.OnPropertyChanged("Suppliers_document_date");
                    }
                }
                else
                {
                    this.suppliers_document_dateField = value;
                    this.OnPropertyChanged("Suppliers_document_date");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documents));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documents object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documents object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documents object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documents obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documents);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documents obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documents Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documents)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documents object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documents object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documents object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documents obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documents);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documents obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documents obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documents LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documents LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documents object
        /// </summary>
        public virtual ASYCUDASuppliers_documents Clone()
        {
            return ((ASYCUDASuppliers_documents)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_itmlink")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_itmlink : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_itmlink()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_itmlink));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_itmlink object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_itmlink object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_itmlink object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_itmlink obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_itmlink);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_itmlink obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_itmlink Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_itmlink)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_itmlink object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_itmlink object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_itmlink object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_itmlink obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_itmlink);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_itmlink obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_itmlink obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_itmlink LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_itmlink LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_itmlink object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_itmlink Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_itmlink)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_code")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_code object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_code Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_name")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_name : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_name()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_name));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_name object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_name object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_name);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_name obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_name Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_name)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_name object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_name object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_name object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_name obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_name);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_name obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_name obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_name LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_name LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_name object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_name Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_name)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_country")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_country : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_country()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_country));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_country object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_country object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_country object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_country obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_country);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_country obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_country Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_country)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_country object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_country object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_country object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_country obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_country);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_country obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_country obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_country LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_country LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_country object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_country Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_country)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_city")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_city : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_city()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_city));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_city object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_city object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_city object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_city obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_city);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_city obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_city Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_city)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_city object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_city object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_city object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_city obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_city);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_city obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_city obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_city LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_city LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_city object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_city Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_city)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_street")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_street : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_street()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_street));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_street object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_street object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_street object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_street obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_street);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_street obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_street Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_street)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_street object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_street object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_street object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_street obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_street);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_street obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_street obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_street LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_street LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_street object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_street Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_street)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_telephone")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_telephone : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_telephone()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_telephone));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_telephone object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_telephone object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_telephone object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_telephone obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_telephone);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_telephone obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_telephone Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_telephone)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_telephone object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_telephone object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_telephone object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_telephone obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_telephone);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_telephone obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_telephone obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_telephone LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_telephone LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_telephone object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_telephone Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_telephone)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_fax")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_fax : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_fax()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_fax));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_fax object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_fax object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_fax object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_fax obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_fax);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_fax obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_fax Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_fax)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_fax object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_fax object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_fax object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_fax obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_fax);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_fax obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_fax obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_fax LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_fax LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_fax object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_fax Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_fax)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_zip_code")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_zip_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_zip_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_zip_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_zip_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_zip_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_zip_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_zip_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_zip_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_zip_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_zip_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_zip_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_zip_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_zip_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_zip_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_zip_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_zip_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_zip_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_zip_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_zip_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_zip_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_zip_code object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_zip_code Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_zip_code)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_invoice_nbr)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_invoice_amt")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_invoice_amt : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_invoice_amt()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_invoice_amt));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_invoice_amt obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_invoice_amt);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_invoice_amt obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_invoice_amt Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_invoice_amt)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_invoice_amt obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_invoice_amt);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_invoice_amt obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_invoice_amt obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_invoice_amt LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_invoice_amt LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_invoice_amt object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_invoice_amt Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_invoice_amt)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ASYCUDASuppliers_documentsSuppliers_document_type_code")]
    public partial class ASYCUDASuppliers_documentsSuppliers_document_type_code : System.ComponentModel.INotifyPropertyChanged
    {

        private object nullField;

        private ObservableCollection<string> textField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public ASYCUDASuppliers_documentsSuppliers_document_type_code()
        {
            this.textField = new ObservableCollection<string>();
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object @null
        {
            get
            {
                return this.nullField;
            }
            set
            {
                if ((this.nullField != null))
                {
                    if ((nullField.Equals(value) != true))
                    {
                        this.nullField = value;
                        this.OnPropertyChanged("null");
                    }
                }
                else
                {
                    this.nullField = value;
                    this.OnPropertyChanged("null");
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ObservableCollection<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text");
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ASYCUDASuppliers_documentsSuppliers_document_type_code));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_type_code object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ASYCUDASuppliers_documentsSuppliers_document_type_code object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_type_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_type_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_type_code);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ASYCUDASuppliers_documentsSuppliers_document_type_code obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_type_code Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ASYCUDASuppliers_documentsSuppliers_document_type_code)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ASYCUDASuppliers_documentsSuppliers_document_type_code object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ASYCUDASuppliers_documentsSuppliers_document_type_code object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ASYCUDASuppliers_documentsSuppliers_document_type_code object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ASYCUDASuppliers_documentsSuppliers_document_type_code obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ASYCUDASuppliers_documentsSuppliers_document_type_code);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_type_code obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ASYCUDASuppliers_documentsSuppliers_document_type_code obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_type_code LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ASYCUDASuppliers_documentsSuppliers_document_type_code LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this ASYCUDASuppliers_documentsSuppliers_document_type_code object
        /// </summary>
        public virtual ASYCUDASuppliers_documentsSuppliers_document_type_code Clone()
        {
            return ((ASYCUDASuppliers_documentsSuppliers_document_type_code)(this.MemberwiseClone()));
        }
        #endregion
    }
}
