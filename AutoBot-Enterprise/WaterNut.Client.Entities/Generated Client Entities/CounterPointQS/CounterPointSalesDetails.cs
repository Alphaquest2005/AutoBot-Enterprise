// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CounterPointQS.Client.DTO;


using Core.Common.Validation;

namespace CounterPointQS.Client.Entities
{
       public partial class CounterPointSalesDetails: BaseEntity<CounterPointSalesDetails>
    {
        DTO.CounterPointSalesDetails counterpointsalesdetails;
        public CounterPointSalesDetails(DTO.CounterPointSalesDetails dto )
        {
              counterpointsalesdetails = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.CounterPointSalesDetails>(counterpointsalesdetails);

        }

        public DTO.CounterPointSalesDetails DTO
        {
            get
            {
             return counterpointsalesdetails;
            }
            set
            {
                counterpointsalesdetails = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "INVNO is required")]
       
                
                [MaxLength(66, ErrorMessage = "INVNO has a max length of 66 letters ")]
public string INVNO
		{ 
		    get { return this.counterpointsalesdetails.INVNO; }
			set
			{
			    if (value == this.counterpointsalesdetails.INVNO) return;
				this.counterpointsalesdetails.INVNO = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("INVNO");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> SEQ_NO
		{ 
		    get { return this.counterpointsalesdetails.SEQ_NO; }
			set
			{
			    if (value == this.counterpointsalesdetails.SEQ_NO) return;
				this.counterpointsalesdetails.SEQ_NO = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SEQ_NO");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "ITEM_NO has a max length of 20 letters ")]
public string ITEM_NO
		{ 
		    get { return this.counterpointsalesdetails.ITEM_NO; }
			set
			{
			    if (value == this.counterpointsalesdetails.ITEM_NO) return;
				this.counterpointsalesdetails.ITEM_NO = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ITEM_NO");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "ITEM_DESCR has a max length of 50 letters ")]
public string ITEM_DESCR
		{ 
		    get { return this.counterpointsalesdetails.ITEM_DESCR; }
			set
			{
			    if (value == this.counterpointsalesdetails.ITEM_DESCR) return;
				this.counterpointsalesdetails.ITEM_DESCR = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ITEM_DESCR");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<decimal> QUANTITY
		{ 
		    get { return this.counterpointsalesdetails.QUANTITY; }
			set
			{
			    if (value == this.counterpointsalesdetails.QUANTITY) return;
				this.counterpointsalesdetails.QUANTITY = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QUANTITY");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<decimal> COST
		{ 
		    get { return this.counterpointsalesdetails.COST; }
			set
			{
			    if (value == this.counterpointsalesdetails.COST) return;
				this.counterpointsalesdetails.COST = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("COST");
			}
		}
     

       
       
                
                [MaxLength(15, ErrorMessage = "ACCT_NO has a max length of 15 letters ")]
public string ACCT_NO
		{ 
		    get { return this.counterpointsalesdetails.ACCT_NO; }
			set
			{
			    if (value == this.counterpointsalesdetails.ACCT_NO) return;
				this.counterpointsalesdetails.ACCT_NO = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ACCT_NO");
			}
		}
     

       
       
                
                [MaxLength(81, ErrorMessage = "CUSTOMER_NAME has a max length of 81 letters ")]
public string CUSTOMER_NAME
		{ 
		    get { return this.counterpointsalesdetails.CUSTOMER_NAME; }
			set
			{
			    if (value == this.counterpointsalesdetails.CUSTOMER_NAME) return;
				this.counterpointsalesdetails.CUSTOMER_NAME = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CUSTOMER_NAME");
			}
		}
     

       
       
public Nullable<System.DateTime> DATE
		{ 
		    get { return this.counterpointsalesdetails.DATE; }
			set
			{
			    if (value == this.counterpointsalesdetails.DATE) return;
				this.counterpointsalesdetails.DATE = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DATE");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "TAX_AMT is required")]
       [NumberValidationAttribute]
public decimal TAX_AMT
		{ 
		    get { return this.counterpointsalesdetails.TAX_AMT; }
			set
			{
			    if (value == this.counterpointsalesdetails.TAX_AMT) return;
				this.counterpointsalesdetails.TAX_AMT = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TAX_AMT");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<decimal> UNIT_WEIGHT
		{ 
		    get { return this.counterpointsalesdetails.UNIT_WEIGHT; }
			set
			{
			    if (value == this.counterpointsalesdetails.UNIT_WEIGHT) return;
				this.counterpointsalesdetails.UNIT_WEIGHT = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("UNIT_WEIGHT");
			}
		}
     

       
       
                
                [MaxLength(15, ErrorMessage = "QTY_UNIT has a max length of 15 letters ")]
public string QTY_UNIT
		{ 
		    get { return this.counterpointsalesdetails.QTY_UNIT; }
			set
			{
			    if (value == this.counterpointsalesdetails.QTY_UNIT) return;
				this.counterpointsalesdetails.QTY_UNIT = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QTY_UNIT");
			}
		}
     


        ChangeTrackingCollection<DTO.CounterPointSalesDetails> _changeTracker;    
        public ChangeTrackingCollection<DTO.CounterPointSalesDetails> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


