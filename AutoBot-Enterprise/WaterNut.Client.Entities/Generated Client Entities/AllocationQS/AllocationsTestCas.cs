// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using AllocationQS.Client.DTO;


using Core.Common.Validation;

namespace AllocationQS.Client.Entities
{
       public partial class AllocationsTestCas: BaseEntity<AllocationsTestCas>
    {
        DTO.AllocationsTestCas allocationstestcas;
        public AllocationsTestCas(DTO.AllocationsTestCas dto )
        {
              allocationstestcas = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AllocationsTestCas>(allocationstestcas);

        }

        public DTO.AllocationsTestCas DTO
        {
            get
            {
             return allocationstestcas;
            }
            set
            {
                allocationstestcas = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.allocationstestcas.Id; }
			set
			{
			    if (value == this.allocationstestcas.Id) return;
				this.allocationstestcas.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(50, ErrorMessage = "ItemNumber has a max length of 50 letters ")]
public string ItemNumber
		{ 
		    get { return this.allocationstestcas.ItemNumber; }
			set
			{
			    if (value == this.allocationstestcas.ItemNumber) return;
				this.allocationstestcas.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Issue is required")]
       
                
                [MaxLength(255, ErrorMessage = "Issue has a max length of 255 letters ")]
public string Issue
		{ 
		    get { return this.allocationstestcas.Issue; }
			set
			{
			    if (value == this.allocationstestcas.Issue) return;
				this.allocationstestcas.Issue = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Issue");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryDataDetails is required")]
       
public int EntryDataDetailsId
		{ 
		    get { return this.allocationstestcas.EntryDataDetailsId; }
			set
			{
			    if (value == this.allocationstestcas.EntryDataDetailsId) return;
				this.allocationstestcas.EntryDataDetailsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDetailsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.allocationstestcas.ApplicationSettingsId; }
			set
			{
			    if (value == this.allocationstestcas.ApplicationSettingsId) return;
				this.allocationstestcas.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     


        ChangeTrackingCollection<DTO.AllocationsTestCas> _changeTracker;    
        public ChangeTrackingCollection<DTO.AllocationsTestCas> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


