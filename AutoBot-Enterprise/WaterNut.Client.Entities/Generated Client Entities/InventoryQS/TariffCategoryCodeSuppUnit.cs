// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using InventoryQS.Client.DTO;


using Core.Common.Validation;

namespace InventoryQS.Client.Entities
{
       public partial class TariffCategoryCodeSuppUnit: BaseEntity<TariffCategoryCodeSuppUnit>
    {
        DTO.TariffCategoryCodeSuppUnit tariffcategorycodesuppunit;
        public TariffCategoryCodeSuppUnit(DTO.TariffCategoryCodeSuppUnit dto )
        {
              tariffcategorycodesuppunit = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TariffCategoryCodeSuppUnit>(tariffcategorycodesuppunit);

        }

        public DTO.TariffCategoryCodeSuppUnit DTO
        {
            get
            {
             return tariffcategorycodesuppunit;
            }
            set
            {
                tariffcategorycodesuppunit = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.tariffcategorycodesuppunit.Id; }
			set
			{
			    if (value == this.tariffcategorycodesuppunit.Id) return;
				this.tariffcategorycodesuppunit.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "TariffCategoryCode is required")]
       
                
                [MaxLength(50, ErrorMessage = "TariffCategoryCode has a max length of 50 letters ")]
public string TariffCategoryCode
		{ 
		    get { return this.tariffcategorycodesuppunit.TariffCategoryCode; }
			set
			{
			    if (value == this.tariffcategorycodesuppunit.TariffCategoryCode) return;
				this.tariffcategorycodesuppunit.TariffCategoryCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TariffCategoryCode");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "TariffSupUnit is required")]
       
public int TariffSupUnitId
		{ 
		    get { return this.tariffcategorycodesuppunit.TariffSupUnitId; }
			set
			{
			    if (value == this.tariffcategorycodesuppunit.TariffSupUnitId) return;
				this.tariffcategorycodesuppunit.TariffSupUnitId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TariffSupUnitId");
			}
		}
     

       private TariffCategory _TariffCategory;
        public  TariffCategory TariffCategory
		{
		    get
               { 
                  if (this.tariffcategorycodesuppunit != null)
                   {
                       if (_TariffCategory != null)
                       {
                           if (this.tariffcategorycodesuppunit.TariffCategory !=
                               _TariffCategory.DTO)
                           {
                                if (this.tariffcategorycodesuppunit.TariffCategory  != null)
                               _TariffCategory = new TariffCategory(this.tariffcategorycodesuppunit.TariffCategory);
                           }
                       }
                       else
                       {
                             if (this.tariffcategorycodesuppunit.TariffCategory  != null)
                           _TariffCategory = new TariffCategory(this.tariffcategorycodesuppunit.TariffCategory);
                       }
                   }


             //       if (_TariffCategory != null) return _TariffCategory;
                       
             //       var i = new TariffCategory(){TrackingState = TrackingState.Added};
			//		//if (this.tariffcategorycodesuppunit.TariffCategory == null) Debugger.Break();
			//		if (this.tariffcategorycodesuppunit.TariffCategory != null)
            //        {
            //           i. = this.tariffcategorycodesuppunit.TariffCategory;
            //        }
            //        else
            //        {
            //            this.tariffcategorycodesuppunit.TariffCategory = i.;
             //       }
                           
            //        _TariffCategory = i;
                     
                    return _TariffCategory;
               }
			set
			{
			    if (value == _TariffCategory) return;
                _TariffCategory = value;
                if(value != null)
                     this.tariffcategorycodesuppunit.TariffCategory = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("TariffCategory");
			}
		}
        

       private TariffSupUnitLkps _TariffSupUnitLkps;
        public  TariffSupUnitLkps TariffSupUnitLkps
		{
		    get
               { 
                  if (this.tariffcategorycodesuppunit != null)
                   {
                       if (_TariffSupUnitLkps != null)
                       {
                           if (this.tariffcategorycodesuppunit.TariffSupUnitLkps !=
                               _TariffSupUnitLkps.DTO)
                           {
                                if (this.tariffcategorycodesuppunit.TariffSupUnitLkps  != null)
                               _TariffSupUnitLkps = new TariffSupUnitLkps(this.tariffcategorycodesuppunit.TariffSupUnitLkps);
                           }
                       }
                       else
                       {
                             if (this.tariffcategorycodesuppunit.TariffSupUnitLkps  != null)
                           _TariffSupUnitLkps = new TariffSupUnitLkps(this.tariffcategorycodesuppunit.TariffSupUnitLkps);
                       }
                   }


             //       if (_TariffSupUnitLkps != null) return _TariffSupUnitLkps;
                       
             //       var i = new TariffSupUnitLkps(){TrackingState = TrackingState.Added};
			//		//if (this.tariffcategorycodesuppunit.TariffSupUnitLkps == null) Debugger.Break();
			//		if (this.tariffcategorycodesuppunit.TariffSupUnitLkps != null)
            //        {
            //           i. = this.tariffcategorycodesuppunit.TariffSupUnitLkps;
            //        }
            //        else
            //        {
            //            this.tariffcategorycodesuppunit.TariffSupUnitLkps = i.;
             //       }
                           
            //        _TariffSupUnitLkps = i;
                     
                    return _TariffSupUnitLkps;
               }
			set
			{
			    if (value == _TariffSupUnitLkps) return;
                _TariffSupUnitLkps = value;
                if(value != null)
                     this.tariffcategorycodesuppunit.TariffSupUnitLkps = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("TariffSupUnitLkps");
			}
		}
        


        ChangeTrackingCollection<DTO.TariffCategoryCodeSuppUnit> _changeTracker;    
        public ChangeTrackingCollection<DTO.TariffCategoryCodeSuppUnit> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


