// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using InventoryQS.Client.DTO;


using Core.Common.Validation;

namespace InventoryQS.Client.Entities
{
       public partial class EntryDataDetailsEx: BaseEntity<EntryDataDetailsEx>
    {
        DTO.EntryDataDetailsEx entrydatadetailsex;
        public EntryDataDetailsEx(DTO.EntryDataDetailsEx dto )
        {
              entrydatadetailsex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.EntryDataDetailsEx>(entrydatadetailsex);

        }

        public DTO.EntryDataDetailsEx DTO
        {
            get
            {
             return entrydatadetailsex;
            }
            set
            {
                entrydatadetailsex = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "EntryDataDetails is required")]
       
public int EntryDataDetailsId
		{ 
		    get { return this.entrydatadetailsex.EntryDataDetailsId; }
			set
			{
			    if (value == this.entrydatadetailsex.EntryDataDetailsId) return;
				this.entrydatadetailsex.EntryDataDetailsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDetailsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData is required")]
       
                
                [MaxLength(50, ErrorMessage = "EntryDataId has a max length of 50 letters ")]
public string EntryDataId
		{ 
		    get { return this.entrydatadetailsex.EntryDataId; }
			set
			{
			    if (value == this.entrydatadetailsex.EntryDataId) return;
				this.entrydatadetailsex.EntryDataId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LineNumber
		{ 
		    get { return this.entrydatadetailsex.LineNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.LineNumber) return;
				this.entrydatadetailsex.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.entrydatadetailsex.ItemNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.ItemNumber) return;
				this.entrydatadetailsex.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Quantity is required")]
       
public float Quantity
		{ 
		    get { return this.entrydatadetailsex.Quantity; }
			set
			{
			    if (value == this.entrydatadetailsex.Quantity) return;
				this.entrydatadetailsex.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       
       
                
                [MaxLength(15, ErrorMessage = "Units has a max length of 15 letters ")]
public string Units
		{ 
		    get { return this.entrydatadetailsex.Units; }
			set
			{
			    if (value == this.entrydatadetailsex.Units) return;
				this.entrydatadetailsex.Units = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Units");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemDescription is required")]
       
                
                [MaxLength(255, ErrorMessage = "ItemDescription has a max length of 255 letters ")]
public string ItemDescription
		{ 
		    get { return this.entrydatadetailsex.ItemDescription; }
			set
			{
			    if (value == this.entrydatadetailsex.ItemDescription) return;
				this.entrydatadetailsex.ItemDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemDescription");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Cost is required")]
       
public float Cost
		{ 
		    get { return this.entrydatadetailsex.Cost; }
			set
			{
			    if (value == this.entrydatadetailsex.Cost) return;
				this.entrydatadetailsex.Cost = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Cost");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "QtyAllocated is required")]
       [NumberValidationAttribute]
public double QtyAllocated
		{ 
		    get { return this.entrydatadetailsex.QtyAllocated; }
			set
			{
			    if (value == this.entrydatadetailsex.QtyAllocated) return;
				this.entrydatadetailsex.QtyAllocated = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QtyAllocated");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "UnitWeight is required")]
       
public float UnitWeight
		{ 
		    get { return this.entrydatadetailsex.UnitWeight; }
			set
			{
			    if (value == this.entrydatadetailsex.UnitWeight) return;
				this.entrydatadetailsex.UnitWeight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("UnitWeight");
			}
		}
     

       
       
public Nullable<bool> DoNotAllocate
		{ 
		    get { return this.entrydatadetailsex.DoNotAllocate; }
			set
			{
			    if (value == this.entrydatadetailsex.DoNotAllocate) return;
				this.entrydatadetailsex.DoNotAllocate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DoNotAllocate");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "TariffCode has a max length of 50 letters ")]
public string TariffCode
		{ 
		    get { return this.entrydatadetailsex.TariffCode; }
			set
			{
			    if (value == this.entrydatadetailsex.TariffCode) return;
				this.entrydatadetailsex.TariffCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TariffCode");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "CNumber has a max length of 20 letters ")]
public string CNumber
		{ 
		    get { return this.entrydatadetailsex.CNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.CNumber) return;
				this.entrydatadetailsex.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> CLineNumber
		{ 
		    get { return this.entrydatadetailsex.CLineNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.CLineNumber) return;
				this.entrydatadetailsex.CLineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CLineNumber");
			}
		}
     

       
       
public Nullable<bool> Downloaded
		{ 
		    get { return this.entrydatadetailsex.Downloaded; }
			set
			{
			    if (value == this.entrydatadetailsex.Downloaded) return;
				this.entrydatadetailsex.Downloaded = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Downloaded");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DutyFreePaid is required")]
       
                
                [MaxLength(9, ErrorMessage = "DutyFreePaid has a max length of 9 letters ")]
public string DutyFreePaid
		{ 
		    get { return this.entrydatadetailsex.DutyFreePaid; }
			set
			{
			    if (value == this.entrydatadetailsex.DutyFreePaid) return;
				this.entrydatadetailsex.DutyFreePaid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DutyFreePaid");
			}
		}
     

       
       
public Nullable<float> Total
		{ 
		    get { return this.entrydatadetailsex.Total; }
			set
			{
			    if (value == this.entrydatadetailsex.Total) return;
				this.entrydatadetailsex.Total = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Total");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.entrydatadetailsex.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.entrydatadetailsex.AsycudaDocumentSetId) return;
				this.entrydatadetailsex.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> InvoiceQty
		{ 
		    get { return this.entrydatadetailsex.InvoiceQty; }
			set
			{
			    if (value == this.entrydatadetailsex.InvoiceQty) return;
				this.entrydatadetailsex.InvoiceQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceQty");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> ReceivedQty
		{ 
		    get { return this.entrydatadetailsex.ReceivedQty; }
			set
			{
			    if (value == this.entrydatadetailsex.ReceivedQty) return;
				this.entrydatadetailsex.ReceivedQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReceivedQty");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Status has a max length of 50 letters ")]
public string Status
		{ 
		    get { return this.entrydatadetailsex.Status; }
			set
			{
			    if (value == this.entrydatadetailsex.Status) return;
				this.entrydatadetailsex.Status = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Status");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "PreviousInvoiceNumber has a max length of 255 letters ")]
public string PreviousInvoiceNumber
		{ 
		    get { return this.entrydatadetailsex.PreviousInvoiceNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.PreviousInvoiceNumber) return;
				this.entrydatadetailsex.PreviousInvoiceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousInvoiceNumber");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "PreviousCNumber has a max length of 255 letters ")]
public string PreviousCNumber
		{ 
		    get { return this.entrydatadetailsex.PreviousCNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.PreviousCNumber) return;
				this.entrydatadetailsex.PreviousCNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousCNumber");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Comment has a max length of 255 letters ")]
public string Comment
		{ 
		    get { return this.entrydatadetailsex.Comment; }
			set
			{
			    if (value == this.entrydatadetailsex.Comment) return;
				this.entrydatadetailsex.Comment = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Comment");
			}
		}
     

       
       
public Nullable<System.DateTime> EffectiveDate
		{ 
		    get { return this.entrydatadetailsex.EffectiveDate; }
			set
			{
			    if (value == this.entrydatadetailsex.EffectiveDate) return;
				this.entrydatadetailsex.EffectiveDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EffectiveDate");
			}
		}
     

       
       
public Nullable<bool> IsReconciled
		{ 
		    get { return this.entrydatadetailsex.IsReconciled; }
			set
			{
			    if (value == this.entrydatadetailsex.IsReconciled) return;
				this.entrydatadetailsex.IsReconciled = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsReconciled");
			}
		}
     

       
       
public Nullable<int> ApplicationSettingsId
		{ 
		    get { return this.entrydatadetailsex.ApplicationSettingsId; }
			set
			{
			    if (value == this.entrydatadetailsex.ApplicationSettingsId) return;
				this.entrydatadetailsex.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> LastCost
		{ 
		    get { return this.entrydatadetailsex.LastCost; }
			set
			{
			    if (value == this.entrydatadetailsex.LastCost) return;
				this.entrydatadetailsex.LastCost = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LastCost");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> TaxAmount
		{ 
		    get { return this.entrydatadetailsex.TaxAmount; }
			set
			{
			    if (value == this.entrydatadetailsex.TaxAmount) return;
				this.entrydatadetailsex.TaxAmount = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TaxAmount");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData_ is required")]
       
public int EntryData_Id
		{ 
		    get { return this.entrydatadetailsex.EntryData_Id; }
			set
			{
			    if (value == this.entrydatadetailsex.EntryData_Id) return;
				this.entrydatadetailsex.EntryData_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryData_Id");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "EmailId has a max length of 255 letters ")]
public string EmailId
		{ 
		    get { return this.entrydatadetailsex.EmailId; }
			set
			{
			    if (value == this.entrydatadetailsex.EmailId) return;
				this.entrydatadetailsex.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     

       
       
public Nullable<int> FileTypeId
		{ 
		    get { return this.entrydatadetailsex.FileTypeId; }
			set
			{
			    if (value == this.entrydatadetailsex.FileTypeId) return;
				this.entrydatadetailsex.FileTypeId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileTypeId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Name has a max length of 50 letters ")]
public string Name
		{ 
		    get { return this.entrydatadetailsex.Name; }
			set
			{
			    if (value == this.entrydatadetailsex.Name) return;
				this.entrydatadetailsex.Name = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Name");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> FileLineNumber
		{ 
		    get { return this.entrydatadetailsex.FileLineNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.FileLineNumber) return;
				this.entrydatadetailsex.FileLineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileLineNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InventoryItem is required")]
       
public int InventoryItemId
		{ 
		    get { return this.entrydatadetailsex.InventoryItemId; }
			set
			{
			    if (value == this.entrydatadetailsex.InventoryItemId) return;
				this.entrydatadetailsex.InventoryItemId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InventoryItemId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> VolumeLiters
		{ 
		    get { return this.entrydatadetailsex.VolumeLiters; }
			set
			{
			    if (value == this.entrydatadetailsex.VolumeLiters) return;
				this.entrydatadetailsex.VolumeLiters = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("VolumeLiters");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> PreviousCLineNumber
		{ 
		    get { return this.entrydatadetailsex.PreviousCLineNumber; }
			set
			{
			    if (value == this.entrydatadetailsex.PreviousCLineNumber) return;
				this.entrydatadetailsex.PreviousCLineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousCLineNumber");
			}
		}
     

       private InventoryItemsEx _InventoryItemsEx;
        public  InventoryItemsEx InventoryItemsEx
		{
		    get
               { 
                  if (this.entrydatadetailsex != null)
                   {
                       if (_InventoryItemsEx != null)
                       {
                           if (this.entrydatadetailsex.InventoryItemsEx !=
                               _InventoryItemsEx.DTO)
                           {
                                if (this.entrydatadetailsex.InventoryItemsEx  != null)
                               _InventoryItemsEx = new InventoryItemsEx(this.entrydatadetailsex.InventoryItemsEx);
                           }
                       }
                       else
                       {
                             if (this.entrydatadetailsex.InventoryItemsEx  != null)
                           _InventoryItemsEx = new InventoryItemsEx(this.entrydatadetailsex.InventoryItemsEx);
                       }
                   }


             //       if (_InventoryItemsEx != null) return _InventoryItemsEx;
                       
             //       var i = new InventoryItemsEx(){TrackingState = TrackingState.Added};
			//		//if (this.entrydatadetailsex.InventoryItemsEx == null) Debugger.Break();
			//		if (this.entrydatadetailsex.InventoryItemsEx != null)
            //        {
            //           i. = this.entrydatadetailsex.InventoryItemsEx;
            //        }
            //        else
            //        {
            //            this.entrydatadetailsex.InventoryItemsEx = i.;
             //       }
                           
            //        _InventoryItemsEx = i;
                     
                    return _InventoryItemsEx;
               }
			set
			{
			    if (value == _InventoryItemsEx) return;
                _InventoryItemsEx = value;
                if(value != null)
                     this.entrydatadetailsex.InventoryItemsEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("InventoryItemsEx");
			}
		}
        


        ChangeTrackingCollection<DTO.EntryDataDetailsEx> _changeTracker;    
        public ChangeTrackingCollection<DTO.EntryDataDetailsEx> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


