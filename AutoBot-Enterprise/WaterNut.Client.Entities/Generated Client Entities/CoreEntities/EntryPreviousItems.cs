// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class EntryPreviousItems: BaseEntity<EntryPreviousItems>
    {
        DTO.EntryPreviousItems entrypreviousitems;
        public EntryPreviousItems(DTO.EntryPreviousItems dto )
        {
              entrypreviousitems = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.EntryPreviousItems>(entrypreviousitems);

        }

        public DTO.EntryPreviousItems DTO
        {
            get
            {
             return entrypreviousitems;
            }
            set
            {
                entrypreviousitems = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "PreviousItem_ is required")]
       
public int PreviousItem_Id
		{ 
		    get { return this.entrypreviousitems.PreviousItem_Id; }
			set
			{
			    if (value == this.entrypreviousitems.PreviousItem_Id) return;
				this.entrypreviousitems.PreviousItem_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousItem_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Item_ is required")]
       
public int Item_Id
		{ 
		    get { return this.entrypreviousitems.Item_Id; }
			set
			{
			    if (value == this.entrypreviousitems.Item_Id) return;
				this.entrypreviousitems.Item_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Item_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryPreviousItem is required")]
       
public int EntryPreviousItemId
		{ 
		    get { return this.entrypreviousitems.EntryPreviousItemId; }
			set
			{
			    if (value == this.entrypreviousitems.EntryPreviousItemId) return;
				this.entrypreviousitems.EntryPreviousItemId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryPreviousItemId");
			}
		}
     

       private AsycudaDocumentItem _AsycudaDocumentItem;
        public  AsycudaDocumentItem AsycudaDocumentItem
		{
		    get
               { 
                  if (this.entrypreviousitems != null)
                   {
                       if (_AsycudaDocumentItem != null)
                       {
                           if (this.entrypreviousitems.AsycudaDocumentItem !=
                               _AsycudaDocumentItem.DTO)
                           {
                                if (this.entrypreviousitems.AsycudaDocumentItem  != null)
                               _AsycudaDocumentItem = new AsycudaDocumentItem(this.entrypreviousitems.AsycudaDocumentItem);
                           }
                       }
                       else
                       {
                             if (this.entrypreviousitems.AsycudaDocumentItem  != null)
                           _AsycudaDocumentItem = new AsycudaDocumentItem(this.entrypreviousitems.AsycudaDocumentItem);
                       }
                   }


             //       if (_AsycudaDocumentItem != null) return _AsycudaDocumentItem;
                       
             //       var i = new AsycudaDocumentItem(){TrackingState = TrackingState.Added};
			//		//if (this.entrypreviousitems.AsycudaDocumentItem == null) Debugger.Break();
			//		if (this.entrypreviousitems.AsycudaDocumentItem != null)
            //        {
            //           i. = this.entrypreviousitems.AsycudaDocumentItem;
            //        }
            //        else
            //        {
            //            this.entrypreviousitems.AsycudaDocumentItem = i.;
             //       }
                           
            //        _AsycudaDocumentItem = i;
                     
                    return _AsycudaDocumentItem;
               }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
                _AsycudaDocumentItem = value;
                if(value != null)
                     this.entrypreviousitems.AsycudaDocumentItem = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentItem");
			}
		}
        


        ChangeTrackingCollection<DTO.EntryPreviousItems> _changeTracker;    
        public ChangeTrackingCollection<DTO.EntryPreviousItems> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


