// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class AsycudaDocumentSet: BaseEntity<AsycudaDocumentSet>
    {
        DTO.AsycudaDocumentSet asycudadocumentset;
        public AsycudaDocumentSet(DTO.AsycudaDocumentSet dto )
        {
              asycudadocumentset = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocumentSet>(asycudadocumentset);

        }

        public DTO.AsycudaDocumentSet DTO
        {
            get
            {
             return asycudadocumentset;
            }
            set
            {
                asycudadocumentset = value;
            }
        }
        


       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.asycudadocumentset.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.asycudadocumentset.AsycudaDocumentSetId) return;
				this.asycudadocumentset.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.asycudadocumentset.ApplicationSettingsId; }
			set
			{
			    if (value == this.asycudadocumentset.ApplicationSettingsId) return;
				this.asycudadocumentset.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Declarant_Reference_Number has a max length of 50 letters ")]
public string Declarant_Reference_Number
		{ 
		    get { return this.asycudadocumentset.Declarant_Reference_Number; }
			set
			{
			    if (value == this.asycudadocumentset.Declarant_Reference_Number) return;
				this.asycudadocumentset.Declarant_Reference_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Declarant_Reference_Number");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Exchange_Rate is required")]
       [NumberValidationAttribute]
public double Exchange_Rate
		{ 
		    get { return this.asycudadocumentset.Exchange_Rate; }
			set
			{
			    if (value == this.asycudadocumentset.Exchange_Rate) return;
				this.asycudadocumentset.Exchange_Rate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Exchange_Rate");
			}
		}
     

       
       
public Nullable<int> Customs_ProcedureId
		{ 
		    get { return this.asycudadocumentset.Customs_ProcedureId; }
			set
			{
			    if (value == this.asycudadocumentset.Customs_ProcedureId) return;
				this.asycudadocumentset.Customs_ProcedureId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Customs_ProcedureId");
			}
		}
     

       
       
                
                [MaxLength(3, ErrorMessage = "Country_of_origin_code has a max length of 3 letters ")]
public string Country_of_origin_code
		{ 
		    get { return this.asycudadocumentset.Country_of_origin_code; }
			set
			{
			    if (value == this.asycudadocumentset.Country_of_origin_code) return;
				this.asycudadocumentset.Country_of_origin_code = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Country_of_origin_code");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Currency_Code is required")]
       
                
                [MaxLength(3, ErrorMessage = "Currency_Code has a max length of 3 letters ")]
public string Currency_Code
		{ 
		    get { return this.asycudadocumentset.Currency_Code; }
			set
			{
			    if (value == this.asycudadocumentset.Currency_Code) return;
				this.asycudadocumentset.Currency_Code = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Currency_Code");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Description has a max length of 255 letters ")]
public string Description
		{ 
		    get { return this.asycudadocumentset.Description; }
			set
			{
			    if (value == this.asycudadocumentset.Description) return;
				this.asycudadocumentset.Description = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Description");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Manifest_Number has a max length of 50 letters ")]
public string Manifest_Number
		{ 
		    get { return this.asycudadocumentset.Manifest_Number; }
			set
			{
			    if (value == this.asycudadocumentset.Manifest_Number) return;
				this.asycudadocumentset.Manifest_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Manifest_Number");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "BLNumber has a max length of 50 letters ")]
public string BLNumber
		{ 
		    get { return this.asycudadocumentset.BLNumber; }
			set
			{
			    if (value == this.asycudadocumentset.BLNumber) return;
				this.asycudadocumentset.BLNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("BLNumber");
			}
		}
     

       
       
public Nullable<System.DateTime> EntryTimeStamp
		{ 
		    get { return this.asycudadocumentset.EntryTimeStamp; }
			set
			{
			    if (value == this.asycudadocumentset.EntryTimeStamp) return;
				this.asycudadocumentset.EntryTimeStamp = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryTimeStamp");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> StartingFileCount
		{ 
		    get { return this.asycudadocumentset.StartingFileCount; }
			set
			{
			    if (value == this.asycudadocumentset.StartingFileCount) return;
				this.asycudadocumentset.StartingFileCount = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("StartingFileCount");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "ApportionMethod has a max length of 50 letters ")]
public string ApportionMethod
		{ 
		    get { return this.asycudadocumentset.ApportionMethod; }
			set
			{
			    if (value == this.asycudadocumentset.ApportionMethod) return;
				this.asycudadocumentset.ApportionMethod = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApportionMethod");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> TotalWeight
		{ 
		    get { return this.asycudadocumentset.TotalWeight; }
			set
			{
			    if (value == this.asycudadocumentset.TotalWeight) return;
				this.asycudadocumentset.TotalWeight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TotalWeight");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> TotalFreight
		{ 
		    get { return this.asycudadocumentset.TotalFreight; }
			set
			{
			    if (value == this.asycudadocumentset.TotalFreight) return;
				this.asycudadocumentset.TotalFreight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TotalFreight");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> TotalPackages
		{ 
		    get { return this.asycudadocumentset.TotalPackages; }
			set
			{
			    if (value == this.asycudadocumentset.TotalPackages) return;
				this.asycudadocumentset.TotalPackages = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TotalPackages");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LastFileNumber
		{ 
		    get { return this.asycudadocumentset.LastFileNumber; }
			set
			{
			    if (value == this.asycudadocumentset.LastFileNumber) return;
				this.asycudadocumentset.LastFileNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LastFileNumber");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> TotalInvoices
		{ 
		    get { return this.asycudadocumentset.TotalInvoices; }
			set
			{
			    if (value == this.asycudadocumentset.TotalInvoices) return;
				this.asycudadocumentset.TotalInvoices = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TotalInvoices");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> MaxLines
		{ 
		    get { return this.asycudadocumentset.MaxLines; }
			set
			{
			    if (value == this.asycudadocumentset.MaxLines) return;
				this.asycudadocumentset.MaxLines = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("MaxLines");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "LocationOfGoods has a max length of 50 letters ")]
public string LocationOfGoods
		{ 
		    get { return this.asycudadocumentset.LocationOfGoods; }
			set
			{
			    if (value == this.asycudadocumentset.LocationOfGoods) return;
				this.asycudadocumentset.LocationOfGoods = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LocationOfGoods");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "FreightCurrencyCode is required")]
       
                
                [MaxLength(3, ErrorMessage = "FreightCurrencyCode has a max length of 3 letters ")]
public string FreightCurrencyCode
		{ 
		    get { return this.asycudadocumentset.FreightCurrencyCode; }
			set
			{
			    if (value == this.asycudadocumentset.FreightCurrencyCode) return;
				this.asycudadocumentset.FreightCurrencyCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FreightCurrencyCode");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Office has a max length of 50 letters ")]
public string Office
		{ 
		    get { return this.asycudadocumentset.Office; }
			set
			{
			    if (value == this.asycudadocumentset.Office) return;
				this.asycudadocumentset.Office = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Office");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> UpgradeKey
		{ 
		    get { return this.asycudadocumentset.UpgradeKey; }
			set
			{
			    if (value == this.asycudadocumentset.UpgradeKey) return;
				this.asycudadocumentset.UpgradeKey = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("UpgradeKey");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> ExpectedEntries
		{ 
		    get { return this.asycudadocumentset.ExpectedEntries; }
			set
			{
			    if (value == this.asycudadocumentset.ExpectedEntries) return;
				this.asycudadocumentset.ExpectedEntries = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ExpectedEntries");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PackageType has a max length of 50 letters ")]
public string PackageType
		{ 
		    get { return this.asycudadocumentset.PackageType; }
			set
			{
			    if (value == this.asycudadocumentset.PackageType) return;
				this.asycudadocumentset.PackageType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PackageType");
			}
		}
     

       
       
                
                [MaxLength(100, ErrorMessage = "ConsigneeName has a max length of 100 letters ")]
public string ConsigneeName
		{ 
		    get { return this.asycudadocumentset.ConsigneeName; }
			set
			{
			    if (value == this.asycudadocumentset.ConsigneeName) return;
				this.asycudadocumentset.ConsigneeName = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ConsigneeName");
			}
		}
     

        ObservableCollection<ActionDocSetLogs> _ActionDocSetLogs = null;
        public  ObservableCollection<ActionDocSetLogs> ActionDocSetLogs
		{
            
		    get 
				{ 
					if(_ActionDocSetLogs != null) return _ActionDocSetLogs;
					//if (this.asycudadocumentset.ActionDocSetLogs == null) Debugger.Break();
					if(this.asycudadocumentset.ActionDocSetLogs != null)
					{
						_ActionDocSetLogs = new ObservableCollection<ActionDocSetLogs>(this.asycudadocumentset.ActionDocSetLogs.Select(x => new ActionDocSetLogs(x)));
					}
					
						_ActionDocSetLogs.CollectionChanged += ActionDocSetLogs_CollectionChanged; 
					
					return _ActionDocSetLogs; 
				}
			set
			{
			    if (Equals(value, _ActionDocSetLogs)) return;
				if (value != null)
					this.asycudadocumentset.ActionDocSetLogs = new ChangeTrackingCollection<DTO.ActionDocSetLogs>(value.Select(x => x.DTO).ToList());
                _ActionDocSetLogs = value;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				if (_ActionDocSetLogs != null)
				_ActionDocSetLogs.CollectionChanged += ActionDocSetLogs_CollectionChanged;               
				NotifyPropertyChanged("ActionDocSetLogs");
			}
		}
        
        void ActionDocSetLogs_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Add:
                    foreach (ActionDocSetLogs itm in e.NewItems)
                    {
                        if (itm != null)
                        asycudadocumentset.ActionDocSetLogs.Add(itm.DTO);
                    }
                    if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                    break;
                case NotifyCollectionChangedAction.Remove:
                    foreach (ActionDocSetLogs itm in e.OldItems)
                    {
                        if (itm != null)
                        asycudadocumentset.ActionDocSetLogs.Remove(itm.DTO);
                    }
					if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                    break;
                
            }
        }

       private ApplicationSettings _ApplicationSettings;
        public  ApplicationSettings ApplicationSettings
		{
		    get
               { 
                  if (this.asycudadocumentset != null)
                   {
                       if (_ApplicationSettings != null)
                       {
                           if (this.asycudadocumentset.ApplicationSettings !=
                               _ApplicationSettings.DTO)
                           {
                                if (this.asycudadocumentset.ApplicationSettings  != null)
                               _ApplicationSettings = new ApplicationSettings(this.asycudadocumentset.ApplicationSettings);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset.ApplicationSettings  != null)
                           _ApplicationSettings = new ApplicationSettings(this.asycudadocumentset.ApplicationSettings);
                       }
                   }


             //       if (_ApplicationSettings != null) return _ApplicationSettings;
                       
             //       var i = new ApplicationSettings(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset.ApplicationSettings == null) Debugger.Break();
			//		if (this.asycudadocumentset.ApplicationSettings != null)
            //        {
            //           i. = this.asycudadocumentset.ApplicationSettings;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset.ApplicationSettings = i.;
             //       }
                           
            //        _ApplicationSettings = i;
                     
                    return _ApplicationSettings;
               }
			set
			{
			    if (value == _ApplicationSettings) return;
                _ApplicationSettings = value;
                if(value != null)
                     this.asycudadocumentset.ApplicationSettings = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("ApplicationSettings");
			}
		}
        

        ObservableCollection<AsycudaDocumentSet_Attachments> _AsycudaDocumentSet_Attachments = null;
        public  ObservableCollection<AsycudaDocumentSet_Attachments> AsycudaDocumentSet_Attachments
		{
            
		    get 
				{ 
					if(_AsycudaDocumentSet_Attachments != null) return _AsycudaDocumentSet_Attachments;
					//if (this.asycudadocumentset.AsycudaDocumentSet_Attachments == null) Debugger.Break();
					if(this.asycudadocumentset.AsycudaDocumentSet_Attachments != null)
					{
						_AsycudaDocumentSet_Attachments = new ObservableCollection<AsycudaDocumentSet_Attachments>(this.asycudadocumentset.AsycudaDocumentSet_Attachments.Select(x => new AsycudaDocumentSet_Attachments(x)));
					}
					
						_AsycudaDocumentSet_Attachments.CollectionChanged += AsycudaDocumentSet_Attachments_CollectionChanged; 
					
					return _AsycudaDocumentSet_Attachments; 
				}
			set
			{
			    if (Equals(value, _AsycudaDocumentSet_Attachments)) return;
				if (value != null)
					this.asycudadocumentset.AsycudaDocumentSet_Attachments = new ChangeTrackingCollection<DTO.AsycudaDocumentSet_Attachments>(value.Select(x => x.DTO).ToList());
                _AsycudaDocumentSet_Attachments = value;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				if (_AsycudaDocumentSet_Attachments != null)
				_AsycudaDocumentSet_Attachments.CollectionChanged += AsycudaDocumentSet_Attachments_CollectionChanged;               
				NotifyPropertyChanged("AsycudaDocumentSet_Attachments");
			}
		}
        
        void AsycudaDocumentSet_Attachments_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Add:
                    foreach (AsycudaDocumentSet_Attachments itm in e.NewItems)
                    {
                        if (itm != null)
                        asycudadocumentset.AsycudaDocumentSet_Attachments.Add(itm.DTO);
                    }
                    if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                    break;
                case NotifyCollectionChangedAction.Remove:
                    foreach (AsycudaDocumentSet_Attachments itm in e.OldItems)
                    {
                        if (itm != null)
                        asycudadocumentset.AsycudaDocumentSet_Attachments.Remove(itm.DTO);
                    }
					if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                    break;
                
            }
        }

       private Customs_Procedure _Customs_Procedure;
        public  Customs_Procedure Customs_Procedure
		{
		    get
               { 
                  if (this.asycudadocumentset != null)
                   {
                       if (_Customs_Procedure != null)
                       {
                           if (this.asycudadocumentset.Customs_Procedure !=
                               _Customs_Procedure.DTO)
                           {
                                if (this.asycudadocumentset.Customs_Procedure  != null)
                               _Customs_Procedure = new Customs_Procedure(this.asycudadocumentset.Customs_Procedure);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset.Customs_Procedure  != null)
                           _Customs_Procedure = new Customs_Procedure(this.asycudadocumentset.Customs_Procedure);
                       }
                   }


             //       if (_Customs_Procedure != null) return _Customs_Procedure;
                       
             //       var i = new Customs_Procedure(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset.Customs_Procedure == null) Debugger.Break();
			//		if (this.asycudadocumentset.Customs_Procedure != null)
            //        {
            //           i. = this.asycudadocumentset.Customs_Procedure;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset.Customs_Procedure = i.;
             //       }
                           
            //        _Customs_Procedure = i;
                     
                    return _Customs_Procedure;
               }
			set
			{
			    if (value == _Customs_Procedure) return;
                _Customs_Procedure = value;
                if(value != null)
                     this.asycudadocumentset.Customs_Procedure = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Customs_Procedure");
			}
		}
        

       private Consignees _Consignees;
        public  Consignees Consignees
		{
		    get
               { 
                  if (this.asycudadocumentset != null)
                   {
                       if (_Consignees != null)
                       {
                           if (this.asycudadocumentset.Consignees !=
                               _Consignees.DTO)
                           {
                                if (this.asycudadocumentset.Consignees  != null)
                               _Consignees = new Consignees(this.asycudadocumentset.Consignees);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset.Consignees  != null)
                           _Consignees = new Consignees(this.asycudadocumentset.Consignees);
                       }
                   }


             //       if (_Consignees != null) return _Consignees;
                       
             //       var i = new Consignees(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset.Consignees == null) Debugger.Break();
			//		if (this.asycudadocumentset.Consignees != null)
            //        {
            //           i. = this.asycudadocumentset.Consignees;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset.Consignees = i.;
             //       }
                           
            //        _Consignees = i;
                     
                    return _Consignees;
               }
			set
			{
			    if (value == _Consignees) return;
                _Consignees = value;
                if(value != null)
                     this.asycudadocumentset.Consignees = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Consignees");
			}
		}
        


        ChangeTrackingCollection<DTO.AsycudaDocumentSet> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocumentSet> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


