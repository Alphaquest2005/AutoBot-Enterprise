// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_DiscrepanciesToAssess: BaseEntity<TODO_DiscrepanciesToAssess>
    {
        DTO.TODO_DiscrepanciesToAssess todo_discrepanciestoassess;
        public TODO_DiscrepanciesToAssess(DTO.TODO_DiscrepanciesToAssess dto )
        {
              todo_discrepanciestoassess = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_DiscrepanciesToAssess>(todo_discrepanciestoassess);

        }

        public DTO.TODO_DiscrepanciesToAssess DTO
        {
            get
            {
             return todo_discrepanciestoassess;
            }
            set
            {
                todo_discrepanciestoassess = value;
            }
        }
       
       
                
                [MaxLength(50, ErrorMessage = "Declarant_Reference_Number has a max length of 50 letters ")]
public string Declarant_Reference_Number
		{ 
		    get { return this.todo_discrepanciestoassess.Declarant_Reference_Number; }
			set
			{
			    if (value == this.todo_discrepanciestoassess.Declarant_Reference_Number) return;
				this.todo_discrepanciestoassess.Declarant_Reference_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Declarant_Reference_Number");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> DocumentsCount
		{ 
		    get { return this.todo_discrepanciestoassess.DocumentsCount; }
			set
			{
			    if (value == this.todo_discrepanciestoassess.DocumentsCount) return;
				this.todo_discrepanciestoassess.DocumentsCount = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentsCount");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Type has a max length of 50 letters ")]
public string Type
		{ 
		    get { return this.todo_discrepanciestoassess.Type; }
			set
			{
			    if (value == this.todo_discrepanciestoassess.Type) return;
				this.todo_discrepanciestoassess.Type = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Type");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "CNumber has a max length of 20 letters ")]
public string CNumber
		{ 
		    get { return this.todo_discrepanciestoassess.CNumber; }
			set
			{
			    if (value == this.todo_discrepanciestoassess.CNumber) return;
				this.todo_discrepanciestoassess.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.todo_discrepanciestoassess.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.todo_discrepanciestoassess.AsycudaDocumentSetId) return;
				this.todo_discrepanciestoassess.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_DiscrepanciesToAssess> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_DiscrepanciesToAssess> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


