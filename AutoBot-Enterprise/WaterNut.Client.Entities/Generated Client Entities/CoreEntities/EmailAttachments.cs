// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class EmailAttachments: BaseEntity<EmailAttachments>
    {
        DTO.EmailAttachments emailattachments;
        public EmailAttachments(DTO.EmailAttachments dto )
        {
              emailattachments = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.EmailAttachments>(emailattachments);

        }

        public DTO.EmailAttachments DTO
        {
            get
            {
             return emailattachments;
            }
            set
            {
                emailattachments = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.emailattachments.Id; }
			set
			{
			    if (value == this.emailattachments.Id) return;
				this.emailattachments.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Email is required")]
       
                
                [MaxLength(255, ErrorMessage = "EmailId has a max length of 255 letters ")]
public string EmailId
		{ 
		    get { return this.emailattachments.EmailId; }
			set
			{
			    if (value == this.emailattachments.EmailId) return;
				this.emailattachments.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Attachment is required")]
       
public int AttachmentId
		{ 
		    get { return this.emailattachments.AttachmentId; }
			set
			{
			    if (value == this.emailattachments.AttachmentId) return;
				this.emailattachments.AttachmentId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AttachmentId");
			}
		}
     

       
       
public Nullable<int> FileTypeId
		{ 
		    get { return this.emailattachments.FileTypeId; }
			set
			{
			    if (value == this.emailattachments.FileTypeId) return;
				this.emailattachments.FileTypeId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileTypeId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DocumentSpecific is required")]
       
public bool DocumentSpecific
		{ 
		    get { return this.emailattachments.DocumentSpecific; }
			set
			{
			    if (value == this.emailattachments.DocumentSpecific) return;
				this.emailattachments.DocumentSpecific = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentSpecific");
			}
		}
     

       private Attachments _Attachments;
        public  Attachments Attachments
		{
		    get
               { 
                  if (this.emailattachments != null)
                   {
                       if (_Attachments != null)
                       {
                           if (this.emailattachments.Attachments !=
                               _Attachments.DTO)
                           {
                                if (this.emailattachments.Attachments  != null)
                               _Attachments = new Attachments(this.emailattachments.Attachments);
                           }
                       }
                       else
                       {
                             if (this.emailattachments.Attachments  != null)
                           _Attachments = new Attachments(this.emailattachments.Attachments);
                       }
                   }


             //       if (_Attachments != null) return _Attachments;
                       
             //       var i = new Attachments(){TrackingState = TrackingState.Added};
			//		//if (this.emailattachments.Attachments == null) Debugger.Break();
			//		if (this.emailattachments.Attachments != null)
            //        {
            //           i. = this.emailattachments.Attachments;
            //        }
            //        else
            //        {
            //            this.emailattachments.Attachments = i.;
             //       }
                           
            //        _Attachments = i;
                     
                    return _Attachments;
               }
			set
			{
			    if (value == _Attachments) return;
                _Attachments = value;
                if(value != null)
                     this.emailattachments.Attachments = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Attachments");
			}
		}
        

       private Emails _Emails;
        public  Emails Emails
		{
		    get
               { 
                  if (this.emailattachments != null)
                   {
                       if (_Emails != null)
                       {
                           if (this.emailattachments.Emails !=
                               _Emails.DTO)
                           {
                                if (this.emailattachments.Emails  != null)
                               _Emails = new Emails(this.emailattachments.Emails);
                           }
                       }
                       else
                       {
                             if (this.emailattachments.Emails  != null)
                           _Emails = new Emails(this.emailattachments.Emails);
                       }
                   }


             //       if (_Emails != null) return _Emails;
                       
             //       var i = new Emails(){TrackingState = TrackingState.Added};
			//		//if (this.emailattachments.Emails == null) Debugger.Break();
			//		if (this.emailattachments.Emails != null)
            //        {
            //           i. = this.emailattachments.Emails;
            //        }
            //        else
            //        {
            //            this.emailattachments.Emails = i.;
             //       }
                           
            //        _Emails = i;
                     
                    return _Emails;
               }
			set
			{
			    if (value == _Emails) return;
                _Emails = value;
                if(value != null)
                     this.emailattachments.Emails = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Emails");
			}
		}
        


        ChangeTrackingCollection<DTO.EmailAttachments> _changeTracker;    
        public ChangeTrackingCollection<DTO.EmailAttachments> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


