// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_ERRReport_Allocations: BaseEntity<TODO_ERRReport_Allocations>
    {
        DTO.TODO_ERRReport_Allocations todo_errreport_allocations;
        public TODO_ERRReport_Allocations(DTO.TODO_ERRReport_Allocations dto )
        {
              todo_errreport_allocations = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_ERRReport_Allocations>(todo_errreport_allocations);

        }

        public DTO.TODO_ERRReport_Allocations DTO
        {
            get
            {
             return todo_errreport_allocations;
            }
            set
            {
                todo_errreport_allocations = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.todo_errreport_allocations.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_errreport_allocations.ApplicationSettingsId) return;
				this.todo_errreport_allocations.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "CNumber has a max length of 20 letters ")]
public string CNumber
		{ 
		    get { return this.todo_errreport_allocations.CNumber; }
			set
			{
			    if (value == this.todo_errreport_allocations.CNumber) return;
				this.todo_errreport_allocations.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
                
                [MaxLength(30, ErrorMessage = "Reference has a max length of 30 letters ")]
public string Reference
		{ 
		    get { return this.todo_errreport_allocations.Reference; }
			set
			{
			    if (value == this.todo_errreport_allocations.Reference) return;
				this.todo_errreport_allocations.Reference = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Reference");
			}
		}
     

       
       
public Nullable<System.DateTime> RegistrationDate
		{ 
		    get { return this.todo_errreport_allocations.RegistrationDate; }
			set
			{
			    if (value == this.todo_errreport_allocations.RegistrationDate) return;
				this.todo_errreport_allocations.RegistrationDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       
       
                
                [MaxLength(40, ErrorMessage = "DocumentType has a max length of 40 letters ")]
public string DocumentType
		{ 
		    get { return this.todo_errreport_allocations.DocumentType; }
			set
			{
			    if (value == this.todo_errreport_allocations.DocumentType) return;
				this.todo_errreport_allocations.DocumentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentType");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LineNumber
		{ 
		    get { return this.todo_errreport_allocations.LineNumber; }
			set
			{
			    if (value == this.todo_errreport_allocations.LineNumber) return;
				this.todo_errreport_allocations.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "ItemNumber has a max length of 50 letters ")]
public string ItemNumber
		{ 
		    get { return this.todo_errreport_allocations.ItemNumber; }
			set
			{
			    if (value == this.todo_errreport_allocations.ItemNumber) return;
				this.todo_errreport_allocations.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Description has a max length of 255 letters ")]
public string Description
		{ 
		    get { return this.todo_errreport_allocations.Description; }
			set
			{
			    if (value == this.todo_errreport_allocations.Description) return;
				this.todo_errreport_allocations.Description = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Description");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.todo_errreport_allocations.InvoiceNo; }
			set
			{
			    if (value == this.todo_errreport_allocations.InvoiceNo) return;
				this.todo_errreport_allocations.InvoiceNo = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       
       
public Nullable<System.DateTime> InvoiceDate
		{ 
		    get { return this.todo_errreport_allocations.InvoiceDate; }
			set
			{
			    if (value == this.todo_errreport_allocations.InvoiceDate) return;
				this.todo_errreport_allocations.InvoiceDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Error is required")]
       
                
                [MaxLength(30, ErrorMessage = "Error has a max length of 30 letters ")]
public string Error
		{ 
		    get { return this.todo_errreport_allocations.Error; }
			set
			{
			    if (value == this.todo_errreport_allocations.Error) return;
				this.todo_errreport_allocations.Error = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Error");
			}
		}
     

       
       
                
                [MaxLength(128, ErrorMessage = "Info has a max length of 128 letters ")]
public string Info
		{ 
		    get { return this.todo_errreport_allocations.Info; }
			set
			{
			    if (value == this.todo_errreport_allocations.Info) return;
				this.todo_errreport_allocations.Info = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Info");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_ERRReport_Allocations> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_ERRReport_Allocations> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


