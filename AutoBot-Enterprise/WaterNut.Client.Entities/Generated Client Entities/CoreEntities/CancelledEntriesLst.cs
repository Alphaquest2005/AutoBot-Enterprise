// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class CancelledEntriesLst: BaseEntity<CancelledEntriesLst>
    {
        DTO.CancelledEntriesLst cancelledentrieslst;
        public CancelledEntriesLst(DTO.CancelledEntriesLst dto )
        {
              cancelledentrieslst = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.CancelledEntriesLst>(cancelledentrieslst);

        }

        public DTO.CancelledEntriesLst DTO
        {
            get
            {
             return cancelledentrieslst;
            }
            set
            {
                cancelledentrieslst = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.cancelledentrieslst.Id; }
			set
			{
			    if (value == this.cancelledentrieslst.Id) return;
				this.cancelledentrieslst.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Office is required")]
       
                
                [MaxLength(50, ErrorMessage = "Office has a max length of 50 letters ")]
public string Office
		{ 
		    get { return this.cancelledentrieslst.Office; }
			set
			{
			    if (value == this.cancelledentrieslst.Office) return;
				this.cancelledentrieslst.Office = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Office");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegistrationNumber is required")]
       
                
                [MaxLength(8, ErrorMessage = "RegistrationNumber has a max length of 8 letters ")]
public string RegistrationNumber
		{ 
		    get { return this.cancelledentrieslst.RegistrationNumber; }
			set
			{
			    if (value == this.cancelledentrieslst.RegistrationNumber) return;
				this.cancelledentrieslst.RegistrationNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegistrationDate is required")]
       
                
                [MaxLength(50, ErrorMessage = "RegistrationDate has a max length of 50 letters ")]
public string RegistrationDate
		{ 
		    get { return this.cancelledentrieslst.RegistrationDate; }
			set
			{
			    if (value == this.cancelledentrieslst.RegistrationDate) return;
				this.cancelledentrieslst.RegistrationDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.cancelledentrieslst.ApplicationSettingsId; }
			set
			{
			    if (value == this.cancelledentrieslst.ApplicationSettingsId) return;
				this.cancelledentrieslst.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     


        ChangeTrackingCollection<DTO.CancelledEntriesLst> _changeTracker;    
        public ChangeTrackingCollection<DTO.CancelledEntriesLst> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


