<#+
// <copyright file="Template1.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class EntityGridListViewCSTPL : CSharpTemplate
{
        public string contextName;
        public string projectName;
        public EntityType  mainEntity;
        public string mainEntitySet;
        public EntityContainer container;
        public EntityContainer COREcontainer;
        public MetadataTools ef;
        public CodeGenerationTools code;
        public EntityFrameworkTemplateFileManager fileManager;
		

	public override string TransformText()
        {
            //base.TransformText();
#>
using System;
using <#=contextName#>;
using <#=projectName#>.<#=contextName#>.ViewModels;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using <#=projectName#>.Client.Entities;
using <#=contextName#>.Client.Entities;

namespace <#=projectName#>.<#=contextName#>.Views
{
	/// <summary>
	/// Interaction logic for <#=mainEntity.Name#>.xaml
	/// </summary>
	public partial class <#=mainEntity.Name#>List_AutoGen : UserControl
	{
		public <#=mainEntity.Name#>List_AutoGen()
		{
            try
            {
			    this.InitializeComponent();
			    im = this.FindResource("<#=mainEntity.Name#>ListModelDataSource") as <#=mainEntity.Name#>ViewModel;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message + ex.StackTrace);
            }
		}
        <#=mainEntity.Name#>ViewModel im;
        private void SetCurrentItem(object sender, MouseEventArgs e)
        {
<#+
             if(mainEntity.MetadataProperties.Where(z => z.Name.Contains("ViewTypeProperty") && z.Value.ToString().Contains("EntityView")).ToList().Any() == false)
            { 
 #>
            <#= mainEntity.Name#>Grd.SelectedItem = (sender as FrameworkElement).DataContext;
   <#+      }
            else
            {
#>
                im.Current<#= mainEntity.Name#> = ((FrameworkElement)sender).DataContext as <#= mainEntity.Name#>;
<#+
            }
 #>    
        }
	}
}
		
		<#+
            return this.GenerationEnvironment.ToString();
        }
	}	
#>