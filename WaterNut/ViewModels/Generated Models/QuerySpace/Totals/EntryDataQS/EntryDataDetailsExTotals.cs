// <autogenerated>
//   This file was generated by T4 code generator AllViewModels.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using EntryDataQS.Client.Repositories;

namespace WaterNut.QuerySpace.EntryDataQS.ViewModels
{
    public partial class EntryDataDetailsExViewModel_AutoGen
    {
    
       #region Totals

        partial void OnTotals()
        {
            RegisterToReceiveMessages<string>(MessageToken.EntryDataDetailsExesFilterExpressionChanged,
                                                OnEntryDataDetailsExesFilterExpressionChangetals);
            RegisterToReceiveMessages(MessageToken.SelectedEntryDataDetailsExesChanged,
                                                OnSelectedEntryDataDetailsExesChangetals);
        }

        private void OnSelectedEntryDataDetailsExesChangetals(object sender, SimpleMvvmToolkit.NotificationEventArgs e)
        {
            SetSelectetal();
        }
        private decimal _TotalTotal = 0;
        public decimal TotalTotal 
        {
            get { return _TotalTotal ; }
            set
            {
                _TotalTotal = value;
                NotifyPropertyChanged(x => x.TotalTotal );
            }
        }

		private decimal _SelectedTotal = 0;
        public decimal SelectedTotal 
        {
            get { return _SelectedTotal ; }
            set
            {
                _SelectedTotal = value;
                NotifyPropertyChanged(x => x.SelectedTotal );
            }
        }
        
         

        private async void OnEntryDataDetailsExesFilterExpressionChangetals(object sender, SimpleMvvmToolkit.NotificationEventArgs<string> e)
        {
            using (var ctx = new EntryDataDetailsExRepository())
            {
                TotalTotal = await ctx.SumNav(e.Data, vloader.NavigationExpression, "Total").ConfigureAwait(false);
  
                
            }
        }        

        private void SetSelectetal()
        {
            var lst = SelectedEntryDataDetailsExes.Where(x => x != null).ToList();
            if (!lst.Any())
            {
               SelectedTotal = 0;
  
            }
            else
            {
               SelectedTotal = Convert.ToDecimal(lst.Sum(x => x.Total));
  
            }
        }      

         #endregion
 
    }
   
}
		