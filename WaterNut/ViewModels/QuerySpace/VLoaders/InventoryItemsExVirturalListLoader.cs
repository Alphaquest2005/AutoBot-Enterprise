// <autogenerated>
//   This file was generated by T4 code generator AllQuerySpaceViewModels.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Core.Common.UI.DataVirtualization;

using SimpleMvvmToolkit;
using InventoryQS.Client.Repositories;
using InventoryQS.Client.Entities;



namespace WaterNut.QuerySpace.InventoryQS.ViewModels
{
    public partial class InventoryItemsExVirturalListLoader : IVirtualListLoader<InventoryItemsEx>
    {

        //public void SetNavigationExpression (string navigationProperty, string expression )
        //{
        //    try
        //    {
        //        navExp = new Dictionary<string, string>();
        //        navExp.Add(navigationProperty, expression);
        //        if (string.IsNullOrEmpty(FilterExpression)) FilterExpression = "All";
        //    }
        //    catch (Exception)
        //    {
        //        throw;
        //    }
            
        //}

        //public void ClearNavigationExpression()
        //{
        //    navExp = new Dictionary<string, string>();
        //    FilterExpression = null;
        //}

        //private Dictionary<string, string> navExp = new Dictionary<string, string>(); 

        //public IList<InventoryItemsEx> LoadRange(int startIndex, int count, SortDescriptionCollection sortDescriptions, out int overallCount)
        //{
        //    using (var ctx = new InventoryItemsExRepository())
        //    {
        //        var r = ctx.LoadRange(startIndex, count, FilterExpression, navExp, out overallCount);
        //        return r.ToList();
        //    }

        //}
    }
}
		
		
