//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_external_freight", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_item_external_freight", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_item_external_freight), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_internal_freight", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_item_internal_freight", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_item_internal_freight), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Item_Invoice", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_Item_Invoice", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Item_Invoice), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_other_cost", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_item_other_cost", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_item_other_cost), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Market_valuer", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_Market_valuer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Market_valuer), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Weight_itm", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_Weight_itm", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Weight_itm), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Country_xcuda_General_information", "xcuda_General_information", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_General_information), "xcuda_Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Country), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Destination_xcuda_Country", "xcuda_Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Country), "xcuda_Destination", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Destination), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Export_xcuda_Country", "xcuda_Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Country), "xcuda_Export", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Export), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Traders_Consignee", "xcuda_Traders", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Traders), "xcuda_Consignee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Consignee), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Traders_Exporter", "xcuda_Traders", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Traders), "xcuda_Exporter", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Exporter), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Traders_Financial", "xcuda_Traders", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Traders), "xcuda_Traders_Financial", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Traders_Financial), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_AsycudaDocumentSet_Customs_Procedure", "Customs_Procedure", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.Customs_Procedure), "AsycudaDocumentSet", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.AsycudaDocumentSet), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_AsycudaDocumentSet_Document_Type", "Document_Type", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.Document_Type), "AsycudaDocumentSet", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.AsycudaDocumentSet), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "AsycudaDocumentSet", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.AsycudaDocumentSet), "xcuda_ASYCUDA_ExtendedProperties", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_ASYCUDA_ExtendedProperties), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Customs_Procedure_Document_Type", "Document_Type", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.Document_Type), "Customs_Procedure", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.Customs_Procedure), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "Customs_Procedure", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.Customs_Procedure), "xcuda_ASYCUDA_ExtendedProperties", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_ASYCUDA_ExtendedProperties), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "Document_Type", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.Document_Type), "xcuda_ASYCUDA_ExtendedProperties", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_ASYCUDA_ExtendedProperties), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "ExportTemplate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.ExportTemplate), "xcuda_ASYCUDA_ExtendedProperties", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_ASYCUDA_ExtendedProperties), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_TariffCodes_TariffCategory", "TariffCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.TariffCategory), "TariffCodes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.TariffCodes), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Identification_Assessment", "xcuda_Identification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Identification), "xcuda_Assessment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Assessment), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Assessment_notice", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Assessment_notice", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Assessment_notice), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Container", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Container", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Container), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Declarant", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Declarant", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Declarant), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Export_release", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Export_release", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Export_release), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Financial", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Financial", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Financial), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_General_information", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_General_information", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_General_information), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Global_taxes", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Global_taxes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Global_taxes), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Identification", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Identification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Identification), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Item", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Item), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_PreviousItem", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_PreviousItem", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_PreviousItem), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Property", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Property", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Property), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Suppliers_documents", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Suppliers_documents", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Suppliers_documents), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Transit", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Transit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Transit), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Transport", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Transport), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Valuation", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Valuation), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Warehouse", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Warehouse", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Warehouse), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_ASYCUDA_ExtendedProperties", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_ASYCUDA_ExtendedProperties), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_ASYCUDA", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_ASYCUDA), "xcuda_Traders", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Traders), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Attached_documents", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Attached_documents", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Attached_documents), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Means_of_transport_Border_information", "xcuda_Means_of_transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Means_of_transport), "xcuda_Border_information", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Border_information), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transport_Border_office", "xcuda_Transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transport), "xcuda_Border_office", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Border_office), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transport_Delivery_terms", "xcuda_Transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transport), "xcuda_Delivery_terms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Delivery_terms), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Means_of_transport_Departure_arrival_information", "xcuda_Means_of_transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Means_of_transport), "xcuda_Departure_arrival_information", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Departure_arrival_information), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Financial), "xcuda_Financial_Amounts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Financial_Amounts), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Financial), "xcuda_Financial_Guarantee", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Financial_Guarantee), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Forms_xcuda_Property", "xcuda_Property", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Property), "xcuda_Forms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Forms), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Goods_description", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Goods_description", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Goods_description), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Gs_deduction", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Gs_deduction), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Gs_external_freight", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Gs_external_freight), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Gs_insurance", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Gs_insurance), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Gs_internal_freight", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Gs_internal_freight), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Gs_Invoice", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Gs_Invoice), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Gs_other_cost", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Gs_other_cost), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Tarification_HScode", "xcuda_Tarification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Tarification), "xcuda_HScode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_HScode), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Identification_Office_segment", "xcuda_Identification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Identification), "xcuda_Office_segment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Office_segment), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Identification_receipt", "xcuda_Identification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Identification), "xcuda_receipt", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_receipt), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Identification_Registration", "xcuda_Identification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Identification), "xcuda_Registration", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Registration), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Identification_Type", "xcuda_Identification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Identification), "xcuda_Type", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Type), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Packages", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Packages", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Packages), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Previous_doc", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Previous_doc", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Previous_doc), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Suppliers_link", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Suppliers_link", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Suppliers_link), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Tarification", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Tarification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Tarification), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Taxation", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Taxation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Taxation), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Item_Valuation_item", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Valuation_item), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_PreviousItem_xcuda_Item", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Item), "xcuda_PreviousItem", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_PreviousItem), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_deduction", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_item_deduction", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_item_deduction), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_insurance", "xcuda_Valuation_item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation_item), "xcuda_item_insurance", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_item_insurance), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transport_Means_of_transport", "xcuda_Transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transport), "xcuda_Means_of_transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Means_of_transport), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Property_Nbers", "xcuda_Property", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Property), "xcuda_Nbers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Nbers), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transport_Place_of_loading", "xcuda_Transport", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transport), "xcuda_Place_of_loading", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Place_of_loading), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transit_Principal", "xcuda_Transit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transit), "xcuda_Principal", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Principal), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transit_Seals", "xcuda_Transit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transit), "xcuda_Seals", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Seals), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Transit_Signature", "xcuda_Transit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Transit), "xcuda_Signature", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Signature), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Tarification_Supplementary_unit", "xcuda_Tarification", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Tarification), "xcuda_Supplementary_unit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Supplementary_unit), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Taxation_Taxation_line", "xcuda_Taxation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Taxation), "xcuda_Taxation_line", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Taxation_line), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Total_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Total", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Total), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Transit), "xcuda_Transit_Destination", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Transit_Destination), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Weight_xcuda_Valuation", "xcuda_Valuation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Valuation), "xcuda_Weight", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Weight), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_EntryPreviousItems_xcuda_Item", "xcuda_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Item), "EntryPreviousItems", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.EntryPreviousItems), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.TariffCategory), "TariffCategoryCodeSuppUnit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.TariffCategoryCodeSuppUnit), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffSupUnitLkps", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.TariffSupUnitLkps), "TariffCategoryCodeSuppUnit", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.TariffCategoryCodeSuppUnit), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "TariffCodesInventoryItemsEx", "TariffCodes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.TariffCodes), "InventoryItemsEx", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.InventoryItemsEx), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Attachments_Attachments", "Attachments", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.Attachments), "xcuda_Attachments", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Attachments), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attached_documents", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_Attached_documents), "xcuda_Attachments", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Attachments), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_HScode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.xcuda_HScode), "xcuda_Inventory_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.xcuda_Inventory_Item), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_Container_AsycudaDocumentSet", "AsycudaDocumentSet", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.AsycudaDocumentSet), "Container", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.Container), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "FK_InventoryItems_TariffCodes", "TariffCodes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WaterNut.DataLayer.TariffCodes), "InventoryItems", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.InventoryItems), true)]
[assembly: EdmRelationshipAttribute("WaterNutDB.DataLayer", "InventoryItemsxcuda_Inventory_Item", "InventoryItems", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(WaterNut.DataLayer.InventoryItems), "xcuda_Inventory_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WaterNut.DataLayer.xcuda_Inventory_Item), true)]

#endregion

namespace WaterNut.DataLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WaterNutDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WaterNutDBEntities object using the connection string found in the 'WaterNutDBEntities' section of the application configuration file.
        /// </summary>
        public WaterNutDBEntities() : base("name=WaterNutDBEntities", "WaterNutDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WaterNutDBEntities object.
        /// </summary>
        public WaterNutDBEntities(string connectionString) : base(connectionString, "WaterNutDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WaterNutDBEntities object.
        /// </summary>
        public WaterNutDBEntities(EntityConnection connection) : base(connection, "WaterNutDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_item_external_freight> xcuda_item_external_freight
        {
            get
            {
                if ((_xcuda_item_external_freight == null))
                {
                    _xcuda_item_external_freight = base.CreateObjectSet<xcuda_item_external_freight>("xcuda_item_external_freight");
                }
                return _xcuda_item_external_freight;
            }
        }
        private ObjectSet<xcuda_item_external_freight> _xcuda_item_external_freight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_item_internal_freight> xcuda_item_internal_freight
        {
            get
            {
                if ((_xcuda_item_internal_freight == null))
                {
                    _xcuda_item_internal_freight = base.CreateObjectSet<xcuda_item_internal_freight>("xcuda_item_internal_freight");
                }
                return _xcuda_item_internal_freight;
            }
        }
        private ObjectSet<xcuda_item_internal_freight> _xcuda_item_internal_freight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Item_Invoice> xcuda_Item_Invoice
        {
            get
            {
                if ((_xcuda_Item_Invoice == null))
                {
                    _xcuda_Item_Invoice = base.CreateObjectSet<xcuda_Item_Invoice>("xcuda_Item_Invoice");
                }
                return _xcuda_Item_Invoice;
            }
        }
        private ObjectSet<xcuda_Item_Invoice> _xcuda_Item_Invoice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_item_other_cost> xcuda_item_other_cost
        {
            get
            {
                if ((_xcuda_item_other_cost == null))
                {
                    _xcuda_item_other_cost = base.CreateObjectSet<xcuda_item_other_cost>("xcuda_item_other_cost");
                }
                return _xcuda_item_other_cost;
            }
        }
        private ObjectSet<xcuda_item_other_cost> _xcuda_item_other_cost;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Market_valuer> xcuda_Market_valuer
        {
            get
            {
                if ((_xcuda_Market_valuer == null))
                {
                    _xcuda_Market_valuer = base.CreateObjectSet<xcuda_Market_valuer>("xcuda_Market_valuer");
                }
                return _xcuda_Market_valuer;
            }
        }
        private ObjectSet<xcuda_Market_valuer> _xcuda_Market_valuer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Valuation_item> xcuda_Valuation_item
        {
            get
            {
                if ((_xcuda_Valuation_item == null))
                {
                    _xcuda_Valuation_item = base.CreateObjectSet<xcuda_Valuation_item>("xcuda_Valuation_item");
                }
                return _xcuda_Valuation_item;
            }
        }
        private ObjectSet<xcuda_Valuation_item> _xcuda_Valuation_item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Weight_itm> xcuda_Weight_itm
        {
            get
            {
                if ((_xcuda_Weight_itm == null))
                {
                    _xcuda_Weight_itm = base.CreateObjectSet<xcuda_Weight_itm>("xcuda_Weight_itm");
                }
                return _xcuda_Weight_itm;
            }
        }
        private ObjectSet<xcuda_Weight_itm> _xcuda_Weight_itm;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Gs_deduction> xcuda_Gs_deduction
        {
            get
            {
                if ((_xcuda_Gs_deduction == null))
                {
                    _xcuda_Gs_deduction = base.CreateObjectSet<xcuda_Gs_deduction>("xcuda_Gs_deduction");
                }
                return _xcuda_Gs_deduction;
            }
        }
        private ObjectSet<xcuda_Gs_deduction> _xcuda_Gs_deduction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Gs_external_freight> xcuda_Gs_external_freight
        {
            get
            {
                if ((_xcuda_Gs_external_freight == null))
                {
                    _xcuda_Gs_external_freight = base.CreateObjectSet<xcuda_Gs_external_freight>("xcuda_Gs_external_freight");
                }
                return _xcuda_Gs_external_freight;
            }
        }
        private ObjectSet<xcuda_Gs_external_freight> _xcuda_Gs_external_freight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Gs_insurance> xcuda_Gs_insurance
        {
            get
            {
                if ((_xcuda_Gs_insurance == null))
                {
                    _xcuda_Gs_insurance = base.CreateObjectSet<xcuda_Gs_insurance>("xcuda_Gs_insurance");
                }
                return _xcuda_Gs_insurance;
            }
        }
        private ObjectSet<xcuda_Gs_insurance> _xcuda_Gs_insurance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Gs_internal_freight> xcuda_Gs_internal_freight
        {
            get
            {
                if ((_xcuda_Gs_internal_freight == null))
                {
                    _xcuda_Gs_internal_freight = base.CreateObjectSet<xcuda_Gs_internal_freight>("xcuda_Gs_internal_freight");
                }
                return _xcuda_Gs_internal_freight;
            }
        }
        private ObjectSet<xcuda_Gs_internal_freight> _xcuda_Gs_internal_freight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Gs_other_cost> xcuda_Gs_other_cost
        {
            get
            {
                if ((_xcuda_Gs_other_cost == null))
                {
                    _xcuda_Gs_other_cost = base.CreateObjectSet<xcuda_Gs_other_cost>("xcuda_Gs_other_cost");
                }
                return _xcuda_Gs_other_cost;
            }
        }
        private ObjectSet<xcuda_Gs_other_cost> _xcuda_Gs_other_cost;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Total> xcuda_Total
        {
            get
            {
                if ((_xcuda_Total == null))
                {
                    _xcuda_Total = base.CreateObjectSet<xcuda_Total>("xcuda_Total");
                }
                return _xcuda_Total;
            }
        }
        private ObjectSet<xcuda_Total> _xcuda_Total;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Weight> xcuda_Weight
        {
            get
            {
                if ((_xcuda_Weight == null))
                {
                    _xcuda_Weight = base.CreateObjectSet<xcuda_Weight>("xcuda_Weight");
                }
                return _xcuda_Weight;
            }
        }
        private ObjectSet<xcuda_Weight> _xcuda_Weight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Country> xcuda_Country
        {
            get
            {
                if ((_xcuda_Country == null))
                {
                    _xcuda_Country = base.CreateObjectSet<xcuda_Country>("xcuda_Country");
                }
                return _xcuda_Country;
            }
        }
        private ObjectSet<xcuda_Country> _xcuda_Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Destination> xcuda_Destination
        {
            get
            {
                if ((_xcuda_Destination == null))
                {
                    _xcuda_Destination = base.CreateObjectSet<xcuda_Destination>("xcuda_Destination");
                }
                return _xcuda_Destination;
            }
        }
        private ObjectSet<xcuda_Destination> _xcuda_Destination;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Export> xcuda_Export
        {
            get
            {
                if ((_xcuda_Export == null))
                {
                    _xcuda_Export = base.CreateObjectSet<xcuda_Export>("xcuda_Export");
                }
                return _xcuda_Export;
            }
        }
        private ObjectSet<xcuda_Export> _xcuda_Export;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_General_information> xcuda_General_information
        {
            get
            {
                if ((_xcuda_General_information == null))
                {
                    _xcuda_General_information = base.CreateObjectSet<xcuda_General_information>("xcuda_General_information");
                }
                return _xcuda_General_information;
            }
        }
        private ObjectSet<xcuda_General_information> _xcuda_General_information;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Consignee> xcuda_Consignee
        {
            get
            {
                if ((_xcuda_Consignee == null))
                {
                    _xcuda_Consignee = base.CreateObjectSet<xcuda_Consignee>("xcuda_Consignee");
                }
                return _xcuda_Consignee;
            }
        }
        private ObjectSet<xcuda_Consignee> _xcuda_Consignee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Exporter> xcuda_Exporter
        {
            get
            {
                if ((_xcuda_Exporter == null))
                {
                    _xcuda_Exporter = base.CreateObjectSet<xcuda_Exporter>("xcuda_Exporter");
                }
                return _xcuda_Exporter;
            }
        }
        private ObjectSet<xcuda_Exporter> _xcuda_Exporter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Traders> xcuda_Traders
        {
            get
            {
                if ((_xcuda_Traders == null))
                {
                    _xcuda_Traders = base.CreateObjectSet<xcuda_Traders>("xcuda_Traders");
                }
                return _xcuda_Traders;
            }
        }
        private ObjectSet<xcuda_Traders> _xcuda_Traders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Traders_Financial> xcuda_Traders_Financial
        {
            get
            {
                if ((_xcuda_Traders_Financial == null))
                {
                    _xcuda_Traders_Financial = base.CreateObjectSet<xcuda_Traders_Financial>("xcuda_Traders_Financial");
                }
                return _xcuda_Traders_Financial;
            }
        }
        private ObjectSet<xcuda_Traders_Financial> _xcuda_Traders_Financial;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Forms> xcuda_Forms
        {
            get
            {
                if ((_xcuda_Forms == null))
                {
                    _xcuda_Forms = base.CreateObjectSet<xcuda_Forms>("xcuda_Forms");
                }
                return _xcuda_Forms;
            }
        }
        private ObjectSet<xcuda_Forms> _xcuda_Forms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsycudaDocumentSet> AsycudaDocumentSet
        {
            get
            {
                if ((_AsycudaDocumentSet == null))
                {
                    _AsycudaDocumentSet = base.CreateObjectSet<AsycudaDocumentSet>("AsycudaDocumentSet");
                }
                return _AsycudaDocumentSet;
            }
        }
        private ObjectSet<AsycudaDocumentSet> _AsycudaDocumentSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customs_Procedure> Customs_Procedure
        {
            get
            {
                if ((_Customs_Procedure == null))
                {
                    _Customs_Procedure = base.CreateObjectSet<Customs_Procedure>("Customs_Procedure");
                }
                return _Customs_Procedure;
            }
        }
        private ObjectSet<Customs_Procedure> _Customs_Procedure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document_Type> Document_Type
        {
            get
            {
                if ((_Document_Type == null))
                {
                    _Document_Type = base.CreateObjectSet<Document_Type>("Document_Type");
                }
                return _Document_Type;
            }
        }
        private ObjectSet<Document_Type> _Document_Type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExportTemplate> ExportTemplate
        {
            get
            {
                if ((_ExportTemplate == null))
                {
                    _ExportTemplate = base.CreateObjectSet<ExportTemplate>("ExportTemplate");
                }
                return _ExportTemplate;
            }
        }
        private ObjectSet<ExportTemplate> _ExportTemplate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TariffCategory> TariffCategory
        {
            get
            {
                if ((_TariffCategory == null))
                {
                    _TariffCategory = base.CreateObjectSet<TariffCategory>("TariffCategory");
                }
                return _TariffCategory;
            }
        }
        private ObjectSet<TariffCategory> _TariffCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TariffCodes> TariffCodes
        {
            get
            {
                if ((_TariffCodes == null))
                {
                    _TariffCodes = base.CreateObjectSet<TariffCodes>("TariffCodes");
                }
                return _TariffCodes;
            }
        }
        private ObjectSet<TariffCodes> _TariffCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TariffSupUnitLkps> TariffSupUnitLkps
        {
            get
            {
                if ((_TariffSupUnitLkps == null))
                {
                    _TariffSupUnitLkps = base.CreateObjectSet<TariffSupUnitLkps>("TariffSupUnitLkps");
                }
                return _TariffSupUnitLkps;
            }
        }
        private ObjectSet<TariffSupUnitLkps> _TariffSupUnitLkps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Assessment> xcuda_Assessment
        {
            get
            {
                if ((_xcuda_Assessment == null))
                {
                    _xcuda_Assessment = base.CreateObjectSet<xcuda_Assessment>("xcuda_Assessment");
                }
                return _xcuda_Assessment;
            }
        }
        private ObjectSet<xcuda_Assessment> _xcuda_Assessment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Assessment_notice> xcuda_Assessment_notice
        {
            get
            {
                if ((_xcuda_Assessment_notice == null))
                {
                    _xcuda_Assessment_notice = base.CreateObjectSet<xcuda_Assessment_notice>("xcuda_Assessment_notice");
                }
                return _xcuda_Assessment_notice;
            }
        }
        private ObjectSet<xcuda_Assessment_notice> _xcuda_Assessment_notice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_ASYCUDA> xcuda_ASYCUDA
        {
            get
            {
                if ((_xcuda_ASYCUDA == null))
                {
                    _xcuda_ASYCUDA = base.CreateObjectSet<xcuda_ASYCUDA>("xcuda_ASYCUDA");
                }
                return _xcuda_ASYCUDA;
            }
        }
        private ObjectSet<xcuda_ASYCUDA> _xcuda_ASYCUDA;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedProperties
        {
            get
            {
                if ((_xcuda_ASYCUDA_ExtendedProperties == null))
                {
                    _xcuda_ASYCUDA_ExtendedProperties = base.CreateObjectSet<xcuda_ASYCUDA_ExtendedProperties>("xcuda_ASYCUDA_ExtendedProperties");
                }
                return _xcuda_ASYCUDA_ExtendedProperties;
            }
        }
        private ObjectSet<xcuda_ASYCUDA_ExtendedProperties> _xcuda_ASYCUDA_ExtendedProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Attached_documents> xcuda_Attached_documents
        {
            get
            {
                if ((_xcuda_Attached_documents == null))
                {
                    _xcuda_Attached_documents = base.CreateObjectSet<xcuda_Attached_documents>("xcuda_Attached_documents");
                }
                return _xcuda_Attached_documents;
            }
        }
        private ObjectSet<xcuda_Attached_documents> _xcuda_Attached_documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Border_information> xcuda_Border_information
        {
            get
            {
                if ((_xcuda_Border_information == null))
                {
                    _xcuda_Border_information = base.CreateObjectSet<xcuda_Border_information>("xcuda_Border_information");
                }
                return _xcuda_Border_information;
            }
        }
        private ObjectSet<xcuda_Border_information> _xcuda_Border_information;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Border_office> xcuda_Border_office
        {
            get
            {
                if ((_xcuda_Border_office == null))
                {
                    _xcuda_Border_office = base.CreateObjectSet<xcuda_Border_office>("xcuda_Border_office");
                }
                return _xcuda_Border_office;
            }
        }
        private ObjectSet<xcuda_Border_office> _xcuda_Border_office;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Container> xcuda_Container
        {
            get
            {
                if ((_xcuda_Container == null))
                {
                    _xcuda_Container = base.CreateObjectSet<xcuda_Container>("xcuda_Container");
                }
                return _xcuda_Container;
            }
        }
        private ObjectSet<xcuda_Container> _xcuda_Container;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Declarant> xcuda_Declarant
        {
            get
            {
                if ((_xcuda_Declarant == null))
                {
                    _xcuda_Declarant = base.CreateObjectSet<xcuda_Declarant>("xcuda_Declarant");
                }
                return _xcuda_Declarant;
            }
        }
        private ObjectSet<xcuda_Declarant> _xcuda_Declarant;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Delivery_terms> xcuda_Delivery_terms
        {
            get
            {
                if ((_xcuda_Delivery_terms == null))
                {
                    _xcuda_Delivery_terms = base.CreateObjectSet<xcuda_Delivery_terms>("xcuda_Delivery_terms");
                }
                return _xcuda_Delivery_terms;
            }
        }
        private ObjectSet<xcuda_Delivery_terms> _xcuda_Delivery_terms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Departure_arrival_information> xcuda_Departure_arrival_information
        {
            get
            {
                if ((_xcuda_Departure_arrival_information == null))
                {
                    _xcuda_Departure_arrival_information = base.CreateObjectSet<xcuda_Departure_arrival_information>("xcuda_Departure_arrival_information");
                }
                return _xcuda_Departure_arrival_information;
            }
        }
        private ObjectSet<xcuda_Departure_arrival_information> _xcuda_Departure_arrival_information;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Export_release> xcuda_Export_release
        {
            get
            {
                if ((_xcuda_Export_release == null))
                {
                    _xcuda_Export_release = base.CreateObjectSet<xcuda_Export_release>("xcuda_Export_release");
                }
                return _xcuda_Export_release;
            }
        }
        private ObjectSet<xcuda_Export_release> _xcuda_Export_release;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Financial> xcuda_Financial
        {
            get
            {
                if ((_xcuda_Financial == null))
                {
                    _xcuda_Financial = base.CreateObjectSet<xcuda_Financial>("xcuda_Financial");
                }
                return _xcuda_Financial;
            }
        }
        private ObjectSet<xcuda_Financial> _xcuda_Financial;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Financial_Amounts> xcuda_Financial_Amounts
        {
            get
            {
                if ((_xcuda_Financial_Amounts == null))
                {
                    _xcuda_Financial_Amounts = base.CreateObjectSet<xcuda_Financial_Amounts>("xcuda_Financial_Amounts");
                }
                return _xcuda_Financial_Amounts;
            }
        }
        private ObjectSet<xcuda_Financial_Amounts> _xcuda_Financial_Amounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Financial_Guarantee> xcuda_Financial_Guarantee
        {
            get
            {
                if ((_xcuda_Financial_Guarantee == null))
                {
                    _xcuda_Financial_Guarantee = base.CreateObjectSet<xcuda_Financial_Guarantee>("xcuda_Financial_Guarantee");
                }
                return _xcuda_Financial_Guarantee;
            }
        }
        private ObjectSet<xcuda_Financial_Guarantee> _xcuda_Financial_Guarantee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Global_taxes> xcuda_Global_taxes
        {
            get
            {
                if ((_xcuda_Global_taxes == null))
                {
                    _xcuda_Global_taxes = base.CreateObjectSet<xcuda_Global_taxes>("xcuda_Global_taxes");
                }
                return _xcuda_Global_taxes;
            }
        }
        private ObjectSet<xcuda_Global_taxes> _xcuda_Global_taxes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Goods_description> xcuda_Goods_description
        {
            get
            {
                if ((_xcuda_Goods_description == null))
                {
                    _xcuda_Goods_description = base.CreateObjectSet<xcuda_Goods_description>("xcuda_Goods_description");
                }
                return _xcuda_Goods_description;
            }
        }
        private ObjectSet<xcuda_Goods_description> _xcuda_Goods_description;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Gs_Invoice> xcuda_Gs_Invoice
        {
            get
            {
                if ((_xcuda_Gs_Invoice == null))
                {
                    _xcuda_Gs_Invoice = base.CreateObjectSet<xcuda_Gs_Invoice>("xcuda_Gs_Invoice");
                }
                return _xcuda_Gs_Invoice;
            }
        }
        private ObjectSet<xcuda_Gs_Invoice> _xcuda_Gs_Invoice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_HScode> xcuda_HScode
        {
            get
            {
                if ((_xcuda_HScode == null))
                {
                    _xcuda_HScode = base.CreateObjectSet<xcuda_HScode>("xcuda_HScode");
                }
                return _xcuda_HScode;
            }
        }
        private ObjectSet<xcuda_HScode> _xcuda_HScode;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Identification> xcuda_Identification
        {
            get
            {
                if ((_xcuda_Identification == null))
                {
                    _xcuda_Identification = base.CreateObjectSet<xcuda_Identification>("xcuda_Identification");
                }
                return _xcuda_Identification;
            }
        }
        private ObjectSet<xcuda_Identification> _xcuda_Identification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Item> xcuda_Item
        {
            get
            {
                if ((_xcuda_Item == null))
                {
                    _xcuda_Item = base.CreateObjectSet<xcuda_Item>("xcuda_Item");
                }
                return _xcuda_Item;
            }
        }
        private ObjectSet<xcuda_Item> _xcuda_Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_item_deduction> xcuda_item_deduction
        {
            get
            {
                if ((_xcuda_item_deduction == null))
                {
                    _xcuda_item_deduction = base.CreateObjectSet<xcuda_item_deduction>("xcuda_item_deduction");
                }
                return _xcuda_item_deduction;
            }
        }
        private ObjectSet<xcuda_item_deduction> _xcuda_item_deduction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_item_insurance> xcuda_item_insurance
        {
            get
            {
                if ((_xcuda_item_insurance == null))
                {
                    _xcuda_item_insurance = base.CreateObjectSet<xcuda_item_insurance>("xcuda_item_insurance");
                }
                return _xcuda_item_insurance;
            }
        }
        private ObjectSet<xcuda_item_insurance> _xcuda_item_insurance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Means_of_transport> xcuda_Means_of_transport
        {
            get
            {
                if ((_xcuda_Means_of_transport == null))
                {
                    _xcuda_Means_of_transport = base.CreateObjectSet<xcuda_Means_of_transport>("xcuda_Means_of_transport");
                }
                return _xcuda_Means_of_transport;
            }
        }
        private ObjectSet<xcuda_Means_of_transport> _xcuda_Means_of_transport;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Nbers> xcuda_Nbers
        {
            get
            {
                if ((_xcuda_Nbers == null))
                {
                    _xcuda_Nbers = base.CreateObjectSet<xcuda_Nbers>("xcuda_Nbers");
                }
                return _xcuda_Nbers;
            }
        }
        private ObjectSet<xcuda_Nbers> _xcuda_Nbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Office_segment> xcuda_Office_segment
        {
            get
            {
                if ((_xcuda_Office_segment == null))
                {
                    _xcuda_Office_segment = base.CreateObjectSet<xcuda_Office_segment>("xcuda_Office_segment");
                }
                return _xcuda_Office_segment;
            }
        }
        private ObjectSet<xcuda_Office_segment> _xcuda_Office_segment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Packages> xcuda_Packages
        {
            get
            {
                if ((_xcuda_Packages == null))
                {
                    _xcuda_Packages = base.CreateObjectSet<xcuda_Packages>("xcuda_Packages");
                }
                return _xcuda_Packages;
            }
        }
        private ObjectSet<xcuda_Packages> _xcuda_Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Place_of_loading> xcuda_Place_of_loading
        {
            get
            {
                if ((_xcuda_Place_of_loading == null))
                {
                    _xcuda_Place_of_loading = base.CreateObjectSet<xcuda_Place_of_loading>("xcuda_Place_of_loading");
                }
                return _xcuda_Place_of_loading;
            }
        }
        private ObjectSet<xcuda_Place_of_loading> _xcuda_Place_of_loading;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Previous_doc> xcuda_Previous_doc
        {
            get
            {
                if ((_xcuda_Previous_doc == null))
                {
                    _xcuda_Previous_doc = base.CreateObjectSet<xcuda_Previous_doc>("xcuda_Previous_doc");
                }
                return _xcuda_Previous_doc;
            }
        }
        private ObjectSet<xcuda_Previous_doc> _xcuda_Previous_doc;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_PreviousItem> xcuda_PreviousItem
        {
            get
            {
                if ((_xcuda_PreviousItem == null))
                {
                    _xcuda_PreviousItem = base.CreateObjectSet<xcuda_PreviousItem>("xcuda_PreviousItem");
                }
                return _xcuda_PreviousItem;
            }
        }
        private ObjectSet<xcuda_PreviousItem> _xcuda_PreviousItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Principal> xcuda_Principal
        {
            get
            {
                if ((_xcuda_Principal == null))
                {
                    _xcuda_Principal = base.CreateObjectSet<xcuda_Principal>("xcuda_Principal");
                }
                return _xcuda_Principal;
            }
        }
        private ObjectSet<xcuda_Principal> _xcuda_Principal;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Property> xcuda_Property
        {
            get
            {
                if ((_xcuda_Property == null))
                {
                    _xcuda_Property = base.CreateObjectSet<xcuda_Property>("xcuda_Property");
                }
                return _xcuda_Property;
            }
        }
        private ObjectSet<xcuda_Property> _xcuda_Property;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_receipt> xcuda_receipt
        {
            get
            {
                if ((_xcuda_receipt == null))
                {
                    _xcuda_receipt = base.CreateObjectSet<xcuda_receipt>("xcuda_receipt");
                }
                return _xcuda_receipt;
            }
        }
        private ObjectSet<xcuda_receipt> _xcuda_receipt;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Registration> xcuda_Registration
        {
            get
            {
                if ((_xcuda_Registration == null))
                {
                    _xcuda_Registration = base.CreateObjectSet<xcuda_Registration>("xcuda_Registration");
                }
                return _xcuda_Registration;
            }
        }
        private ObjectSet<xcuda_Registration> _xcuda_Registration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Seals> xcuda_Seals
        {
            get
            {
                if ((_xcuda_Seals == null))
                {
                    _xcuda_Seals = base.CreateObjectSet<xcuda_Seals>("xcuda_Seals");
                }
                return _xcuda_Seals;
            }
        }
        private ObjectSet<xcuda_Seals> _xcuda_Seals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Signature> xcuda_Signature
        {
            get
            {
                if ((_xcuda_Signature == null))
                {
                    _xcuda_Signature = base.CreateObjectSet<xcuda_Signature>("xcuda_Signature");
                }
                return _xcuda_Signature;
            }
        }
        private ObjectSet<xcuda_Signature> _xcuda_Signature;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Supplementary_unit> xcuda_Supplementary_unit
        {
            get
            {
                if ((_xcuda_Supplementary_unit == null))
                {
                    _xcuda_Supplementary_unit = base.CreateObjectSet<xcuda_Supplementary_unit>("xcuda_Supplementary_unit");
                }
                return _xcuda_Supplementary_unit;
            }
        }
        private ObjectSet<xcuda_Supplementary_unit> _xcuda_Supplementary_unit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Suppliers_documents> xcuda_Suppliers_documents
        {
            get
            {
                if ((_xcuda_Suppliers_documents == null))
                {
                    _xcuda_Suppliers_documents = base.CreateObjectSet<xcuda_Suppliers_documents>("xcuda_Suppliers_documents");
                }
                return _xcuda_Suppliers_documents;
            }
        }
        private ObjectSet<xcuda_Suppliers_documents> _xcuda_Suppliers_documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Suppliers_link> xcuda_Suppliers_link
        {
            get
            {
                if ((_xcuda_Suppliers_link == null))
                {
                    _xcuda_Suppliers_link = base.CreateObjectSet<xcuda_Suppliers_link>("xcuda_Suppliers_link");
                }
                return _xcuda_Suppliers_link;
            }
        }
        private ObjectSet<xcuda_Suppliers_link> _xcuda_Suppliers_link;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Tarification> xcuda_Tarification
        {
            get
            {
                if ((_xcuda_Tarification == null))
                {
                    _xcuda_Tarification = base.CreateObjectSet<xcuda_Tarification>("xcuda_Tarification");
                }
                return _xcuda_Tarification;
            }
        }
        private ObjectSet<xcuda_Tarification> _xcuda_Tarification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Taxation> xcuda_Taxation
        {
            get
            {
                if ((_xcuda_Taxation == null))
                {
                    _xcuda_Taxation = base.CreateObjectSet<xcuda_Taxation>("xcuda_Taxation");
                }
                return _xcuda_Taxation;
            }
        }
        private ObjectSet<xcuda_Taxation> _xcuda_Taxation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Taxation_line> xcuda_Taxation_line
        {
            get
            {
                if ((_xcuda_Taxation_line == null))
                {
                    _xcuda_Taxation_line = base.CreateObjectSet<xcuda_Taxation_line>("xcuda_Taxation_line");
                }
                return _xcuda_Taxation_line;
            }
        }
        private ObjectSet<xcuda_Taxation_line> _xcuda_Taxation_line;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Transit> xcuda_Transit
        {
            get
            {
                if ((_xcuda_Transit == null))
                {
                    _xcuda_Transit = base.CreateObjectSet<xcuda_Transit>("xcuda_Transit");
                }
                return _xcuda_Transit;
            }
        }
        private ObjectSet<xcuda_Transit> _xcuda_Transit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Transit_Destination> xcuda_Transit_Destination
        {
            get
            {
                if ((_xcuda_Transit_Destination == null))
                {
                    _xcuda_Transit_Destination = base.CreateObjectSet<xcuda_Transit_Destination>("xcuda_Transit_Destination");
                }
                return _xcuda_Transit_Destination;
            }
        }
        private ObjectSet<xcuda_Transit_Destination> _xcuda_Transit_Destination;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Transport> xcuda_Transport
        {
            get
            {
                if ((_xcuda_Transport == null))
                {
                    _xcuda_Transport = base.CreateObjectSet<xcuda_Transport>("xcuda_Transport");
                }
                return _xcuda_Transport;
            }
        }
        private ObjectSet<xcuda_Transport> _xcuda_Transport;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Type> xcuda_Type
        {
            get
            {
                if ((_xcuda_Type == null))
                {
                    _xcuda_Type = base.CreateObjectSet<xcuda_Type>("xcuda_Type");
                }
                return _xcuda_Type;
            }
        }
        private ObjectSet<xcuda_Type> _xcuda_Type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Valuation> xcuda_Valuation
        {
            get
            {
                if ((_xcuda_Valuation == null))
                {
                    _xcuda_Valuation = base.CreateObjectSet<xcuda_Valuation>("xcuda_Valuation");
                }
                return _xcuda_Valuation;
            }
        }
        private ObjectSet<xcuda_Valuation> _xcuda_Valuation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Warehouse> xcuda_Warehouse
        {
            get
            {
                if ((_xcuda_Warehouse == null))
                {
                    _xcuda_Warehouse = base.CreateObjectSet<xcuda_Warehouse>("xcuda_Warehouse");
                }
                return _xcuda_Warehouse;
            }
        }
        private ObjectSet<xcuda_Warehouse> _xcuda_Warehouse;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntryPreviousItems> EntryPreviousItems
        {
            get
            {
                if ((_EntryPreviousItems == null))
                {
                    _EntryPreviousItems = base.CreateObjectSet<EntryPreviousItems>("EntryPreviousItems");
                }
                return _EntryPreviousItems;
            }
        }
        private ObjectSet<EntryPreviousItems> _EntryPreviousItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TariffCategoryCodeSuppUnit> TariffCategoryCodeSuppUnit
        {
            get
            {
                if ((_TariffCategoryCodeSuppUnit == null))
                {
                    _TariffCategoryCodeSuppUnit = base.CreateObjectSet<TariffCategoryCodeSuppUnit>("TariffCategoryCodeSuppUnit");
                }
                return _TariffCategoryCodeSuppUnit;
            }
        }
        private ObjectSet<TariffCategoryCodeSuppUnit> _TariffCategoryCodeSuppUnit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryItemsEx> InventoryItemsEx
        {
            get
            {
                if ((_InventoryItemsEx == null))
                {
                    _InventoryItemsEx = base.CreateObjectSet<InventoryItemsEx>("InventoryItemsEx");
                }
                return _InventoryItemsEx;
            }
        }
        private ObjectSet<InventoryItemsEx> _InventoryItemsEx;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachments> Attachments
        {
            get
            {
                if ((_Attachments == null))
                {
                    _Attachments = base.CreateObjectSet<Attachments>("Attachments");
                }
                return _Attachments;
            }
        }
        private ObjectSet<Attachments> _Attachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Attachments> xcuda_Attachments
        {
            get
            {
                if ((_xcuda_Attachments == null))
                {
                    _xcuda_Attachments = base.CreateObjectSet<xcuda_Attachments>("xcuda_Attachments");
                }
                return _xcuda_Attachments;
            }
        }
        private ObjectSet<xcuda_Attachments> _xcuda_Attachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PackageTypes> PackageTypes
        {
            get
            {
                if ((_PackageTypes == null))
                {
                    _PackageTypes = base.CreateObjectSet<PackageTypes>("PackageTypes");
                }
                return _PackageTypes;
            }
        }
        private ObjectSet<PackageTypes> _PackageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<xcuda_Inventory_Item> xcuda_Inventory_Item
        {
            get
            {
                if ((_xcuda_Inventory_Item == null))
                {
                    _xcuda_Inventory_Item = base.CreateObjectSet<xcuda_Inventory_Item>("xcuda_Inventory_Item");
                }
                return _xcuda_Inventory_Item;
            }
        }
        private ObjectSet<xcuda_Inventory_Item> _xcuda_Inventory_Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Container> Container
        {
            get
            {
                if ((_Container == null))
                {
                    _Container = base.CreateObjectSet<Container>("Container");
                }
                return _Container;
            }
        }
        private ObjectSet<Container> _Container;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryItems> InventoryItems
        {
            get
            {
                if ((_InventoryItems == null))
                {
                    _InventoryItems = base.CreateObjectSet<InventoryItems>("InventoryItems");
                }
                return _InventoryItems;
            }
        }
        private ObjectSet<InventoryItems> _InventoryItems;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_item_external_freight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_item_external_freight(xcuda_item_external_freight xcuda_item_external_freight)
        {
            base.AddObject("xcuda_item_external_freight", xcuda_item_external_freight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_item_internal_freight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_item_internal_freight(xcuda_item_internal_freight xcuda_item_internal_freight)
        {
            base.AddObject("xcuda_item_internal_freight", xcuda_item_internal_freight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Item_Invoice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Item_Invoice(xcuda_Item_Invoice xcuda_Item_Invoice)
        {
            base.AddObject("xcuda_Item_Invoice", xcuda_Item_Invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_item_other_cost EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_item_other_cost(xcuda_item_other_cost xcuda_item_other_cost)
        {
            base.AddObject("xcuda_item_other_cost", xcuda_item_other_cost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Market_valuer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Market_valuer(xcuda_Market_valuer xcuda_Market_valuer)
        {
            base.AddObject("xcuda_Market_valuer", xcuda_Market_valuer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Valuation_item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Valuation_item(xcuda_Valuation_item xcuda_Valuation_item)
        {
            base.AddObject("xcuda_Valuation_item", xcuda_Valuation_item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Weight_itm EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Weight_itm(xcuda_Weight_itm xcuda_Weight_itm)
        {
            base.AddObject("xcuda_Weight_itm", xcuda_Weight_itm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Gs_deduction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Gs_deduction(xcuda_Gs_deduction xcuda_Gs_deduction)
        {
            base.AddObject("xcuda_Gs_deduction", xcuda_Gs_deduction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Gs_external_freight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Gs_external_freight(xcuda_Gs_external_freight xcuda_Gs_external_freight)
        {
            base.AddObject("xcuda_Gs_external_freight", xcuda_Gs_external_freight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Gs_insurance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Gs_insurance(xcuda_Gs_insurance xcuda_Gs_insurance)
        {
            base.AddObject("xcuda_Gs_insurance", xcuda_Gs_insurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Gs_internal_freight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Gs_internal_freight(xcuda_Gs_internal_freight xcuda_Gs_internal_freight)
        {
            base.AddObject("xcuda_Gs_internal_freight", xcuda_Gs_internal_freight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Gs_other_cost EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Gs_other_cost(xcuda_Gs_other_cost xcuda_Gs_other_cost)
        {
            base.AddObject("xcuda_Gs_other_cost", xcuda_Gs_other_cost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Total EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Total(xcuda_Total xcuda_Total)
        {
            base.AddObject("xcuda_Total", xcuda_Total);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Weight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Weight(xcuda_Weight xcuda_Weight)
        {
            base.AddObject("xcuda_Weight", xcuda_Weight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Country(xcuda_Country xcuda_Country)
        {
            base.AddObject("xcuda_Country", xcuda_Country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Destination EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Destination(xcuda_Destination xcuda_Destination)
        {
            base.AddObject("xcuda_Destination", xcuda_Destination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Export EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Export(xcuda_Export xcuda_Export)
        {
            base.AddObject("xcuda_Export", xcuda_Export);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_General_information EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_General_information(xcuda_General_information xcuda_General_information)
        {
            base.AddObject("xcuda_General_information", xcuda_General_information);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Consignee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Consignee(xcuda_Consignee xcuda_Consignee)
        {
            base.AddObject("xcuda_Consignee", xcuda_Consignee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Exporter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Exporter(xcuda_Exporter xcuda_Exporter)
        {
            base.AddObject("xcuda_Exporter", xcuda_Exporter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Traders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Traders(xcuda_Traders xcuda_Traders)
        {
            base.AddObject("xcuda_Traders", xcuda_Traders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Traders_Financial EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Traders_Financial(xcuda_Traders_Financial xcuda_Traders_Financial)
        {
            base.AddObject("xcuda_Traders_Financial", xcuda_Traders_Financial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Forms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Forms(xcuda_Forms xcuda_Forms)
        {
            base.AddObject("xcuda_Forms", xcuda_Forms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AsycudaDocumentSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAsycudaDocumentSet(AsycudaDocumentSet asycudaDocumentSet)
        {
            base.AddObject("AsycudaDocumentSet", asycudaDocumentSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customs_Procedure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustoms_Procedure(Customs_Procedure customs_Procedure)
        {
            base.AddObject("Customs_Procedure", customs_Procedure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Document_Type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocument_Type(Document_Type document_Type)
        {
            base.AddObject("Document_Type", document_Type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExportTemplate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExportTemplate(ExportTemplate exportTemplate)
        {
            base.AddObject("ExportTemplate", exportTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TariffCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTariffCategory(TariffCategory tariffCategory)
        {
            base.AddObject("TariffCategory", tariffCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TariffCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTariffCodes(TariffCodes tariffCodes)
        {
            base.AddObject("TariffCodes", tariffCodes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TariffSupUnitLkps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTariffSupUnitLkps(TariffSupUnitLkps tariffSupUnitLkps)
        {
            base.AddObject("TariffSupUnitLkps", tariffSupUnitLkps);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Assessment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Assessment(xcuda_Assessment xcuda_Assessment)
        {
            base.AddObject("xcuda_Assessment", xcuda_Assessment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Assessment_notice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Assessment_notice(xcuda_Assessment_notice xcuda_Assessment_notice)
        {
            base.AddObject("xcuda_Assessment_notice", xcuda_Assessment_notice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_ASYCUDA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_ASYCUDA(xcuda_ASYCUDA xcuda_ASYCUDA)
        {
            base.AddObject("xcuda_ASYCUDA", xcuda_ASYCUDA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_ASYCUDA_ExtendedProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_ASYCUDA_ExtendedProperties(xcuda_ASYCUDA_ExtendedProperties xcuda_ASYCUDA_ExtendedProperties)
        {
            base.AddObject("xcuda_ASYCUDA_ExtendedProperties", xcuda_ASYCUDA_ExtendedProperties);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Attached_documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Attached_documents(xcuda_Attached_documents xcuda_Attached_documents)
        {
            base.AddObject("xcuda_Attached_documents", xcuda_Attached_documents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Border_information EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Border_information(xcuda_Border_information xcuda_Border_information)
        {
            base.AddObject("xcuda_Border_information", xcuda_Border_information);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Border_office EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Border_office(xcuda_Border_office xcuda_Border_office)
        {
            base.AddObject("xcuda_Border_office", xcuda_Border_office);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Container EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Container(xcuda_Container xcuda_Container)
        {
            base.AddObject("xcuda_Container", xcuda_Container);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Declarant EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Declarant(xcuda_Declarant xcuda_Declarant)
        {
            base.AddObject("xcuda_Declarant", xcuda_Declarant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Delivery_terms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Delivery_terms(xcuda_Delivery_terms xcuda_Delivery_terms)
        {
            base.AddObject("xcuda_Delivery_terms", xcuda_Delivery_terms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Departure_arrival_information EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Departure_arrival_information(xcuda_Departure_arrival_information xcuda_Departure_arrival_information)
        {
            base.AddObject("xcuda_Departure_arrival_information", xcuda_Departure_arrival_information);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Export_release EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Export_release(xcuda_Export_release xcuda_Export_release)
        {
            base.AddObject("xcuda_Export_release", xcuda_Export_release);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Financial EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Financial(xcuda_Financial xcuda_Financial)
        {
            base.AddObject("xcuda_Financial", xcuda_Financial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Financial_Amounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Financial_Amounts(xcuda_Financial_Amounts xcuda_Financial_Amounts)
        {
            base.AddObject("xcuda_Financial_Amounts", xcuda_Financial_Amounts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Financial_Guarantee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Financial_Guarantee(xcuda_Financial_Guarantee xcuda_Financial_Guarantee)
        {
            base.AddObject("xcuda_Financial_Guarantee", xcuda_Financial_Guarantee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Global_taxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Global_taxes(xcuda_Global_taxes xcuda_Global_taxes)
        {
            base.AddObject("xcuda_Global_taxes", xcuda_Global_taxes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Goods_description EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Goods_description(xcuda_Goods_description xcuda_Goods_description)
        {
            base.AddObject("xcuda_Goods_description", xcuda_Goods_description);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Gs_Invoice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Gs_Invoice(xcuda_Gs_Invoice xcuda_Gs_Invoice)
        {
            base.AddObject("xcuda_Gs_Invoice", xcuda_Gs_Invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_HScode EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_HScode(xcuda_HScode xcuda_HScode)
        {
            base.AddObject("xcuda_HScode", xcuda_HScode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Identification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Identification(xcuda_Identification xcuda_Identification)
        {
            base.AddObject("xcuda_Identification", xcuda_Identification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Item(xcuda_Item xcuda_Item)
        {
            base.AddObject("xcuda_Item", xcuda_Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_item_deduction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_item_deduction(xcuda_item_deduction xcuda_item_deduction)
        {
            base.AddObject("xcuda_item_deduction", xcuda_item_deduction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_item_insurance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_item_insurance(xcuda_item_insurance xcuda_item_insurance)
        {
            base.AddObject("xcuda_item_insurance", xcuda_item_insurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Means_of_transport EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Means_of_transport(xcuda_Means_of_transport xcuda_Means_of_transport)
        {
            base.AddObject("xcuda_Means_of_transport", xcuda_Means_of_transport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Nbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Nbers(xcuda_Nbers xcuda_Nbers)
        {
            base.AddObject("xcuda_Nbers", xcuda_Nbers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Office_segment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Office_segment(xcuda_Office_segment xcuda_Office_segment)
        {
            base.AddObject("xcuda_Office_segment", xcuda_Office_segment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Packages(xcuda_Packages xcuda_Packages)
        {
            base.AddObject("xcuda_Packages", xcuda_Packages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Place_of_loading EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Place_of_loading(xcuda_Place_of_loading xcuda_Place_of_loading)
        {
            base.AddObject("xcuda_Place_of_loading", xcuda_Place_of_loading);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Previous_doc EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Previous_doc(xcuda_Previous_doc xcuda_Previous_doc)
        {
            base.AddObject("xcuda_Previous_doc", xcuda_Previous_doc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_PreviousItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_PreviousItem(xcuda_PreviousItem xcuda_PreviousItem)
        {
            base.AddObject("xcuda_PreviousItem", xcuda_PreviousItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Principal EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Principal(xcuda_Principal xcuda_Principal)
        {
            base.AddObject("xcuda_Principal", xcuda_Principal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Property EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Property(xcuda_Property xcuda_Property)
        {
            base.AddObject("xcuda_Property", xcuda_Property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_receipt EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_receipt(xcuda_receipt xcuda_receipt)
        {
            base.AddObject("xcuda_receipt", xcuda_receipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Registration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Registration(xcuda_Registration xcuda_Registration)
        {
            base.AddObject("xcuda_Registration", xcuda_Registration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Seals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Seals(xcuda_Seals xcuda_Seals)
        {
            base.AddObject("xcuda_Seals", xcuda_Seals);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Signature EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Signature(xcuda_Signature xcuda_Signature)
        {
            base.AddObject("xcuda_Signature", xcuda_Signature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Supplementary_unit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Supplementary_unit(xcuda_Supplementary_unit xcuda_Supplementary_unit)
        {
            base.AddObject("xcuda_Supplementary_unit", xcuda_Supplementary_unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Suppliers_documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Suppliers_documents(xcuda_Suppliers_documents xcuda_Suppliers_documents)
        {
            base.AddObject("xcuda_Suppliers_documents", xcuda_Suppliers_documents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Suppliers_link EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Suppliers_link(xcuda_Suppliers_link xcuda_Suppliers_link)
        {
            base.AddObject("xcuda_Suppliers_link", xcuda_Suppliers_link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Tarification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Tarification(xcuda_Tarification xcuda_Tarification)
        {
            base.AddObject("xcuda_Tarification", xcuda_Tarification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Taxation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Taxation(xcuda_Taxation xcuda_Taxation)
        {
            base.AddObject("xcuda_Taxation", xcuda_Taxation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Taxation_line EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Taxation_line(xcuda_Taxation_line xcuda_Taxation_line)
        {
            base.AddObject("xcuda_Taxation_line", xcuda_Taxation_line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Transit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Transit(xcuda_Transit xcuda_Transit)
        {
            base.AddObject("xcuda_Transit", xcuda_Transit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Transit_Destination EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Transit_Destination(xcuda_Transit_Destination xcuda_Transit_Destination)
        {
            base.AddObject("xcuda_Transit_Destination", xcuda_Transit_Destination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Transport EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Transport(xcuda_Transport xcuda_Transport)
        {
            base.AddObject("xcuda_Transport", xcuda_Transport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Type(xcuda_Type xcuda_Type)
        {
            base.AddObject("xcuda_Type", xcuda_Type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Valuation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Valuation(xcuda_Valuation xcuda_Valuation)
        {
            base.AddObject("xcuda_Valuation", xcuda_Valuation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Warehouse EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Warehouse(xcuda_Warehouse xcuda_Warehouse)
        {
            base.AddObject("xcuda_Warehouse", xcuda_Warehouse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntryPreviousItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntryPreviousItems(EntryPreviousItems entryPreviousItems)
        {
            base.AddObject("EntryPreviousItems", entryPreviousItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TariffCategoryCodeSuppUnit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTariffCategoryCodeSuppUnit(TariffCategoryCodeSuppUnit tariffCategoryCodeSuppUnit)
        {
            base.AddObject("TariffCategoryCodeSuppUnit", tariffCategoryCodeSuppUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryItemsEx EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryItemsEx(InventoryItemsEx inventoryItemsEx)
        {
            base.AddObject("InventoryItemsEx", inventoryItemsEx);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachments(Attachments attachments)
        {
            base.AddObject("Attachments", attachments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Attachments(xcuda_Attachments xcuda_Attachments)
        {
            base.AddObject("xcuda_Attachments", xcuda_Attachments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PackageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackageTypes(PackageTypes packageTypes)
        {
            base.AddObject("PackageTypes", packageTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the xcuda_Inventory_Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToxcuda_Inventory_Item(xcuda_Inventory_Item xcuda_Inventory_Item)
        {
            base.AddObject("xcuda_Inventory_Item", xcuda_Inventory_Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Container EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContainer(Container container)
        {
            base.AddObject("Container", container);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryItems(InventoryItems inventoryItems)
        {
            base.AddObject("InventoryItems", inventoryItems);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram1(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram1(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram1(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram1", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition1_Result> sp_helpdiagramdefinition1(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition1_Result>("sp_helpdiagramdefinition1", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams1_Result> sp_helpdiagrams1(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams1_Result>("sp_helpdiagrams1", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram1(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram1", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams1()
        {
            return base.ExecuteFunction("sp_upgraddiagrams1");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram2(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram2", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram2(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram2", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram2(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram2", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition2_Result> sp_helpdiagramdefinition2(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition2_Result>("sp_helpdiagramdefinition2", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams2_Result> sp_helpdiagrams2(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams2_Result>("sp_helpdiagrams2", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram2(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram2", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams2()
        {
            return base.ExecuteFunction("sp_upgraddiagrams2");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="item_Id">No Metadata Documentation available.</param>
        /// <param name="dFQtyAllocated">No Metadata Documentation available.</param>
        /// <param name="dPQtyAllocated">No Metadata Documentation available.</param>
        public int UpdateAsycudaEntry(Nullable<global::System.Int32> item_Id, Nullable<global::System.Double> dFQtyAllocated, Nullable<global::System.Double> dPQtyAllocated)
        {
            ObjectParameter item_IdParameter;
            if (item_Id.HasValue)
            {
                item_IdParameter = new ObjectParameter("Item_Id", item_Id);
            }
            else
            {
                item_IdParameter = new ObjectParameter("Item_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter dFQtyAllocatedParameter;
            if (dFQtyAllocated.HasValue)
            {
                dFQtyAllocatedParameter = new ObjectParameter("DFQtyAllocated", dFQtyAllocated);
            }
            else
            {
                dFQtyAllocatedParameter = new ObjectParameter("DFQtyAllocated", typeof(global::System.Double));
            }
    
            ObjectParameter dPQtyAllocatedParameter;
            if (dPQtyAllocated.HasValue)
            {
                dPQtyAllocatedParameter = new ObjectParameter("DPQtyAllocated", dPQtyAllocated);
            }
            else
            {
                dPQtyAllocatedParameter = new ObjectParameter("DPQtyAllocated", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("UpdateAsycudaEntry", item_IdParameter, dFQtyAllocatedParameter, dPQtyAllocatedParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="AsycudaDocumentSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsycudaDocumentSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AsycudaDocumentSet object.
        /// </summary>
        /// <param name="asycudaDocumentSetId">Initial value of the AsycudaDocumentSetId property.</param>
        /// <param name="exchange_Rate">Initial value of the Exchange_Rate property.</param>
        /// <param name="applicationSettingsId">Initial value of the ApplicationSettingsId property.</param>
        public static AsycudaDocumentSet CreateAsycudaDocumentSet(global::System.Int32 asycudaDocumentSetId, global::System.Double exchange_Rate, global::System.Int32 applicationSettingsId)
        {
            AsycudaDocumentSet asycudaDocumentSet = new AsycudaDocumentSet();
            asycudaDocumentSet.AsycudaDocumentSetId = asycudaDocumentSetId;
            asycudaDocumentSet.Exchange_Rate = exchange_Rate;
            asycudaDocumentSet.ApplicationSettingsId = applicationSettingsId;
            return asycudaDocumentSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AsycudaDocumentSetId
        {
            get
            {
                return _AsycudaDocumentSetId;
            }
            set
            {
                if (_AsycudaDocumentSetId != value)
                {
                    OnAsycudaDocumentSetIdChanging(value);
                    ReportPropertyChanging("AsycudaDocumentSetId");
                    _AsycudaDocumentSetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AsycudaDocumentSetId");
                    OnAsycudaDocumentSetIdChanged();
                }
            }
        }
        private global::System.Int32 _AsycudaDocumentSetId;
        partial void OnAsycudaDocumentSetIdChanging(global::System.Int32 value);
        partial void OnAsycudaDocumentSetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declarant_Reference_Number
        {
            get
            {
                return _Declarant_Reference_Number;
            }
            set
            {
                OnDeclarant_Reference_NumberChanging(value);
                ReportPropertyChanging("Declarant_Reference_Number");
                _Declarant_Reference_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declarant_Reference_Number");
                OnDeclarant_Reference_NumberChanged();
            }
        }
        private global::System.String _Declarant_Reference_Number;
        partial void OnDeclarant_Reference_NumberChanging(global::System.String value);
        partial void OnDeclarant_Reference_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Exchange_Rate
        {
            get
            {
                return _Exchange_Rate;
            }
            set
            {
                OnExchange_RateChanging(value);
                ReportPropertyChanging("Exchange_Rate");
                _Exchange_Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exchange_Rate");
                OnExchange_RateChanged();
            }
        }
        private global::System.Double _Exchange_Rate;
        partial void OnExchange_RateChanging(global::System.Double value);
        partial void OnExchange_RateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Customs_ProcedureId
        {
            get
            {
                return _Customs_ProcedureId;
            }
            set
            {
                OnCustoms_ProcedureIdChanging(value);
                ReportPropertyChanging("Customs_ProcedureId");
                _Customs_ProcedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Customs_ProcedureId");
                OnCustoms_ProcedureIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Customs_ProcedureId;
        partial void OnCustoms_ProcedureIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustoms_ProcedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country_of_origin_code
        {
            get
            {
                return _Country_of_origin_code;
            }
            set
            {
                OnCountry_of_origin_codeChanging(value);
                ReportPropertyChanging("Country_of_origin_code");
                _Country_of_origin_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country_of_origin_code");
                OnCountry_of_origin_codeChanged();
            }
        }
        private global::System.String _Country_of_origin_code;
        partial void OnCountry_of_origin_codeChanging(global::System.String value);
        partial void OnCountry_of_origin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_Code
        {
            get
            {
                return _Currency_Code;
            }
            set
            {
                OnCurrency_CodeChanging(value);
                ReportPropertyChanging("Currency_Code");
                _Currency_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_Code");
                OnCurrency_CodeChanged();
            }
        }
        private global::System.String _Currency_Code;
        partial void OnCurrency_CodeChanging(global::System.String value);
        partial void OnCurrency_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Document_TypeId
        {
            get
            {
                return _Document_TypeId;
            }
            set
            {
                OnDocument_TypeIdChanging(value);
                ReportPropertyChanging("Document_TypeId");
                _Document_TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Document_TypeId");
                OnDocument_TypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Document_TypeId;
        partial void OnDocument_TypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocument_TypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manifest_Number
        {
            get
            {
                return _Manifest_Number;
            }
            set
            {
                OnManifest_NumberChanging(value);
                ReportPropertyChanging("Manifest_Number");
                _Manifest_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manifest_Number");
                OnManifest_NumberChanged();
            }
        }
        private global::System.String _Manifest_Number;
        partial void OnManifest_NumberChanging(global::System.String value);
        partial void OnManifest_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BLNumber
        {
            get
            {
                return _BLNumber;
            }
            set
            {
                OnBLNumberChanging(value);
                ReportPropertyChanging("BLNumber");
                _BLNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BLNumber");
                OnBLNumberChanged();
            }
        }
        private global::System.String _BLNumber;
        partial void OnBLNumberChanging(global::System.String value);
        partial void OnBLNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryTimeStamp
        {
            get
            {
                return _EntryTimeStamp;
            }
            set
            {
                OnEntryTimeStampChanging(value);
                ReportPropertyChanging("EntryTimeStamp");
                _EntryTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTimeStamp");
                OnEntryTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryTimeStamp;
        partial void OnEntryTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartingFileCount
        {
            get
            {
                return _StartingFileCount;
            }
            set
            {
                OnStartingFileCountChanging(value);
                ReportPropertyChanging("StartingFileCount");
                _StartingFileCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartingFileCount");
                OnStartingFileCountChanged();
            }
        }
        private Nullable<global::System.Int32> _StartingFileCount;
        partial void OnStartingFileCountChanging(Nullable<global::System.Int32> value);
        partial void OnStartingFileCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApportionMethod
        {
            get
            {
                return _ApportionMethod;
            }
            set
            {
                OnApportionMethodChanging(value);
                ReportPropertyChanging("ApportionMethod");
                _ApportionMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApportionMethod");
                OnApportionMethodChanged();
            }
        }
        private global::System.String _ApportionMethod;
        partial void OnApportionMethodChanging(global::System.String value);
        partial void OnApportionMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalWeight
        {
            get
            {
                return _TotalWeight;
            }
            set
            {
                OnTotalWeightChanging(value);
                ReportPropertyChanging("TotalWeight");
                _TotalWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalWeight");
                OnTotalWeightChanged();
            }
        }
        private Nullable<global::System.Double> _TotalWeight;
        partial void OnTotalWeightChanging(Nullable<global::System.Double> value);
        partial void OnTotalWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalFreight
        {
            get
            {
                return _TotalFreight;
            }
            set
            {
                OnTotalFreightChanging(value);
                ReportPropertyChanging("TotalFreight");
                _TotalFreight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalFreight");
                OnTotalFreightChanged();
            }
        }
        private Nullable<global::System.Double> _TotalFreight;
        partial void OnTotalFreightChanging(Nullable<global::System.Double> value);
        partial void OnTotalFreightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalPackages
        {
            get
            {
                return _TotalPackages;
            }
            set
            {
                OnTotalPackagesChanging(value);
                ReportPropertyChanging("TotalPackages");
                _TotalPackages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPackages");
                OnTotalPackagesChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalPackages;
        partial void OnTotalPackagesChanging(Nullable<global::System.Int32> value);
        partial void OnTotalPackagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationSettingsId
        {
            get
            {
                return _ApplicationSettingsId;
            }
            set
            {
                OnApplicationSettingsIdChanging(value);
                ReportPropertyChanging("ApplicationSettingsId");
                _ApplicationSettingsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSettingsId");
                OnApplicationSettingsIdChanged();
            }
        }
        private global::System.Int32 _ApplicationSettingsId;
        partial void OnApplicationSettingsIdChanging(global::System.Int32 value);
        partial void OnApplicationSettingsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastFileNumber
        {
            get
            {
                return _LastFileNumber;
            }
            set
            {
                OnLastFileNumberChanging(value);
                ReportPropertyChanging("LastFileNumber");
                _LastFileNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFileNumber");
                OnLastFileNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _LastFileNumber;
        partial void OnLastFileNumberChanging(Nullable<global::System.Int32> value);
        partial void OnLastFileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalInvoices
        {
            get
            {
                return _TotalInvoices;
            }
            set
            {
                OnTotalInvoicesChanging(value);
                ReportPropertyChanging("TotalInvoices");
                _TotalInvoices = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalInvoices");
                OnTotalInvoicesChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalInvoices;
        partial void OnTotalInvoicesChanging(Nullable<global::System.Int32> value);
        partial void OnTotalInvoicesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxLines
        {
            get
            {
                return _MaxLines;
            }
            set
            {
                OnMaxLinesChanging(value);
                ReportPropertyChanging("MaxLines");
                _MaxLines = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLines");
                OnMaxLinesChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxLines;
        partial void OnMaxLinesChanging(Nullable<global::System.Int32> value);
        partial void OnMaxLinesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationOfGoods
        {
            get
            {
                return _LocationOfGoods;
            }
            set
            {
                OnLocationOfGoodsChanging(value);
                ReportPropertyChanging("LocationOfGoods");
                _LocationOfGoods = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationOfGoods");
                OnLocationOfGoodsChanged();
            }
        }
        private global::System.String _LocationOfGoods;
        partial void OnLocationOfGoodsChanging(global::System.String value);
        partial void OnLocationOfGoodsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreightCurrencyCode
        {
            get
            {
                return _FreightCurrencyCode;
            }
            set
            {
                OnFreightCurrencyCodeChanging(value);
                ReportPropertyChanging("FreightCurrencyCode");
                _FreightCurrencyCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreightCurrencyCode");
                OnFreightCurrencyCodeChanged();
            }
        }
        private global::System.String _FreightCurrencyCode;
        partial void OnFreightCurrencyCodeChanging(global::System.String value);
        partial void OnFreightCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Office
        {
            get
            {
                return _Office;
            }
            set
            {
                OnOfficeChanging(value);
                ReportPropertyChanging("Office");
                _Office = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Office");
                OnOfficeChanged();
            }
        }
        private global::System.String _Office;
        partial void OnOfficeChanging(global::System.String value);
        partial void OnOfficeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_AsycudaDocumentSet_Customs_Procedure", "Customs_Procedure")]
        public Customs_Procedure Customs_Procedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Customs_Procedure", "Customs_Procedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Customs_Procedure", "Customs_Procedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customs_Procedure> Customs_ProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Customs_Procedure", "Customs_Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Customs_Procedure", "Customs_Procedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_AsycudaDocumentSet_Document_Type", "Document_Type")]
        public Document_Type Document_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Document_Type", "Document_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Document_Type", "Document_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document_Type> Document_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Document_Type", "Document_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Document_Type", "Document_Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "xcuda_ASYCUDA_ExtendedProperties")]
        public EntityCollection<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "xcuda_ASYCUDA_ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "xcuda_ASYCUDA_ExtendedProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Container_AsycudaDocumentSet", "Container")]
        public Container Container
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Container>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "Container").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Container>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "Container").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Container> ContainerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Container>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "Container");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Container>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "Container", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="Attachments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachments object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filePath">Initial value of the FilePath property.</param>
        /// <param name="documentCode">Initial value of the DocumentCode property.</param>
        /// <param name="reference">Initial value of the Reference property.</param>
        public static Attachments CreateAttachments(global::System.Int32 id, global::System.String filePath, global::System.String documentCode, global::System.String reference)
        {
            Attachments attachments = new Attachments();
            attachments.Id = id;
            attachments.FilePath = filePath;
            attachments.DocumentCode = documentCode;
            attachments.Reference = reference;
            return attachments;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentCode
        {
            get
            {
                return _DocumentCode;
            }
            set
            {
                OnDocumentCodeChanging(value);
                ReportPropertyChanging("DocumentCode");
                _DocumentCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocumentCode");
                OnDocumentCodeChanged();
            }
        }
        private global::System.String _DocumentCode;
        partial void OnDocumentCodeChanging(global::System.String value);
        partial void OnDocumentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Attachments_Attachments", "xcuda_Attachments")]
        public EntityCollection<xcuda_Attachments> xcuda_Attachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_Attachments", "xcuda_Attachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_Attachments", "xcuda_Attachments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="Container")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Container : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Container object.
        /// </summary>
        /// <param name="asycudaDocumentSetId">Initial value of the AsycudaDocumentSetId property.</param>
        public static Container CreateContainer(global::System.Int32 asycudaDocumentSetId)
        {
            Container container = new Container();
            container.AsycudaDocumentSetId = asycudaDocumentSetId;
            return container;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Container_identity
        {
            get
            {
                return _Container_identity;
            }
            set
            {
                OnContainer_identityChanging(value);
                ReportPropertyChanging("Container_identity");
                _Container_identity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Container_identity");
                OnContainer_identityChanged();
            }
        }
        private global::System.String _Container_identity;
        partial void OnContainer_identityChanging(global::System.String value);
        partial void OnContainer_identityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Container_type
        {
            get
            {
                return _Container_type;
            }
            set
            {
                OnContainer_typeChanging(value);
                ReportPropertyChanging("Container_type");
                _Container_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Container_type");
                OnContainer_typeChanged();
            }
        }
        private global::System.String _Container_type;
        partial void OnContainer_typeChanging(global::System.String value);
        partial void OnContainer_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Empty_full_indicator
        {
            get
            {
                return _Empty_full_indicator;
            }
            set
            {
                OnEmpty_full_indicatorChanging(value);
                ReportPropertyChanging("Empty_full_indicator");
                _Empty_full_indicator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Empty_full_indicator");
                OnEmpty_full_indicatorChanged();
            }
        }
        private global::System.String _Empty_full_indicator;
        partial void OnEmpty_full_indicatorChanging(global::System.String value);
        partial void OnEmpty_full_indicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Gross_weight
        {
            get
            {
                return _Gross_weight;
            }
            set
            {
                OnGross_weightChanging(value);
                ReportPropertyChanging("Gross_weight");
                _Gross_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gross_weight");
                OnGross_weightChanged();
            }
        }
        private Nullable<global::System.Double> _Gross_weight;
        partial void OnGross_weightChanging(Nullable<global::System.Double> value);
        partial void OnGross_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Goods_description
        {
            get
            {
                return _Goods_description;
            }
            set
            {
                OnGoods_descriptionChanging(value);
                ReportPropertyChanging("Goods_description");
                _Goods_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Goods_description");
                OnGoods_descriptionChanged();
            }
        }
        private global::System.String _Goods_description;
        partial void OnGoods_descriptionChanging(global::System.String value);
        partial void OnGoods_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AsycudaDocumentSetId
        {
            get
            {
                return _AsycudaDocumentSetId;
            }
            set
            {
                if (_AsycudaDocumentSetId != value)
                {
                    OnAsycudaDocumentSetIdChanging(value);
                    ReportPropertyChanging("AsycudaDocumentSetId");
                    _AsycudaDocumentSetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AsycudaDocumentSetId");
                    OnAsycudaDocumentSetIdChanged();
                }
            }
        }
        private global::System.Int32 _AsycudaDocumentSetId;
        partial void OnAsycudaDocumentSetIdChanging(global::System.Int32 value);
        partial void OnAsycudaDocumentSetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalValue
        {
            get
            {
                return _TotalValue;
            }
            set
            {
                OnTotalValueChanging(value);
                ReportPropertyChanging("TotalValue");
                _TotalValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalValue");
                OnTotalValueChanged();
            }
        }
        private Nullable<global::System.Double> _TotalValue;
        partial void OnTotalValueChanging(Nullable<global::System.Double> value);
        partial void OnTotalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShipDate
        {
            get
            {
                return _ShipDate;
            }
            set
            {
                OnShipDateChanging(value);
                ReportPropertyChanging("ShipDate");
                _ShipDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShipDate");
                OnShipDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShipDate;
        partial void OnShipDateChanging(Nullable<global::System.DateTime> value);
        partial void OnShipDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeliveryDate
        {
            get
            {
                return _DeliveryDate;
            }
            set
            {
                OnDeliveryDateChanging(value);
                ReportPropertyChanging("DeliveryDate");
                _DeliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryDate");
                OnDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeliveryDate;
        partial void OnDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Seal
        {
            get
            {
                return _Seal;
            }
            set
            {
                OnSealChanging(value);
                ReportPropertyChanging("Seal");
                _Seal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Seal");
                OnSealChanged();
            }
        }
        private global::System.String _Seal;
        partial void OnSealChanging(global::System.String value);
        partial void OnSealChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Container_AsycudaDocumentSet", "AsycudaDocumentSet")]
        public AsycudaDocumentSet AsycudaDocumentSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "AsycudaDocumentSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "AsycudaDocumentSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsycudaDocumentSet> AsycudaDocumentSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "AsycudaDocumentSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_Container_AsycudaDocumentSet", "AsycudaDocumentSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="Customs_Procedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customs_Procedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customs_Procedure object.
        /// </summary>
        /// <param name="document_TypeId">Initial value of the Document_TypeId property.</param>
        /// <param name="customs_ProcedureId">Initial value of the Customs_ProcedureId property.</param>
        /// <param name="customsOperationId">Initial value of the CustomsOperationId property.</param>
        public static Customs_Procedure CreateCustoms_Procedure(global::System.Int32 document_TypeId, global::System.Int32 customs_ProcedureId, global::System.Int32 customsOperationId)
        {
            Customs_Procedure customs_Procedure = new Customs_Procedure();
            customs_Procedure.Document_TypeId = document_TypeId;
            customs_Procedure.Customs_ProcedureId = customs_ProcedureId;
            customs_Procedure.CustomsOperationId = customsOperationId;
            return customs_Procedure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Document_TypeId
        {
            get
            {
                return _Document_TypeId;
            }
            set
            {
                OnDocument_TypeIdChanging(value);
                ReportPropertyChanging("Document_TypeId");
                _Document_TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Document_TypeId");
                OnDocument_TypeIdChanged();
            }
        }
        private global::System.Int32 _Document_TypeId;
        partial void OnDocument_TypeIdChanging(global::System.Int32 value);
        partial void OnDocument_TypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Customs_ProcedureId
        {
            get
            {
                return _Customs_ProcedureId;
            }
            set
            {
                if (_Customs_ProcedureId != value)
                {
                    OnCustoms_ProcedureIdChanging(value);
                    ReportPropertyChanging("Customs_ProcedureId");
                    _Customs_ProcedureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Customs_ProcedureId");
                    OnCustoms_ProcedureIdChanged();
                }
            }
        }
        private global::System.Int32 _Customs_ProcedureId;
        partial void OnCustoms_ProcedureIdChanging(global::System.Int32 value);
        partial void OnCustoms_ProcedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extended_customs_procedure
        {
            get
            {
                return _Extended_customs_procedure;
            }
            set
            {
                OnExtended_customs_procedureChanging(value);
                ReportPropertyChanging("Extended_customs_procedure");
                _Extended_customs_procedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extended_customs_procedure");
                OnExtended_customs_procedureChanged();
            }
        }
        private global::System.String _Extended_customs_procedure;
        partial void OnExtended_customs_procedureChanging(global::System.String value);
        partial void OnExtended_customs_procedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String National_customs_procedure
        {
            get
            {
                return _National_customs_procedure;
            }
            set
            {
                OnNational_customs_procedureChanging(value);
                ReportPropertyChanging("National_customs_procedure");
                _National_customs_procedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("National_customs_procedure");
                OnNational_customs_procedureChanged();
            }
        }
        private global::System.String _National_customs_procedure;
        partial void OnNational_customs_procedureChanging(global::System.String value);
        partial void OnNational_customs_procedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomsProcedure
        {
            get
            {
                return _CustomsProcedure;
            }
            set
            {
                OnCustomsProcedureChanging(value);
                ReportPropertyChanging("CustomsProcedure");
                _CustomsProcedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomsProcedure");
                OnCustomsProcedureChanged();
            }
        }
        private global::System.String _CustomsProcedure;
        partial void OnCustomsProcedureChanging(global::System.String value);
        partial void OnCustomsProcedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsObsolete
        {
            get
            {
                return _IsObsolete;
            }
            set
            {
                OnIsObsoleteChanging(value);
                ReportPropertyChanging("IsObsolete");
                _IsObsolete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsObsolete");
                OnIsObsoleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsObsolete;
        partial void OnIsObsoleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsObsoleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPaid;
        partial void OnIsPaidChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BondTypeId
        {
            get
            {
                return _BondTypeId;
            }
            set
            {
                OnBondTypeIdChanging(value);
                ReportPropertyChanging("BondTypeId");
                _BondTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BondTypeId");
                OnBondTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BondTypeId;
        partial void OnBondTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnBondTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private Nullable<global::System.Boolean> _Stock;
        partial void OnStockChanging(Nullable<global::System.Boolean> value);
        partial void OnStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Discrepancy
        {
            get
            {
                return _Discrepancy;
            }
            set
            {
                OnDiscrepancyChanging(value);
                ReportPropertyChanging("Discrepancy");
                _Discrepancy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discrepancy");
                OnDiscrepancyChanged();
            }
        }
        private Nullable<global::System.Boolean> _Discrepancy;
        partial void OnDiscrepancyChanging(Nullable<global::System.Boolean> value);
        partial void OnDiscrepancyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Adjustment
        {
            get
            {
                return _Adjustment;
            }
            set
            {
                OnAdjustmentChanging(value);
                ReportPropertyChanging("Adjustment");
                _Adjustment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Adjustment");
                OnAdjustmentChanged();
            }
        }
        private Nullable<global::System.Boolean> _Adjustment;
        partial void OnAdjustmentChanging(Nullable<global::System.Boolean> value);
        partial void OnAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Sales
        {
            get
            {
                return _Sales;
            }
            set
            {
                OnSalesChanging(value);
                ReportPropertyChanging("Sales");
                _Sales = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sales");
                OnSalesChanged();
            }
        }
        private Nullable<global::System.Boolean> _Sales;
        partial void OnSalesChanging(Nullable<global::System.Boolean> value);
        partial void OnSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomsOperationId
        {
            get
            {
                return _CustomsOperationId;
            }
            set
            {
                OnCustomsOperationIdChanging(value);
                ReportPropertyChanging("CustomsOperationId");
                _CustomsOperationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomsOperationId");
                OnCustomsOperationIdChanged();
            }
        }
        private global::System.Int32 _CustomsOperationId;
        partial void OnCustomsOperationIdChanging(global::System.Int32 value);
        partial void OnCustomsOperationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SubmitToCustoms
        {
            get
            {
                return _SubmitToCustoms;
            }
            set
            {
                OnSubmitToCustomsChanging(value);
                ReportPropertyChanging("SubmitToCustoms");
                _SubmitToCustoms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmitToCustoms");
                OnSubmitToCustomsChanged();
            }
        }
        private Nullable<global::System.Boolean> _SubmitToCustoms;
        partial void OnSubmitToCustomsChanging(Nullable<global::System.Boolean> value);
        partial void OnSubmitToCustomsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_AsycudaDocumentSet_Customs_Procedure", "AsycudaDocumentSet")]
        public EntityCollection<AsycudaDocumentSet> AsycudaDocumentSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Customs_Procedure", "AsycudaDocumentSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Customs_Procedure", "AsycudaDocumentSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Customs_Procedure_Document_Type", "Document_Type")]
        public Document_Type Document_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_Customs_Procedure_Document_Type", "Document_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_Customs_Procedure_Document_Type", "Document_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document_Type> Document_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_Customs_Procedure_Document_Type", "Document_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_Customs_Procedure_Document_Type", "Document_Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "xcuda_ASYCUDA_ExtendedProperties")]
        public EntityCollection<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "xcuda_ASYCUDA_ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "xcuda_ASYCUDA_ExtendedProperties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="Document_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document_Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document_Type object.
        /// </summary>
        /// <param name="document_TypeId">Initial value of the Document_TypeId property.</param>
        public static Document_Type CreateDocument_Type(global::System.Int32 document_TypeId)
        {
            Document_Type document_Type = new Document_Type();
            document_Type.Document_TypeId = document_TypeId;
            return document_Type;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Document_TypeId
        {
            get
            {
                return _Document_TypeId;
            }
            set
            {
                if (_Document_TypeId != value)
                {
                    OnDocument_TypeIdChanging(value);
                    ReportPropertyChanging("Document_TypeId");
                    _Document_TypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Document_TypeId");
                    OnDocument_TypeIdChanged();
                }
            }
        }
        private global::System.Int32 _Document_TypeId;
        partial void OnDocument_TypeIdChanging(global::System.Int32 value);
        partial void OnDocument_TypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type_of_declaration
        {
            get
            {
                return _Type_of_declaration;
            }
            set
            {
                OnType_of_declarationChanging(value);
                ReportPropertyChanging("Type_of_declaration");
                _Type_of_declaration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type_of_declaration");
                OnType_of_declarationChanged();
            }
        }
        private global::System.String _Type_of_declaration;
        partial void OnType_of_declarationChanging(global::System.String value);
        partial void OnType_of_declarationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declaration_gen_procedure_code
        {
            get
            {
                return _Declaration_gen_procedure_code;
            }
            set
            {
                OnDeclaration_gen_procedure_codeChanging(value);
                ReportPropertyChanging("Declaration_gen_procedure_code");
                _Declaration_gen_procedure_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declaration_gen_procedure_code");
                OnDeclaration_gen_procedure_codeChanged();
            }
        }
        private global::System.String _Declaration_gen_procedure_code;
        partial void OnDeclaration_gen_procedure_codeChanging(global::System.String value);
        partial void OnDeclaration_gen_procedure_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_AsycudaDocumentSet_Document_Type", "AsycudaDocumentSet")]
        public EntityCollection<AsycudaDocumentSet> AsycudaDocumentSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Document_Type", "AsycudaDocumentSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_AsycudaDocumentSet_Document_Type", "AsycudaDocumentSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Customs_Procedure_Document_Type", "Customs_Procedure")]
        public EntityCollection<Customs_Procedure> Customs_Procedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customs_Procedure>("WaterNutDB.DataLayer.FK_Customs_Procedure_Document_Type", "Customs_Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customs_Procedure>("WaterNutDB.DataLayer.FK_Customs_Procedure_Document_Type", "Customs_Procedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "xcuda_ASYCUDA_ExtendedProperties")]
        public EntityCollection<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "xcuda_ASYCUDA_ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "xcuda_ASYCUDA_ExtendedProperties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="EntryPreviousItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntryPreviousItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntryPreviousItems object.
        /// </summary>
        /// <param name="previousItem_Id">Initial value of the PreviousItem_Id property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        /// <param name="entryPreviousItemId">Initial value of the EntryPreviousItemId property.</param>
        public static EntryPreviousItems CreateEntryPreviousItems(global::System.Int32 previousItem_Id, global::System.Int32 item_Id, global::System.Int32 entryPreviousItemId)
        {
            EntryPreviousItems entryPreviousItems = new EntryPreviousItems();
            entryPreviousItems.PreviousItem_Id = previousItem_Id;
            entryPreviousItems.Item_Id = item_Id;
            entryPreviousItems.EntryPreviousItemId = entryPreviousItemId;
            return entryPreviousItems;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PreviousItem_Id
        {
            get
            {
                return _PreviousItem_Id;
            }
            set
            {
                OnPreviousItem_IdChanging(value);
                ReportPropertyChanging("PreviousItem_Id");
                _PreviousItem_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousItem_Id");
                OnPreviousItem_IdChanged();
            }
        }
        private global::System.Int32 _PreviousItem_Id;
        partial void OnPreviousItem_IdChanging(global::System.Int32 value);
        partial void OnPreviousItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryPreviousItemId
        {
            get
            {
                return _EntryPreviousItemId;
            }
            set
            {
                if (_EntryPreviousItemId != value)
                {
                    OnEntryPreviousItemIdChanging(value);
                    ReportPropertyChanging("EntryPreviousItemId");
                    _EntryPreviousItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryPreviousItemId");
                    OnEntryPreviousItemIdChanged();
                }
            }
        }
        private global::System.Int32 _EntryPreviousItemId;
        partial void OnEntryPreviousItemIdChanging(global::System.Int32 value);
        partial void OnEntryPreviousItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_EntryPreviousItems_xcuda_Item", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_EntryPreviousItems_xcuda_Item", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_EntryPreviousItems_xcuda_Item", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_EntryPreviousItems_xcuda_Item", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_EntryPreviousItems_xcuda_Item", "xcuda_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="ExportTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExportTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExportTemplate object.
        /// </summary>
        /// <param name="exportTemplateId">Initial value of the ExportTemplateId property.</param>
        /// <param name="applicationSettingsId">Initial value of the ApplicationSettingsId property.</param>
        public static ExportTemplate CreateExportTemplate(global::System.Int32 exportTemplateId, global::System.Int32 applicationSettingsId)
        {
            ExportTemplate exportTemplate = new ExportTemplate();
            exportTemplate.ExportTemplateId = exportTemplateId;
            exportTemplate.ApplicationSettingsId = applicationSettingsId;
            return exportTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExportTemplateId
        {
            get
            {
                return _ExportTemplateId;
            }
            set
            {
                if (_ExportTemplateId != value)
                {
                    OnExportTemplateIdChanging(value);
                    ReportPropertyChanging("ExportTemplateId");
                    _ExportTemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExportTemplateId");
                    OnExportTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _ExportTemplateId;
        partial void OnExportTemplateIdChanging(global::System.Int32 value);
        partial void OnExportTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exporter_code
        {
            get
            {
                return _Exporter_code;
            }
            set
            {
                OnExporter_codeChanging(value);
                ReportPropertyChanging("Exporter_code");
                _Exporter_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exporter_code");
                OnExporter_codeChanged();
            }
        }
        private global::System.String _Exporter_code;
        partial void OnExporter_codeChanging(global::System.String value);
        partial void OnExporter_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exporter_name
        {
            get
            {
                return _Exporter_name;
            }
            set
            {
                OnExporter_nameChanging(value);
                ReportPropertyChanging("Exporter_name");
                _Exporter_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exporter_name");
                OnExporter_nameChanged();
            }
        }
        private global::System.String _Exporter_name;
        partial void OnExporter_nameChanging(global::System.String value);
        partial void OnExporter_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Consignee_code
        {
            get
            {
                return _Consignee_code;
            }
            set
            {
                OnConsignee_codeChanging(value);
                ReportPropertyChanging("Consignee_code");
                _Consignee_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Consignee_code");
                OnConsignee_codeChanged();
            }
        }
        private global::System.String _Consignee_code;
        partial void OnConsignee_codeChanging(global::System.String value);
        partial void OnConsignee_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Consignee_name
        {
            get
            {
                return _Consignee_name;
            }
            set
            {
                OnConsignee_nameChanging(value);
                ReportPropertyChanging("Consignee_name");
                _Consignee_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Consignee_name");
                OnConsignee_nameChanged();
            }
        }
        private global::System.String _Consignee_name;
        partial void OnConsignee_nameChanging(global::System.String value);
        partial void OnConsignee_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Financial_code
        {
            get
            {
                return _Financial_code;
            }
            set
            {
                OnFinancial_codeChanging(value);
                ReportPropertyChanging("Financial_code");
                _Financial_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Financial_code");
                OnFinancial_codeChanged();
            }
        }
        private global::System.String _Financial_code;
        partial void OnFinancial_codeChanging(global::System.String value);
        partial void OnFinancial_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customs_clearance_office_code
        {
            get
            {
                return _Customs_clearance_office_code;
            }
            set
            {
                OnCustoms_clearance_office_codeChanging(value);
                ReportPropertyChanging("Customs_clearance_office_code");
                _Customs_clearance_office_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customs_clearance_office_code");
                OnCustoms_clearance_office_codeChanged();
            }
        }
        private global::System.String _Customs_clearance_office_code;
        partial void OnCustoms_clearance_office_codeChanging(global::System.String value);
        partial void OnCustoms_clearance_office_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customs_Procedure
        {
            get
            {
                return _Customs_Procedure;
            }
            set
            {
                OnCustoms_ProcedureChanging(value);
                ReportPropertyChanging("Customs_Procedure");
                _Customs_Procedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customs_Procedure");
                OnCustoms_ProcedureChanged();
            }
        }
        private global::System.String _Customs_Procedure;
        partial void OnCustoms_ProcedureChanging(global::System.String value);
        partial void OnCustoms_ProcedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declarant_code
        {
            get
            {
                return _Declarant_code;
            }
            set
            {
                OnDeclarant_codeChanging(value);
                ReportPropertyChanging("Declarant_code");
                _Declarant_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declarant_code");
                OnDeclarant_codeChanged();
            }
        }
        private global::System.String _Declarant_code;
        partial void OnDeclarant_codeChanging(global::System.String value);
        partial void OnDeclarant_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country_first_destination
        {
            get
            {
                return _Country_first_destination;
            }
            set
            {
                OnCountry_first_destinationChanging(value);
                ReportPropertyChanging("Country_first_destination");
                _Country_first_destination = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country_first_destination");
                OnCountry_first_destinationChanged();
            }
        }
        private global::System.String _Country_first_destination;
        partial void OnCountry_first_destinationChanging(global::System.String value);
        partial void OnCountry_first_destinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Trading_country
        {
            get
            {
                return _Trading_country;
            }
            set
            {
                OnTrading_countryChanging(value);
                ReportPropertyChanging("Trading_country");
                _Trading_country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Trading_country");
                OnTrading_countryChanged();
            }
        }
        private global::System.String _Trading_country;
        partial void OnTrading_countryChanging(global::System.String value);
        partial void OnTrading_countryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Export_country_code
        {
            get
            {
                return _Export_country_code;
            }
            set
            {
                OnExport_country_codeChanging(value);
                ReportPropertyChanging("Export_country_code");
                _Export_country_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Export_country_code");
                OnExport_country_codeChanged();
            }
        }
        private global::System.String _Export_country_code;
        partial void OnExport_country_codeChanging(global::System.String value);
        partial void OnExport_country_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Destination_country_code
        {
            get
            {
                return _Destination_country_code;
            }
            set
            {
                OnDestination_country_codeChanging(value);
                ReportPropertyChanging("Destination_country_code");
                _Destination_country_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Destination_country_code");
                OnDestination_country_codeChanged();
            }
        }
        private global::System.String _Destination_country_code;
        partial void OnDestination_country_codeChanging(global::System.String value);
        partial void OnDestination_country_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransportName
        {
            get
            {
                return _TransportName;
            }
            set
            {
                OnTransportNameChanging(value);
                ReportPropertyChanging("TransportName");
                _TransportName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransportName");
                OnTransportNameChanged();
            }
        }
        private global::System.String _TransportName;
        partial void OnTransportNameChanging(global::System.String value);
        partial void OnTransportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransportNationality
        {
            get
            {
                return _TransportNationality;
            }
            set
            {
                OnTransportNationalityChanging(value);
                ReportPropertyChanging("TransportNationality");
                _TransportNationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransportNationality");
                OnTransportNationalityChanged();
            }
        }
        private global::System.String _TransportNationality;
        partial void OnTransportNationalityChanging(global::System.String value);
        partial void OnTransportNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location_of_goods
        {
            get
            {
                return _Location_of_goods;
            }
            set
            {
                OnLocation_of_goodsChanging(value);
                ReportPropertyChanging("Location_of_goods");
                _Location_of_goods = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location_of_goods");
                OnLocation_of_goodsChanged();
            }
        }
        private global::System.String _Location_of_goods;
        partial void OnLocation_of_goodsChanging(global::System.String value);
        partial void OnLocation_of_goodsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Border_information_Mode
        {
            get
            {
                return _Border_information_Mode;
            }
            set
            {
                OnBorder_information_ModeChanging(value);
                ReportPropertyChanging("Border_information_Mode");
                _Border_information_Mode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Border_information_Mode");
                OnBorder_information_ModeChanged();
            }
        }
        private global::System.String _Border_information_Mode;
        partial void OnBorder_information_ModeChanging(global::System.String value);
        partial void OnBorder_information_ModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Delivery_terms_Code
        {
            get
            {
                return _Delivery_terms_Code;
            }
            set
            {
                OnDelivery_terms_CodeChanging(value);
                ReportPropertyChanging("Delivery_terms_Code");
                _Delivery_terms_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Delivery_terms_Code");
                OnDelivery_terms_CodeChanged();
            }
        }
        private global::System.String _Delivery_terms_Code;
        partial void OnDelivery_terms_CodeChanging(global::System.String value);
        partial void OnDelivery_terms_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Border_office_Code
        {
            get
            {
                return _Border_office_Code;
            }
            set
            {
                OnBorder_office_CodeChanging(value);
                ReportPropertyChanging("Border_office_Code");
                _Border_office_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Border_office_Code");
                OnBorder_office_CodeChanged();
            }
        }
        private global::System.String _Border_office_Code;
        partial void OnBorder_office_CodeChanging(global::System.String value);
        partial void OnBorder_office_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gs_Invoice_Currency_code
        {
            get
            {
                return _Gs_Invoice_Currency_code;
            }
            set
            {
                OnGs_Invoice_Currency_codeChanging(value);
                ReportPropertyChanging("Gs_Invoice_Currency_code");
                _Gs_Invoice_Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gs_Invoice_Currency_code");
                OnGs_Invoice_Currency_codeChanged();
            }
        }
        private global::System.String _Gs_Invoice_Currency_code;
        partial void OnGs_Invoice_Currency_codeChanging(global::System.String value);
        partial void OnGs_Invoice_Currency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Warehouse_Identification
        {
            get
            {
                return _Warehouse_Identification;
            }
            set
            {
                OnWarehouse_IdentificationChanging(value);
                ReportPropertyChanging("Warehouse_Identification");
                _Warehouse_Identification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Warehouse_Identification");
                OnWarehouse_IdentificationChanged();
            }
        }
        private global::System.String _Warehouse_Identification;
        partial void OnWarehouse_IdentificationChanging(global::System.String value);
        partial void OnWarehouse_IdentificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Warehouse_Delay
        {
            get
            {
                return _Warehouse_Delay;
            }
            set
            {
                OnWarehouse_DelayChanging(value);
                ReportPropertyChanging("Warehouse_Delay");
                _Warehouse_Delay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Warehouse_Delay");
                OnWarehouse_DelayChanged();
            }
        }
        private global::System.String _Warehouse_Delay;
        partial void OnWarehouse_DelayChanging(global::System.String value);
        partial void OnWarehouse_DelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number_of_packages
        {
            get
            {
                return _Number_of_packages;
            }
            set
            {
                OnNumber_of_packagesChanging(value);
                ReportPropertyChanging("Number_of_packages");
                _Number_of_packages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number_of_packages");
                OnNumber_of_packagesChanged();
            }
        }
        private global::System.String _Number_of_packages;
        partial void OnNumber_of_packagesChanging(global::System.String value);
        partial void OnNumber_of_packagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Total_number_of_packages
        {
            get
            {
                return _Total_number_of_packages;
            }
            set
            {
                OnTotal_number_of_packagesChanging(value);
                ReportPropertyChanging("Total_number_of_packages");
                _Total_number_of_packages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Total_number_of_packages");
                OnTotal_number_of_packagesChanged();
            }
        }
        private global::System.String _Total_number_of_packages;
        partial void OnTotal_number_of_packagesChanging(global::System.String value);
        partial void OnTotal_number_of_packagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Deffered_payment_reference
        {
            get
            {
                return _Deffered_payment_reference;
            }
            set
            {
                OnDeffered_payment_referenceChanging(value);
                ReportPropertyChanging("Deffered_payment_reference");
                _Deffered_payment_reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Deffered_payment_reference");
                OnDeffered_payment_referenceChanged();
            }
        }
        private global::System.String _Deffered_payment_reference;
        partial void OnDeffered_payment_referenceChanging(global::System.String value);
        partial void OnDeffered_payment_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationSettingsId
        {
            get
            {
                return _ApplicationSettingsId;
            }
            set
            {
                OnApplicationSettingsIdChanging(value);
                ReportPropertyChanging("ApplicationSettingsId");
                _ApplicationSettingsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSettingsId");
                OnApplicationSettingsIdChanged();
            }
        }
        private global::System.Int32 _ApplicationSettingsId;
        partial void OnApplicationSettingsIdChanging(global::System.Int32 value);
        partial void OnApplicationSettingsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttachedDocumentCode
        {
            get
            {
                return _AttachedDocumentCode;
            }
            set
            {
                OnAttachedDocumentCodeChanging(value);
                ReportPropertyChanging("AttachedDocumentCode");
                _AttachedDocumentCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachedDocumentCode");
                OnAttachedDocumentCodeChanged();
            }
        }
        private global::System.String _AttachedDocumentCode;
        partial void OnAttachedDocumentCodeChanging(global::System.String value);
        partial void OnAttachedDocumentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manifest
        {
            get
            {
                return _Manifest;
            }
            set
            {
                OnManifestChanging(value);
                ReportPropertyChanging("Manifest");
                _Manifest = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manifest");
                OnManifestChanged();
            }
        }
        private global::System.String _Manifest;
        partial void OnManifestChanging(global::System.String value);
        partial void OnManifestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BL
        {
            get
            {
                return _BL;
            }
            set
            {
                OnBLChanging(value);
                ReportPropertyChanging("BL");
                _BL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BL");
                OnBLChanged();
            }
        }
        private global::System.String _BL;
        partial void OnBLChanging(global::System.String value);
        partial void OnBLChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "xcuda_ASYCUDA_ExtendedProperties")]
        public EntityCollection<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "xcuda_ASYCUDA_ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "xcuda_ASYCUDA_ExtendedProperties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="InventoryItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryItems object.
        /// </summary>
        /// <param name="itemNumber">Initial value of the ItemNumber property.</param>
        /// <param name="applicationSettingsId">Initial value of the ApplicationSettingsId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static InventoryItems CreateInventoryItems(global::System.String itemNumber, global::System.Int32 applicationSettingsId, global::System.String description, global::System.Int32 id)
        {
            InventoryItems inventoryItems = new InventoryItems();
            inventoryItems.ItemNumber = itemNumber;
            inventoryItems.ApplicationSettingsId = applicationSettingsId;
            inventoryItems.Description = description;
            inventoryItems.Id = id;
            return inventoryItems;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemNumber
        {
            get
            {
                return _ItemNumber;
            }
            set
            {
                OnItemNumberChanging(value);
                ReportPropertyChanging("ItemNumber");
                _ItemNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemNumber");
                OnItemNumberChanged();
            }
        }
        private global::System.String _ItemNumber;
        partial void OnItemNumberChanging(global::System.String value);
        partial void OnItemNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationSettingsId
        {
            get
            {
                return _ApplicationSettingsId;
            }
            set
            {
                OnApplicationSettingsIdChanging(value);
                ReportPropertyChanging("ApplicationSettingsId");
                _ApplicationSettingsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSettingsId");
                OnApplicationSettingsIdChanged();
            }
        }
        private global::System.Int32 _ApplicationSettingsId;
        partial void OnApplicationSettingsIdChanging(global::System.Int32 value);
        partial void OnApplicationSettingsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TariffCode
        {
            get
            {
                return _TariffCode;
            }
            set
            {
                OnTariffCodeChanging(value);
                ReportPropertyChanging("TariffCode");
                _TariffCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TariffCode");
                OnTariffCodeChanged();
            }
        }
        private global::System.String _TariffCode;
        partial void OnTariffCodeChanging(global::System.String value);
        partial void OnTariffCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryTimeStamp
        {
            get
            {
                return _EntryTimeStamp;
            }
            set
            {
                OnEntryTimeStampChanging(value);
                ReportPropertyChanging("EntryTimeStamp");
                _EntryTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTimeStamp");
                OnEntryTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryTimeStamp;
        partial void OnEntryTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_InventoryItems_TariffCodes", "TariffCodes")]
        public TariffCodes TariffCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCodes>("WaterNutDB.DataLayer.FK_InventoryItems_TariffCodes", "TariffCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCodes>("WaterNutDB.DataLayer.FK_InventoryItems_TariffCodes", "TariffCodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TariffCodes> TariffCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCodes>("WaterNutDB.DataLayer.FK_InventoryItems_TariffCodes", "TariffCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TariffCodes>("WaterNutDB.DataLayer.FK_InventoryItems_TariffCodes", "TariffCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "InventoryItemsxcuda_Inventory_Item", "xcuda_Inventory_Item")]
        public EntityCollection<xcuda_Inventory_Item> xcuda_Inventory_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Inventory_Item>("WaterNutDB.DataLayer.InventoryItemsxcuda_Inventory_Item", "xcuda_Inventory_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Inventory_Item>("WaterNutDB.DataLayer.InventoryItemsxcuda_Inventory_Item", "xcuda_Inventory_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="InventoryItemsEx")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryItemsEx : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryItemsEx object.
        /// </summary>
        /// <param name="itemNumber">Initial value of the ItemNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="applicationSettingsId">Initial value of the ApplicationSettingsId property.</param>
        /// <param name="inventoryItemId">Initial value of the InventoryItemId property.</param>
        public static InventoryItemsEx CreateInventoryItemsEx(global::System.String itemNumber, global::System.String description, global::System.Int32 applicationSettingsId, global::System.Int32 inventoryItemId)
        {
            InventoryItemsEx inventoryItemsEx = new InventoryItemsEx();
            inventoryItemsEx.ItemNumber = itemNumber;
            inventoryItemsEx.Description = description;
            inventoryItemsEx.ApplicationSettingsId = applicationSettingsId;
            inventoryItemsEx.InventoryItemId = inventoryItemId;
            return inventoryItemsEx;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemNumber
        {
            get
            {
                return _ItemNumber;
            }
            set
            {
                if (_ItemNumber != value)
                {
                    OnItemNumberChanging(value);
                    ReportPropertyChanging("ItemNumber");
                    _ItemNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ItemNumber");
                    OnItemNumberChanged();
                }
            }
        }
        private global::System.String _ItemNumber;
        partial void OnItemNumberChanging(global::System.String value);
        partial void OnItemNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TariffCode
        {
            get
            {
                return _TariffCode;
            }
            set
            {
                OnTariffCodeChanging(value);
                ReportPropertyChanging("TariffCode");
                _TariffCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TariffCode");
                OnTariffCodeChanged();
            }
        }
        private global::System.String _TariffCode;
        partial void OnTariffCodeChanging(global::System.String value);
        partial void OnTariffCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryTimeStamp
        {
            get
            {
                return _EntryTimeStamp;
            }
            set
            {
                OnEntryTimeStampChanging(value);
                ReportPropertyChanging("EntryTimeStamp");
                _EntryTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTimeStamp");
                OnEntryTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryTimeStamp;
        partial void OnEntryTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuppUnitCode2
        {
            get
            {
                return _SuppUnitCode2;
            }
            set
            {
                OnSuppUnitCode2Changing(value);
                ReportPropertyChanging("SuppUnitCode2");
                _SuppUnitCode2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuppUnitCode2");
                OnSuppUnitCode2Changed();
            }
        }
        private global::System.String _SuppUnitCode2;
        partial void OnSuppUnitCode2Changing(global::System.String value);
        partial void OnSuppUnitCode2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SuppQty
        {
            get
            {
                return _SuppQty;
            }
            set
            {
                OnSuppQtyChanging(value);
                ReportPropertyChanging("SuppQty");
                _SuppQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuppQty");
                OnSuppQtyChanged();
            }
        }
        private Nullable<global::System.Double> _SuppQty;
        partial void OnSuppQtyChanging(Nullable<global::System.Double> value);
        partial void OnSuppQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationSettingsId
        {
            get
            {
                return _ApplicationSettingsId;
            }
            set
            {
                OnApplicationSettingsIdChanging(value);
                ReportPropertyChanging("ApplicationSettingsId");
                _ApplicationSettingsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationSettingsId");
                OnApplicationSettingsIdChanged();
            }
        }
        private global::System.Int32 _ApplicationSettingsId;
        partial void OnApplicationSettingsIdChanging(global::System.Int32 value);
        partial void OnApplicationSettingsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryItemId
        {
            get
            {
                return _InventoryItemId;
            }
            set
            {
                if (_InventoryItemId != value)
                {
                    OnInventoryItemIdChanging(value);
                    ReportPropertyChanging("InventoryItemId");
                    _InventoryItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryItemId");
                    OnInventoryItemIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryItemId;
        partial void OnInventoryItemIdChanging(global::System.Int32 value);
        partial void OnInventoryItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "TariffCodesInventoryItemsEx", "TariffCodes")]
        public TariffCodes TariffCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCodes>("WaterNutDB.DataLayer.TariffCodesInventoryItemsEx", "TariffCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCodes>("WaterNutDB.DataLayer.TariffCodesInventoryItemsEx", "TariffCodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TariffCodes> TariffCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCodes>("WaterNutDB.DataLayer.TariffCodesInventoryItemsEx", "TariffCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TariffCodes>("WaterNutDB.DataLayer.TariffCodesInventoryItemsEx", "TariffCodes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="PackageTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PackageTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PackageTypes object.
        /// </summary>
        /// <param name="packageType">Initial value of the PackageType property.</param>
        public static PackageTypes CreatePackageTypes(global::System.String packageType)
        {
            PackageTypes packageTypes = new PackageTypes();
            packageTypes.PackageType = packageType;
            return packageTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageType
        {
            get
            {
                return _PackageType;
            }
            set
            {
                if (_PackageType != value)
                {
                    OnPackageTypeChanging(value);
                    ReportPropertyChanging("PackageType");
                    _PackageType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PackageType");
                    OnPackageTypeChanged();
                }
            }
        }
        private global::System.String _PackageType;
        partial void OnPackageTypeChanging(global::System.String value);
        partial void OnPackageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageDescription
        {
            get
            {
                return _PackageDescription;
            }
            set
            {
                OnPackageDescriptionChanging(value);
                ReportPropertyChanging("PackageDescription");
                _PackageDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PackageDescription");
                OnPackageDescriptionChanged();
            }
        }
        private global::System.String _PackageDescription;
        partial void OnPackageDescriptionChanging(global::System.String value);
        partial void OnPackageDescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="TariffCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TariffCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TariffCategory object.
        /// </summary>
        /// <param name="tariffCategoryCode">Initial value of the TariffCategoryCode property.</param>
        public static TariffCategory CreateTariffCategory(global::System.String tariffCategoryCode)
        {
            TariffCategory tariffCategory = new TariffCategory();
            tariffCategory.TariffCategoryCode = tariffCategoryCode;
            return tariffCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TariffCategoryCode
        {
            get
            {
                return _TariffCategoryCode;
            }
            set
            {
                if (_TariffCategoryCode != value)
                {
                    OnTariffCategoryCodeChanging(value);
                    ReportPropertyChanging("TariffCategoryCode");
                    _TariffCategoryCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TariffCategoryCode");
                    OnTariffCategoryCodeChanged();
                }
            }
        }
        private global::System.String _TariffCategoryCode;
        partial void OnTariffCategoryCodeChanging(global::System.String value);
        partial void OnTariffCategoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentTariffCategoryCode
        {
            get
            {
                return _ParentTariffCategoryCode;
            }
            set
            {
                OnParentTariffCategoryCodeChanging(value);
                ReportPropertyChanging("ParentTariffCategoryCode");
                _ParentTariffCategoryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentTariffCategoryCode");
                OnParentTariffCategoryCodeChanged();
            }
        }
        private global::System.String _ParentTariffCategoryCode;
        partial void OnParentTariffCategoryCodeChanging(global::System.String value);
        partial void OnParentTariffCategoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LicenseRequired
        {
            get
            {
                return _LicenseRequired;
            }
            set
            {
                OnLicenseRequiredChanging(value);
                ReportPropertyChanging("LicenseRequired");
                _LicenseRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseRequired");
                OnLicenseRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _LicenseRequired;
        partial void OnLicenseRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnLicenseRequiredChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_TariffCodes_TariffCategory", "TariffCodes")]
        public EntityCollection<TariffCodes> TariffCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TariffCodes>("WaterNutDB.DataLayer.FK_TariffCodes_TariffCategory", "TariffCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TariffCodes>("WaterNutDB.DataLayer.FK_TariffCodes_TariffCategory", "TariffCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategoryCodeSuppUnit")]
        public EntityCollection<TariffCategoryCodeSuppUnit> TariffCategoryCodeSuppUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TariffCategoryCodeSuppUnit>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategoryCodeSuppUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TariffCategoryCodeSuppUnit>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategoryCodeSuppUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="TariffCategoryCodeSuppUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TariffCategoryCodeSuppUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TariffCategoryCodeSuppUnit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tariffCategoryCode">Initial value of the TariffCategoryCode property.</param>
        /// <param name="tariffSupUnitId">Initial value of the TariffSupUnitId property.</param>
        public static TariffCategoryCodeSuppUnit CreateTariffCategoryCodeSuppUnit(global::System.Int32 id, global::System.String tariffCategoryCode, global::System.Int32 tariffSupUnitId)
        {
            TariffCategoryCodeSuppUnit tariffCategoryCodeSuppUnit = new TariffCategoryCodeSuppUnit();
            tariffCategoryCodeSuppUnit.Id = id;
            tariffCategoryCodeSuppUnit.TariffCategoryCode = tariffCategoryCode;
            tariffCategoryCodeSuppUnit.TariffSupUnitId = tariffSupUnitId;
            return tariffCategoryCodeSuppUnit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TariffCategoryCode
        {
            get
            {
                return _TariffCategoryCode;
            }
            set
            {
                OnTariffCategoryCodeChanging(value);
                ReportPropertyChanging("TariffCategoryCode");
                _TariffCategoryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TariffCategoryCode");
                OnTariffCategoryCodeChanged();
            }
        }
        private global::System.String _TariffCategoryCode;
        partial void OnTariffCategoryCodeChanging(global::System.String value);
        partial void OnTariffCategoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TariffSupUnitId
        {
            get
            {
                return _TariffSupUnitId;
            }
            set
            {
                OnTariffSupUnitIdChanging(value);
                ReportPropertyChanging("TariffSupUnitId");
                _TariffSupUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TariffSupUnitId");
                OnTariffSupUnitIdChanged();
            }
        }
        private global::System.Int32 _TariffSupUnitId;
        partial void OnTariffSupUnitIdChanging(global::System.Int32 value);
        partial void OnTariffSupUnitIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategory")]
        public TariffCategory TariffCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TariffCategory> TariffCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffCategory", "TariffCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffSupUnitLkps")]
        public TariffSupUnitLkps TariffSupUnitLkps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffSupUnitLkps>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffSupUnitLkps").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffSupUnitLkps>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffSupUnitLkps").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TariffSupUnitLkps> TariffSupUnitLkpsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffSupUnitLkps>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffSupUnitLkps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TariffSupUnitLkps>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffSupUnitLkps", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="TariffCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TariffCodes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TariffCodes object.
        /// </summary>
        /// <param name="tariffCode">Initial value of the TariffCode property.</param>
        public static TariffCodes CreateTariffCodes(global::System.String tariffCode)
        {
            TariffCodes tariffCodes = new TariffCodes();
            tariffCodes.TariffCode = tariffCode;
            return tariffCodes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TariffCode
        {
            get
            {
                return _TariffCode;
            }
            set
            {
                if (_TariffCode != value)
                {
                    OnTariffCodeChanging(value);
                    ReportPropertyChanging("TariffCode");
                    _TariffCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TariffCode");
                    OnTariffCodeChanged();
                }
            }
        }
        private global::System.String _TariffCode;
        partial void OnTariffCodeChanging(global::System.String value);
        partial void OnTariffCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RateofDuty
        {
            get
            {
                return _RateofDuty;
            }
            set
            {
                OnRateofDutyChanging(value);
                ReportPropertyChanging("RateofDuty");
                _RateofDuty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RateofDuty");
                OnRateofDutyChanged();
            }
        }
        private global::System.String _RateofDuty;
        partial void OnRateofDutyChanging(global::System.String value);
        partial void OnRateofDutyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnvironmentalLevy
        {
            get
            {
                return _EnvironmentalLevy;
            }
            set
            {
                OnEnvironmentalLevyChanging(value);
                ReportPropertyChanging("EnvironmentalLevy");
                _EnvironmentalLevy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnvironmentalLevy");
                OnEnvironmentalLevyChanged();
            }
        }
        private global::System.String _EnvironmentalLevy;
        partial void OnEnvironmentalLevyChanging(global::System.String value);
        partial void OnEnvironmentalLevyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomsServiceCharge
        {
            get
            {
                return _CustomsServiceCharge;
            }
            set
            {
                OnCustomsServiceChargeChanging(value);
                ReportPropertyChanging("CustomsServiceCharge");
                _CustomsServiceCharge = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomsServiceCharge");
                OnCustomsServiceChargeChanged();
            }
        }
        private global::System.String _CustomsServiceCharge;
        partial void OnCustomsServiceChargeChanging(global::System.String value);
        partial void OnCustomsServiceChargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExciseTax
        {
            get
            {
                return _ExciseTax;
            }
            set
            {
                OnExciseTaxChanging(value);
                ReportPropertyChanging("ExciseTax");
                _ExciseTax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExciseTax");
                OnExciseTaxChanged();
            }
        }
        private global::System.String _ExciseTax;
        partial void OnExciseTaxChanging(global::System.String value);
        partial void OnExciseTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VatRate
        {
            get
            {
                return _VatRate;
            }
            set
            {
                OnVatRateChanging(value);
                ReportPropertyChanging("VatRate");
                _VatRate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VatRate");
                OnVatRateChanged();
            }
        }
        private global::System.String _VatRate;
        partial void OnVatRateChanging(global::System.String value);
        partial void OnVatRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PetrolTax
        {
            get
            {
                return _PetrolTax;
            }
            set
            {
                OnPetrolTaxChanging(value);
                ReportPropertyChanging("PetrolTax");
                _PetrolTax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PetrolTax");
                OnPetrolTaxChanged();
            }
        }
        private global::System.String _PetrolTax;
        partial void OnPetrolTaxChanging(global::System.String value);
        partial void OnPetrolTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Units
        {
            get
            {
                return _Units;
            }
            set
            {
                OnUnitsChanging(value);
                ReportPropertyChanging("Units");
                _Units = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Units");
                OnUnitsChanged();
            }
        }
        private global::System.String _Units;
        partial void OnUnitsChanging(global::System.String value);
        partial void OnUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteRev3
        {
            get
            {
                return _SiteRev3;
            }
            set
            {
                OnSiteRev3Changing(value);
                ReportPropertyChanging("SiteRev3");
                _SiteRev3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteRev3");
                OnSiteRev3Changed();
            }
        }
        private global::System.String _SiteRev3;
        partial void OnSiteRev3Changing(global::System.String value);
        partial void OnSiteRev3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TariffCategoryCode
        {
            get
            {
                return _TariffCategoryCode;
            }
            set
            {
                OnTariffCategoryCodeChanging(value);
                ReportPropertyChanging("TariffCategoryCode");
                _TariffCategoryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TariffCategoryCode");
                OnTariffCategoryCodeChanged();
            }
        }
        private global::System.String _TariffCategoryCode;
        partial void OnTariffCategoryCodeChanging(global::System.String value);
        partial void OnTariffCategoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LicenseRequired
        {
            get
            {
                return _LicenseRequired;
            }
            set
            {
                OnLicenseRequiredChanging(value);
                ReportPropertyChanging("LicenseRequired");
                _LicenseRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseRequired");
                OnLicenseRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _LicenseRequired;
        partial void OnLicenseRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnLicenseRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Invalid
        {
            get
            {
                return _Invalid;
            }
            set
            {
                OnInvalidChanging(value);
                ReportPropertyChanging("Invalid");
                _Invalid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Invalid");
                OnInvalidChanged();
            }
        }
        private Nullable<global::System.Boolean> _Invalid;
        partial void OnInvalidChanging(Nullable<global::System.Boolean> value);
        partial void OnInvalidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseDescription
        {
            get
            {
                return _LicenseDescription;
            }
            set
            {
                OnLicenseDescriptionChanging(value);
                ReportPropertyChanging("LicenseDescription");
                _LicenseDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseDescription");
                OnLicenseDescriptionChanged();
            }
        }
        private global::System.String _LicenseDescription;
        partial void OnLicenseDescriptionChanging(global::System.String value);
        partial void OnLicenseDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_TariffCodes_TariffCategory", "TariffCategory")]
        public TariffCategory TariffCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCodes_TariffCategory", "TariffCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCodes_TariffCategory", "TariffCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TariffCategory> TariffCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCodes_TariffCategory", "TariffCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TariffCategory>("WaterNutDB.DataLayer.FK_TariffCodes_TariffCategory", "TariffCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "TariffCodesInventoryItemsEx", "InventoryItemsEx")]
        public EntityCollection<InventoryItemsEx> InventoryItemsEx
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryItemsEx>("WaterNutDB.DataLayer.TariffCodesInventoryItemsEx", "InventoryItemsEx");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryItemsEx>("WaterNutDB.DataLayer.TariffCodesInventoryItemsEx", "InventoryItemsEx", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_InventoryItems_TariffCodes", "InventoryItems")]
        public EntityCollection<InventoryItems> InventoryItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryItems>("WaterNutDB.DataLayer.FK_InventoryItems_TariffCodes", "InventoryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryItems>("WaterNutDB.DataLayer.FK_InventoryItems_TariffCodes", "InventoryItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="TariffSupUnitLkps")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TariffSupUnitLkps : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TariffSupUnitLkps object.
        /// </summary>
        /// <param name="suppUnitCode2">Initial value of the SuppUnitCode2 property.</param>
        /// <param name="suppQty">Initial value of the SuppQty property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static TariffSupUnitLkps CreateTariffSupUnitLkps(global::System.String suppUnitCode2, global::System.Double suppQty, global::System.Int32 id)
        {
            TariffSupUnitLkps tariffSupUnitLkps = new TariffSupUnitLkps();
            tariffSupUnitLkps.SuppUnitCode2 = suppUnitCode2;
            tariffSupUnitLkps.SuppQty = suppQty;
            tariffSupUnitLkps.Id = id;
            return tariffSupUnitLkps;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SuppUnitCode2
        {
            get
            {
                return _SuppUnitCode2;
            }
            set
            {
                OnSuppUnitCode2Changing(value);
                ReportPropertyChanging("SuppUnitCode2");
                _SuppUnitCode2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SuppUnitCode2");
                OnSuppUnitCode2Changed();
            }
        }
        private global::System.String _SuppUnitCode2;
        partial void OnSuppUnitCode2Changing(global::System.String value);
        partial void OnSuppUnitCode2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuppUnitName2
        {
            get
            {
                return _SuppUnitName2;
            }
            set
            {
                OnSuppUnitName2Changing(value);
                ReportPropertyChanging("SuppUnitName2");
                _SuppUnitName2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuppUnitName2");
                OnSuppUnitName2Changed();
            }
        }
        private global::System.String _SuppUnitName2;
        partial void OnSuppUnitName2Changing(global::System.String value);
        partial void OnSuppUnitName2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SuppQty
        {
            get
            {
                return _SuppQty;
            }
            set
            {
                OnSuppQtyChanging(value);
                ReportPropertyChanging("SuppQty");
                _SuppQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuppQty");
                OnSuppQtyChanged();
            }
        }
        private global::System.Double _SuppQty;
        partial void OnSuppQtyChanging(global::System.Double value);
        partial void OnSuppQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffCategoryCodeSuppUnit")]
        public EntityCollection<TariffCategoryCodeSuppUnit> TariffCategoryCodeSuppUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TariffCategoryCodeSuppUnit>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffCategoryCodeSuppUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TariffCategoryCodeSuppUnit>("WaterNutDB.DataLayer.FK_TariffCategoryCodeSuppUnit_TariffSupUnitLkps", "TariffCategoryCodeSuppUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Assessment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Assessment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Assessment object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Assessment Createxcuda_Assessment(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Assessment xcuda_Assessment = new xcuda_Assessment();
            xcuda_Assessment.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Assessment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Assessment", "xcuda_Identification")]
        public xcuda_Identification xcuda_Identification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Identification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Identification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Identification> xcuda_IdentificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Identification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Identification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Assessment_notice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Assessment_notice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Assessment_notice object.
        /// </summary>
        /// <param name="assessment_notice_Id">Initial value of the Assessment_notice_Id property.</param>
        public static xcuda_Assessment_notice Createxcuda_Assessment_notice(global::System.Int32 assessment_notice_Id)
        {
            xcuda_Assessment_notice xcuda_Assessment_notice = new xcuda_Assessment_notice();
            xcuda_Assessment_notice.Assessment_notice_Id = assessment_notice_Id;
            return xcuda_Assessment_notice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Assessment_notice_Id
        {
            get
            {
                return _Assessment_notice_Id;
            }
            set
            {
                if (_Assessment_notice_Id != value)
                {
                    OnAssessment_notice_IdChanging(value);
                    ReportPropertyChanging("Assessment_notice_Id");
                    _Assessment_notice_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Assessment_notice_Id");
                    OnAssessment_notice_IdChanged();
                }
            }
        }
        private global::System.Int32 _Assessment_notice_Id;
        partial void OnAssessment_notice_IdChanging(global::System.Int32 value);
        partial void OnAssessment_notice_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Assessment_notice", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Assessment_notice", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Assessment_notice", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Assessment_notice", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Assessment_notice", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_ASYCUDA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_ASYCUDA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_ASYCUDA object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_ASYCUDA Createxcuda_ASYCUDA(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_ASYCUDA xcuda_ASYCUDA = new xcuda_ASYCUDA();
            xcuda_ASYCUDA.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_ASYCUDA;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryTimeStamp
        {
            get
            {
                return _EntryTimeStamp;
            }
            set
            {
                OnEntryTimeStampChanging(value);
                ReportPropertyChanging("EntryTimeStamp");
                _EntryTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTimeStamp");
                OnEntryTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryTimeStamp;
        partial void OnEntryTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryTimeStampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Assessment_notice", "xcuda_Assessment_notice")]
        public EntityCollection<xcuda_Assessment_notice> xcuda_Assessment_notice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Assessment_notice>("WaterNutDB.DataLayer.FK_ASYCUDA_Assessment_notice", "xcuda_Assessment_notice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Assessment_notice>("WaterNutDB.DataLayer.FK_ASYCUDA_Assessment_notice", "xcuda_Assessment_notice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Container", "xcuda_Container")]
        public EntityCollection<xcuda_Container> xcuda_Container
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Container>("WaterNutDB.DataLayer.FK_ASYCUDA_Container", "xcuda_Container");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Container>("WaterNutDB.DataLayer.FK_ASYCUDA_Container", "xcuda_Container", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Declarant", "xcuda_Declarant")]
        public xcuda_Declarant xcuda_Declarant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Declarant>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_Declarant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Declarant>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_Declarant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Declarant> xcuda_DeclarantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Declarant>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_Declarant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Declarant>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_Declarant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Export_release", "xcuda_Export_release")]
        public EntityCollection<xcuda_Export_release> xcuda_Export_release
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Export_release>("WaterNutDB.DataLayer.FK_ASYCUDA_Export_release", "xcuda_Export_release");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Export_release>("WaterNutDB.DataLayer.FK_ASYCUDA_Export_release", "xcuda_Export_release", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Financial", "xcuda_Financial")]
        public EntityCollection<xcuda_Financial> xcuda_Financial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Financial>("WaterNutDB.DataLayer.FK_ASYCUDA_Financial", "xcuda_Financial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Financial>("WaterNutDB.DataLayer.FK_ASYCUDA_Financial", "xcuda_Financial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_General_information", "xcuda_General_information")]
        public xcuda_General_information xcuda_General_information
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_General_information").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_General_information").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_General_information> xcuda_General_informationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_General_information");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_General_information", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Global_taxes", "xcuda_Global_taxes")]
        public EntityCollection<xcuda_Global_taxes> xcuda_Global_taxes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Global_taxes>("WaterNutDB.DataLayer.FK_ASYCUDA_Global_taxes", "xcuda_Global_taxes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Global_taxes>("WaterNutDB.DataLayer.FK_ASYCUDA_Global_taxes", "xcuda_Global_taxes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Identification", "xcuda_Identification")]
        public xcuda_Identification xcuda_Identification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_Identification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_Identification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Identification> xcuda_IdentificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_Identification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_Identification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Item", "xcuda_Item")]
        public EntityCollection<xcuda_Item> xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Item>("WaterNutDB.DataLayer.FK_ASYCUDA_Item", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Item>("WaterNutDB.DataLayer.FK_ASYCUDA_Item", "xcuda_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_PreviousItem", "xcuda_PreviousItem")]
        public EntityCollection<xcuda_PreviousItem> xcuda_PreviousItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_PreviousItem>("WaterNutDB.DataLayer.FK_ASYCUDA_PreviousItem", "xcuda_PreviousItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_PreviousItem>("WaterNutDB.DataLayer.FK_ASYCUDA_PreviousItem", "xcuda_PreviousItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Property", "xcuda_Property")]
        public xcuda_Property xcuda_Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Property> xcuda_PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Suppliers_documents", "xcuda_Suppliers_documents")]
        public EntityCollection<xcuda_Suppliers_documents> xcuda_Suppliers_documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Suppliers_documents>("WaterNutDB.DataLayer.FK_ASYCUDA_Suppliers_documents", "xcuda_Suppliers_documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Suppliers_documents>("WaterNutDB.DataLayer.FK_ASYCUDA_Suppliers_documents", "xcuda_Suppliers_documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Transit", "xcuda_Transit")]
        public EntityCollection<xcuda_Transit> xcuda_Transit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Transit>("WaterNutDB.DataLayer.FK_ASYCUDA_Transit", "xcuda_Transit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Transit>("WaterNutDB.DataLayer.FK_ASYCUDA_Transit", "xcuda_Transit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Transport", "xcuda_Transport")]
        public EntityCollection<xcuda_Transport> xcuda_Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Transport>("WaterNutDB.DataLayer.FK_ASYCUDA_Transport", "xcuda_Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Transport>("WaterNutDB.DataLayer.FK_ASYCUDA_Transport", "xcuda_Transport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_Valuation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Warehouse", "xcuda_Warehouse")]
        public EntityCollection<xcuda_Warehouse> xcuda_Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Warehouse>("WaterNutDB.DataLayer.FK_ASYCUDA_Warehouse", "xcuda_Warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Warehouse>("WaterNutDB.DataLayer.FK_ASYCUDA_Warehouse", "xcuda_Warehouse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA_ExtendedProperties")]
        public xcuda_ASYCUDA_ExtendedProperties xcuda_ASYCUDA_ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA_ExtendedProperties").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA_ExtendedProperties").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA_ExtendedProperties> xcuda_ASYCUDA_ExtendedPropertiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA_ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA_ExtendedProperties>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA_ExtendedProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_Traders")]
        public xcuda_Traders xcuda_Traders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Traders> xcuda_TradersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_ASYCUDA_ExtendedProperties")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_ASYCUDA_ExtendedProperties : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_ASYCUDA_ExtendedProperties object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        /// <param name="asycudaDocumentSetId">Initial value of the AsycudaDocumentSetId property.</param>
        /// <param name="importComplete">Initial value of the ImportComplete property.</param>
        public static xcuda_ASYCUDA_ExtendedProperties Createxcuda_ASYCUDA_ExtendedProperties(global::System.Int32 aSYCUDA_Id, global::System.Int32 asycudaDocumentSetId, global::System.Boolean importComplete)
        {
            xcuda_ASYCUDA_ExtendedProperties xcuda_ASYCUDA_ExtendedProperties = new xcuda_ASYCUDA_ExtendedProperties();
            xcuda_ASYCUDA_ExtendedProperties.ASYCUDA_Id = aSYCUDA_Id;
            xcuda_ASYCUDA_ExtendedProperties.AsycudaDocumentSetId = asycudaDocumentSetId;
            xcuda_ASYCUDA_ExtendedProperties.ImportComplete = importComplete;
            return xcuda_ASYCUDA_ExtendedProperties;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AsycudaDocumentSetId
        {
            get
            {
                return _AsycudaDocumentSetId;
            }
            set
            {
                OnAsycudaDocumentSetIdChanging(value);
                ReportPropertyChanging("AsycudaDocumentSetId");
                _AsycudaDocumentSetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AsycudaDocumentSetId");
                OnAsycudaDocumentSetIdChanged();
            }
        }
        private global::System.Int32 _AsycudaDocumentSetId;
        partial void OnAsycudaDocumentSetIdChanging(global::System.Int32 value);
        partial void OnAsycudaDocumentSetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileNumber
        {
            get
            {
                return _FileNumber;
            }
            set
            {
                OnFileNumberChanging(value);
                ReportPropertyChanging("FileNumber");
                _FileNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileNumber");
                OnFileNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _FileNumber;
        partial void OnFileNumberChanging(Nullable<global::System.Int32> value);
        partial void OnFileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsManuallyAssessed
        {
            get
            {
                return _IsManuallyAssessed;
            }
            set
            {
                OnIsManuallyAssessedChanging(value);
                ReportPropertyChanging("IsManuallyAssessed");
                _IsManuallyAssessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManuallyAssessed");
                OnIsManuallyAssessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsManuallyAssessed;
        partial void OnIsManuallyAssessedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsManuallyAssessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CNumber
        {
            get
            {
                return _CNumber;
            }
            set
            {
                OnCNumberChanging(value);
                ReportPropertyChanging("CNumber");
                _CNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CNumber");
                OnCNumberChanged();
            }
        }
        private global::System.String _CNumber;
        partial void OnCNumberChanging(global::System.String value);
        partial void OnCNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistrationDate;
        partial void OnRegistrationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.String _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.String value);
        partial void OnReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Customs_ProcedureId
        {
            get
            {
                return _Customs_ProcedureId;
            }
            set
            {
                OnCustoms_ProcedureIdChanging(value);
                ReportPropertyChanging("Customs_ProcedureId");
                _Customs_ProcedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Customs_ProcedureId");
                OnCustoms_ProcedureIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Customs_ProcedureId;
        partial void OnCustoms_ProcedureIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustoms_ProcedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Document_TypeId
        {
            get
            {
                return _Document_TypeId;
            }
            set
            {
                OnDocument_TypeIdChanging(value);
                ReportPropertyChanging("Document_TypeId");
                _Document_TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Document_TypeId");
                OnDocument_TypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Document_TypeId;
        partial void OnDocument_TypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocument_TypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExportTemplateId
        {
            get
            {
                return _ExportTemplateId;
            }
            set
            {
                OnExportTemplateIdChanging(value);
                ReportPropertyChanging("ExportTemplateId");
                _ExportTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExportTemplateId");
                OnExportTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ExportTemplateId;
        partial void OnExportTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnExportTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BLNumber
        {
            get
            {
                return _BLNumber;
            }
            set
            {
                OnBLNumberChanging(value);
                ReportPropertyChanging("BLNumber");
                _BLNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BLNumber");
                OnBLNumberChanged();
            }
        }
        private global::System.String _BLNumber;
        partial void OnBLNumberChanging(global::System.String value);
        partial void OnBLNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AutoUpdate
        {
            get
            {
                return _AutoUpdate;
            }
            set
            {
                OnAutoUpdateChanging(value);
                ReportPropertyChanging("AutoUpdate");
                _AutoUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoUpdate");
                OnAutoUpdateChanged();
            }
        }
        private Nullable<global::System.Boolean> _AutoUpdate;
        partial void OnAutoUpdateChanging(Nullable<global::System.Boolean> value);
        partial void OnAutoUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveRegistrationDate
        {
            get
            {
                return _EffectiveRegistrationDate;
            }
            set
            {
                OnEffectiveRegistrationDateChanging(value);
                ReportPropertyChanging("EffectiveRegistrationDate");
                _EffectiveRegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveRegistrationDate");
                OnEffectiveRegistrationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveRegistrationDate;
        partial void OnEffectiveRegistrationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DoNotAllocate
        {
            get
            {
                return _DoNotAllocate;
            }
            set
            {
                OnDoNotAllocateChanging(value);
                ReportPropertyChanging("DoNotAllocate");
                _DoNotAllocate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotAllocate");
                OnDoNotAllocateChanged();
            }
        }
        private Nullable<global::System.Boolean> _DoNotAllocate;
        partial void OnDoNotAllocateChanging(Nullable<global::System.Boolean> value);
        partial void OnDoNotAllocateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApportionMethod
        {
            get
            {
                return _ApportionMethod;
            }
            set
            {
                OnApportionMethodChanging(value);
                ReportPropertyChanging("ApportionMethod");
                _ApportionMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApportionMethod");
                OnApportionMethodChanged();
            }
        }
        private Nullable<global::System.Int32> _ApportionMethod;
        partial void OnApportionMethodChanging(Nullable<global::System.Int32> value);
        partial void OnApportionMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ImportComplete
        {
            get
            {
                return _ImportComplete;
            }
            set
            {
                OnImportCompleteChanging(value);
                ReportPropertyChanging("ImportComplete");
                _ImportComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImportComplete");
                OnImportCompleteChanged();
            }
        }
        private global::System.Boolean _ImportComplete;
        partial void OnImportCompleteChanging(global::System.Boolean value);
        partial void OnImportCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentLines
        {
            get
            {
                return _DocumentLines;
            }
            set
            {
                OnDocumentLinesChanging(value);
                ReportPropertyChanging("DocumentLines");
                _DocumentLines = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentLines");
                OnDocumentLinesChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentLines;
        partial void OnDocumentLinesChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentLinesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Cancelled
        {
            get
            {
                return _Cancelled;
            }
            set
            {
                OnCancelledChanging(value);
                ReportPropertyChanging("Cancelled");
                _Cancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cancelled");
                OnCancelledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Cancelled;
        partial void OnCancelledChanging(Nullable<global::System.Boolean> value);
        partial void OnCancelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalWeight
        {
            get
            {
                return _TotalWeight;
            }
            set
            {
                OnTotalWeightChanging(value);
                ReportPropertyChanging("TotalWeight");
                _TotalWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalWeight");
                OnTotalWeightChanged();
            }
        }
        private Nullable<global::System.Double> _TotalWeight;
        partial void OnTotalWeightChanging(Nullable<global::System.Double> value);
        partial void OnTotalWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalFreight
        {
            get
            {
                return _TotalFreight;
            }
            set
            {
                OnTotalFreightChanging(value);
                ReportPropertyChanging("TotalFreight");
                _TotalFreight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalFreight");
                OnTotalFreightChanged();
            }
        }
        private Nullable<global::System.Double> _TotalFreight;
        partial void OnTotalFreightChanging(Nullable<global::System.Double> value);
        partial void OnTotalFreightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalInternalFreight
        {
            get
            {
                return _TotalInternalFreight;
            }
            set
            {
                OnTotalInternalFreightChanging(value);
                ReportPropertyChanging("TotalInternalFreight");
                _TotalInternalFreight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalInternalFreight");
                OnTotalInternalFreightChanged();
            }
        }
        private Nullable<global::System.Double> _TotalInternalFreight;
        partial void OnTotalInternalFreightChanging(Nullable<global::System.Double> value);
        partial void OnTotalInternalFreightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalPackages
        {
            get
            {
                return _TotalPackages;
            }
            set
            {
                OnTotalPackagesChanging(value);
                ReportPropertyChanging("TotalPackages");
                _TotalPackages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPackages");
                OnTotalPackagesChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalPackages;
        partial void OnTotalPackagesChanging(Nullable<global::System.Int32> value);
        partial void OnTotalPackagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveExpiryDate
        {
            get
            {
                return _EffectiveExpiryDate;
            }
            set
            {
                OnEffectiveExpiryDateChanging(value);
                ReportPropertyChanging("EffectiveExpiryDate");
                _EffectiveExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveExpiryDate");
                OnEffectiveExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveExpiryDate;
        partial void OnEffectiveExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceFileName
        {
            get
            {
                return _SourceFileName;
            }
            set
            {
                OnSourceFileNameChanging(value);
                ReportPropertyChanging("SourceFileName");
                _SourceFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceFileName");
                OnSourceFileNameChanged();
            }
        }
        private global::System.String _SourceFileName;
        partial void OnSourceFileNameChanging(global::System.String value);
        partial void OnSourceFileNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "AsycudaDocumentSet")]
        public AsycudaDocumentSet AsycudaDocumentSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "AsycudaDocumentSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "AsycudaDocumentSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsycudaDocumentSet> AsycudaDocumentSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "AsycudaDocumentSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AsycudaDocumentSet>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_AsycudaDocumentSet", "AsycudaDocumentSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "Customs_Procedure")]
        public Customs_Procedure Customs_Procedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "Customs_Procedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "Customs_Procedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customs_Procedure> Customs_ProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "Customs_Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customs_Procedure>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Customs_Procedure", "Customs_Procedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "Document_Type")]
        public Document_Type Document_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "Document_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "Document_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document_Type> Document_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "Document_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document_Type>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_Document_Type", "Document_Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "ExportTemplate")]
        public ExportTemplate ExportTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExportTemplate>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "ExportTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExportTemplate>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "ExportTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExportTemplate> ExportTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExportTemplate>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "ExportTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExportTemplate>("WaterNutDB.DataLayer.FK_xcuda_ASYCUDA_ExtendedProperties_ExportTemplate", "ExportTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_ExtendedProperty_inherits_xcuda_ASYCUDA", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Attached_documents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Attached_documents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Attached_documents object.
        /// </summary>
        /// <param name="attached_documents_Id">Initial value of the Attached_documents_Id property.</param>
        public static xcuda_Attached_documents Createxcuda_Attached_documents(global::System.Int32 attached_documents_Id)
        {
            xcuda_Attached_documents xcuda_Attached_documents = new xcuda_Attached_documents();
            xcuda_Attached_documents.Attached_documents_Id = attached_documents_Id;
            return xcuda_Attached_documents;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attached_document_date
        {
            get
            {
                return _Attached_document_date;
            }
            set
            {
                OnAttached_document_dateChanging(value);
                ReportPropertyChanging("Attached_document_date");
                _Attached_document_date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attached_document_date");
                OnAttached_document_dateChanged();
            }
        }
        private global::System.String _Attached_document_date;
        partial void OnAttached_document_dateChanging(global::System.String value);
        partial void OnAttached_document_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Attached_documents_Id
        {
            get
            {
                return _Attached_documents_Id;
            }
            set
            {
                if (_Attached_documents_Id != value)
                {
                    OnAttached_documents_IdChanging(value);
                    ReportPropertyChanging("Attached_documents_Id");
                    _Attached_documents_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Attached_documents_Id");
                    OnAttached_documents_IdChanged();
                }
            }
        }
        private global::System.Int32 _Attached_documents_Id;
        partial void OnAttached_documents_IdChanging(global::System.Int32 value);
        partial void OnAttached_documents_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Item_Id;
        partial void OnItem_IdChanging(Nullable<global::System.Int32> value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attached_document_code
        {
            get
            {
                return _Attached_document_code;
            }
            set
            {
                OnAttached_document_codeChanging(value);
                ReportPropertyChanging("Attached_document_code");
                _Attached_document_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attached_document_code");
                OnAttached_document_codeChanged();
            }
        }
        private global::System.String _Attached_document_code;
        partial void OnAttached_document_codeChanging(global::System.String value);
        partial void OnAttached_document_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attached_document_name
        {
            get
            {
                return _Attached_document_name;
            }
            set
            {
                OnAttached_document_nameChanging(value);
                ReportPropertyChanging("Attached_document_name");
                _Attached_document_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attached_document_name");
                OnAttached_document_nameChanged();
            }
        }
        private global::System.String _Attached_document_name;
        partial void OnAttached_document_nameChanging(global::System.String value);
        partial void OnAttached_document_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attached_document_reference
        {
            get
            {
                return _Attached_document_reference;
            }
            set
            {
                OnAttached_document_referenceChanging(value);
                ReportPropertyChanging("Attached_document_reference");
                _Attached_document_reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attached_document_reference");
                OnAttached_document_referenceChanged();
            }
        }
        private global::System.String _Attached_document_reference;
        partial void OnAttached_document_referenceChanging(global::System.String value);
        partial void OnAttached_document_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Attached_document_from_rule
        {
            get
            {
                return _Attached_document_from_rule;
            }
            set
            {
                OnAttached_document_from_ruleChanging(value);
                ReportPropertyChanging("Attached_document_from_rule");
                _Attached_document_from_rule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attached_document_from_rule");
                OnAttached_document_from_ruleChanged();
            }
        }
        private Nullable<global::System.Int32> _Attached_document_from_rule;
        partial void OnAttached_document_from_ruleChanging(Nullable<global::System.Int32> value);
        partial void OnAttached_document_from_ruleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Attached_documents", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Attached_documents", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Attached_documents", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Attached_documents", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Attached_documents", "xcuda_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attachments")]
        public EntityCollection<xcuda_Attachments> xcuda_Attachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attachments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Attachments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Attachments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Attachments object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="attachmentId">Initial value of the AttachmentId property.</param>
        /// <param name="attached_documents_Id">Initial value of the Attached_documents_Id property.</param>
        public static xcuda_Attachments Createxcuda_Attachments(global::System.Int32 id, global::System.Int32 attachmentId, global::System.Int32 attached_documents_Id)
        {
            xcuda_Attachments xcuda_Attachments = new xcuda_Attachments();
            xcuda_Attachments.Id = id;
            xcuda_Attachments.AttachmentId = attachmentId;
            xcuda_Attachments.Attached_documents_Id = attached_documents_Id;
            return xcuda_Attachments;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                OnAttachmentIdChanging(value);
                ReportPropertyChanging("AttachmentId");
                _AttachmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentId");
                OnAttachmentIdChanged();
            }
        }
        private global::System.Int32 _AttachmentId;
        partial void OnAttachmentIdChanging(global::System.Int32 value);
        partial void OnAttachmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Attached_documents_Id
        {
            get
            {
                return _Attached_documents_Id;
            }
            set
            {
                OnAttached_documents_IdChanging(value);
                ReportPropertyChanging("Attached_documents_Id");
                _Attached_documents_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attached_documents_Id");
                OnAttached_documents_IdChanged();
            }
        }
        private global::System.Int32 _Attached_documents_Id;
        partial void OnAttached_documents_IdChanging(global::System.Int32 value);
        partial void OnAttached_documents_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Attachments_Attachments", "Attachments")]
        public Attachments Attachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_Attachments", "Attachments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_Attachments", "Attachments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachments> AttachmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_Attachments", "Attachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachments>("WaterNutDB.DataLayer.FK_xcuda_Attachments_Attachments", "Attachments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attached_documents")]
        public xcuda_Attached_documents xcuda_Attached_documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Attached_documents>("WaterNutDB.DataLayer.FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attached_documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Attached_documents>("WaterNutDB.DataLayer.FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attached_documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Attached_documents> xcuda_Attached_documentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Attached_documents>("WaterNutDB.DataLayer.FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attached_documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Attached_documents>("WaterNutDB.DataLayer.FK_xcuda_Attachments_xcuda_Attached_documents", "xcuda_Attached_documents", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Border_information")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Border_information : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Border_information object.
        /// </summary>
        /// <param name="border_information_Id">Initial value of the Border_information_Id property.</param>
        public static xcuda_Border_information Createxcuda_Border_information(global::System.Int32 border_information_Id)
        {
            xcuda_Border_information xcuda_Border_information = new xcuda_Border_information();
            xcuda_Border_information.Border_information_Id = border_information_Id;
            return xcuda_Border_information;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Border_information_Id
        {
            get
            {
                return _Border_information_Id;
            }
            set
            {
                if (_Border_information_Id != value)
                {
                    OnBorder_information_IdChanging(value);
                    ReportPropertyChanging("Border_information_Id");
                    _Border_information_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Border_information_Id");
                    OnBorder_information_IdChanged();
                }
            }
        }
        private global::System.Int32 _Border_information_Id;
        partial void OnBorder_information_IdChanging(global::System.Int32 value);
        partial void OnBorder_information_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Means_of_transport_Id
        {
            get
            {
                return _Means_of_transport_Id;
            }
            set
            {
                OnMeans_of_transport_IdChanging(value);
                ReportPropertyChanging("Means_of_transport_Id");
                _Means_of_transport_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Means_of_transport_Id");
                OnMeans_of_transport_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Means_of_transport_Id;
        partial void OnMeans_of_transport_IdChanging(Nullable<global::System.Int32> value);
        partial void OnMeans_of_transport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Identity
        {
            get
            {
                return _Identity;
            }
            set
            {
                OnIdentityChanging(value);
                ReportPropertyChanging("Identity");
                _Identity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Identity");
                OnIdentityChanged();
            }
        }
        private global::System.String _Identity;
        partial void OnIdentityChanging(global::System.String value);
        partial void OnIdentityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private Nullable<global::System.Int32> _Mode;
        partial void OnModeChanging(Nullable<global::System.Int32> value);
        partial void OnModeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Means_of_transport_Border_information", "xcuda_Means_of_transport")]
        public xcuda_Means_of_transport xcuda_Means_of_transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Border_information", "xcuda_Means_of_transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Border_information", "xcuda_Means_of_transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Means_of_transport> xcuda_Means_of_transportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Border_information", "xcuda_Means_of_transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Border_information", "xcuda_Means_of_transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Border_office")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Border_office : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Border_office object.
        /// </summary>
        /// <param name="border_office_Id">Initial value of the Border_office_Id property.</param>
        public static xcuda_Border_office Createxcuda_Border_office(global::System.Int32 border_office_Id)
        {
            xcuda_Border_office xcuda_Border_office = new xcuda_Border_office();
            xcuda_Border_office.Border_office_Id = border_office_Id;
            return xcuda_Border_office;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Border_office_Id
        {
            get
            {
                return _Border_office_Id;
            }
            set
            {
                if (_Border_office_Id != value)
                {
                    OnBorder_office_IdChanging(value);
                    ReportPropertyChanging("Border_office_Id");
                    _Border_office_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Border_office_Id");
                    OnBorder_office_IdChanged();
                }
            }
        }
        private global::System.Int32 _Border_office_Id;
        partial void OnBorder_office_IdChanging(global::System.Int32 value);
        partial void OnBorder_office_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transport_Id
        {
            get
            {
                return _Transport_Id;
            }
            set
            {
                OnTransport_IdChanging(value);
                ReportPropertyChanging("Transport_Id");
                _Transport_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transport_Id");
                OnTransport_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transport_Id;
        partial void OnTransport_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Border_office", "xcuda_Transport")]
        public xcuda_Transport xcuda_Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Border_office", "xcuda_Transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Border_office", "xcuda_Transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transport> xcuda_TransportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Border_office", "xcuda_Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Border_office", "xcuda_Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Consignee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Consignee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Consignee object.
        /// </summary>
        /// <param name="traders_Id">Initial value of the Traders_Id property.</param>
        public static xcuda_Consignee Createxcuda_Consignee(global::System.Int32 traders_Id)
        {
            xcuda_Consignee xcuda_Consignee = new xcuda_Consignee();
            xcuda_Consignee.Traders_Id = traders_Id;
            return xcuda_Consignee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Traders_Id
        {
            get
            {
                return _Traders_Id;
            }
            set
            {
                if (_Traders_Id != value)
                {
                    OnTraders_IdChanging(value);
                    ReportPropertyChanging("Traders_Id");
                    _Traders_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Traders_Id");
                    OnTraders_IdChanged();
                }
            }
        }
        private global::System.Int32 _Traders_Id;
        partial void OnTraders_IdChanging(global::System.Int32 value);
        partial void OnTraders_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Consignee_code
        {
            get
            {
                return _Consignee_code;
            }
            set
            {
                OnConsignee_codeChanging(value);
                ReportPropertyChanging("Consignee_code");
                _Consignee_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Consignee_code");
                OnConsignee_codeChanged();
            }
        }
        private global::System.String _Consignee_code;
        partial void OnConsignee_codeChanging(global::System.String value);
        partial void OnConsignee_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Consignee_name
        {
            get
            {
                return _Consignee_name;
            }
            set
            {
                OnConsignee_nameChanging(value);
                ReportPropertyChanging("Consignee_name");
                _Consignee_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Consignee_name");
                OnConsignee_nameChanged();
            }
        }
        private global::System.String _Consignee_name;
        partial void OnConsignee_nameChanging(global::System.String value);
        partial void OnConsignee_nameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Traders_Consignee", "xcuda_Traders")]
        public xcuda_Traders xcuda_Traders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Traders> xcuda_TradersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Container")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Container : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Container object.
        /// </summary>
        /// <param name="gross_weight">Initial value of the Gross_weight property.</param>
        /// <param name="packages_weight">Initial value of the Packages_weight property.</param>
        /// <param name="container_Id">Initial value of the Container_Id property.</param>
        public static xcuda_Container Createxcuda_Container(global::System.Single gross_weight, global::System.Single packages_weight, global::System.Int32 container_Id)
        {
            xcuda_Container xcuda_Container = new xcuda_Container();
            xcuda_Container.Gross_weight = gross_weight;
            xcuda_Container.Packages_weight = packages_weight;
            xcuda_Container.Container_Id = container_Id;
            return xcuda_Container;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item_Number
        {
            get
            {
                return _Item_Number;
            }
            set
            {
                OnItem_NumberChanging(value);
                ReportPropertyChanging("Item_Number");
                _Item_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Item_Number");
                OnItem_NumberChanged();
            }
        }
        private global::System.String _Item_Number;
        partial void OnItem_NumberChanging(global::System.String value);
        partial void OnItem_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Container_identity
        {
            get
            {
                return _Container_identity;
            }
            set
            {
                OnContainer_identityChanging(value);
                ReportPropertyChanging("Container_identity");
                _Container_identity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Container_identity");
                OnContainer_identityChanged();
            }
        }
        private global::System.String _Container_identity;
        partial void OnContainer_identityChanging(global::System.String value);
        partial void OnContainer_identityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Container_type
        {
            get
            {
                return _Container_type;
            }
            set
            {
                OnContainer_typeChanging(value);
                ReportPropertyChanging("Container_type");
                _Container_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Container_type");
                OnContainer_typeChanged();
            }
        }
        private global::System.String _Container_type;
        partial void OnContainer_typeChanging(global::System.String value);
        partial void OnContainer_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Empty_full_indicator
        {
            get
            {
                return _Empty_full_indicator;
            }
            set
            {
                OnEmpty_full_indicatorChanging(value);
                ReportPropertyChanging("Empty_full_indicator");
                _Empty_full_indicator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Empty_full_indicator");
                OnEmpty_full_indicatorChanged();
            }
        }
        private global::System.String _Empty_full_indicator;
        partial void OnEmpty_full_indicatorChanging(global::System.String value);
        partial void OnEmpty_full_indicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Gross_weight
        {
            get
            {
                return _Gross_weight;
            }
            set
            {
                OnGross_weightChanging(value);
                ReportPropertyChanging("Gross_weight");
                _Gross_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gross_weight");
                OnGross_weightChanged();
            }
        }
        private global::System.Single _Gross_weight;
        partial void OnGross_weightChanging(global::System.Single value);
        partial void OnGross_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Goods_description
        {
            get
            {
                return _Goods_description;
            }
            set
            {
                OnGoods_descriptionChanging(value);
                ReportPropertyChanging("Goods_description");
                _Goods_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Goods_description");
                OnGoods_descriptionChanged();
            }
        }
        private global::System.String _Goods_description;
        partial void OnGoods_descriptionChanging(global::System.String value);
        partial void OnGoods_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Packages_type
        {
            get
            {
                return _Packages_type;
            }
            set
            {
                OnPackages_typeChanging(value);
                ReportPropertyChanging("Packages_type");
                _Packages_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Packages_type");
                OnPackages_typeChanged();
            }
        }
        private global::System.String _Packages_type;
        partial void OnPackages_typeChanging(global::System.String value);
        partial void OnPackages_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Packages_number
        {
            get
            {
                return _Packages_number;
            }
            set
            {
                OnPackages_numberChanging(value);
                ReportPropertyChanging("Packages_number");
                _Packages_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Packages_number");
                OnPackages_numberChanged();
            }
        }
        private global::System.String _Packages_number;
        partial void OnPackages_numberChanging(global::System.String value);
        partial void OnPackages_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Packages_weight
        {
            get
            {
                return _Packages_weight;
            }
            set
            {
                OnPackages_weightChanging(value);
                ReportPropertyChanging("Packages_weight");
                _Packages_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Packages_weight");
                OnPackages_weightChanged();
            }
        }
        private global::System.Single _Packages_weight;
        partial void OnPackages_weightChanging(global::System.Single value);
        partial void OnPackages_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Container_Id
        {
            get
            {
                return _Container_Id;
            }
            set
            {
                if (_Container_Id != value)
                {
                    OnContainer_IdChanging(value);
                    ReportPropertyChanging("Container_Id");
                    _Container_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Container_Id");
                    OnContainer_IdChanged();
                }
            }
        }
        private global::System.Int32 _Container_Id;
        partial void OnContainer_IdChanging(global::System.Int32 value);
        partial void OnContainer_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Container", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Container", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Container", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Container", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Container", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Country object.
        /// </summary>
        /// <param name="country_Id">Initial value of the Country_Id property.</param>
        public static xcuda_Country Createxcuda_Country(global::System.Int32 country_Id)
        {
            xcuda_Country xcuda_Country = new xcuda_Country();
            xcuda_Country.Country_Id = country_Id;
            return xcuda_Country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country_first_destination
        {
            get
            {
                return _Country_first_destination;
            }
            set
            {
                OnCountry_first_destinationChanging(value);
                ReportPropertyChanging("Country_first_destination");
                _Country_first_destination = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country_first_destination");
                OnCountry_first_destinationChanged();
            }
        }
        private global::System.String _Country_first_destination;
        partial void OnCountry_first_destinationChanging(global::System.String value);
        partial void OnCountry_first_destinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country_of_origin_name
        {
            get
            {
                return _Country_of_origin_name;
            }
            set
            {
                OnCountry_of_origin_nameChanging(value);
                ReportPropertyChanging("Country_of_origin_name");
                _Country_of_origin_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country_of_origin_name");
                OnCountry_of_origin_nameChanged();
            }
        }
        private global::System.String _Country_of_origin_name;
        partial void OnCountry_of_origin_nameChanging(global::System.String value);
        partial void OnCountry_of_origin_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Country_Id
        {
            get
            {
                return _Country_Id;
            }
            set
            {
                if (_Country_Id != value)
                {
                    OnCountry_IdChanging(value);
                    ReportPropertyChanging("Country_Id");
                    _Country_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Country_Id");
                    OnCountry_IdChanged();
                }
            }
        }
        private global::System.Int32 _Country_Id;
        partial void OnCountry_IdChanging(global::System.Int32 value);
        partial void OnCountry_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Place_of_loading_Id
        {
            get
            {
                return _Place_of_loading_Id;
            }
            set
            {
                OnPlace_of_loading_IdChanging(value);
                ReportPropertyChanging("Place_of_loading_Id");
                _Place_of_loading_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Place_of_loading_Id");
                OnPlace_of_loading_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Place_of_loading_Id;
        partial void OnPlace_of_loading_IdChanging(Nullable<global::System.Int32> value);
        partial void OnPlace_of_loading_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Trading_country
        {
            get
            {
                return _Trading_country;
            }
            set
            {
                OnTrading_countryChanging(value);
                ReportPropertyChanging("Trading_country");
                _Trading_country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Trading_country");
                OnTrading_countryChanged();
            }
        }
        private global::System.String _Trading_country;
        partial void OnTrading_countryChanging(global::System.String value);
        partial void OnTrading_countryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Country_xcuda_General_information", "xcuda_General_information")]
        public xcuda_General_information xcuda_General_information
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_General_information").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_General_information").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_General_information> xcuda_General_informationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_General_information");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_General_information>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_General_information", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Destination_xcuda_Country", "xcuda_Destination")]
        public xcuda_Destination xcuda_Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Destination>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Destination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Destination>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Destination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Destination> xcuda_DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Destination>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Destination>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Destination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Export_xcuda_Country", "xcuda_Export")]
        public xcuda_Export xcuda_Export
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Export>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Export").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Export>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Export").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Export> xcuda_ExportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Export>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Export");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Export>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Export", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Declarant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Declarant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Declarant object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Declarant Createxcuda_Declarant(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Declarant xcuda_Declarant = new xcuda_Declarant();
            xcuda_Declarant.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Declarant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declarant_code
        {
            get
            {
                return _Declarant_code;
            }
            set
            {
                OnDeclarant_codeChanging(value);
                ReportPropertyChanging("Declarant_code");
                _Declarant_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declarant_code");
                OnDeclarant_codeChanged();
            }
        }
        private global::System.String _Declarant_code;
        partial void OnDeclarant_codeChanging(global::System.String value);
        partial void OnDeclarant_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declarant_name
        {
            get
            {
                return _Declarant_name;
            }
            set
            {
                OnDeclarant_nameChanging(value);
                ReportPropertyChanging("Declarant_name");
                _Declarant_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declarant_name");
                OnDeclarant_nameChanged();
            }
        }
        private global::System.String _Declarant_name;
        partial void OnDeclarant_nameChanging(global::System.String value);
        partial void OnDeclarant_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declarant_representative
        {
            get
            {
                return _Declarant_representative;
            }
            set
            {
                OnDeclarant_representativeChanging(value);
                ReportPropertyChanging("Declarant_representative");
                _Declarant_representative = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declarant_representative");
                OnDeclarant_representativeChanged();
            }
        }
        private global::System.String _Declarant_representative;
        partial void OnDeclarant_representativeChanging(global::System.String value);
        partial void OnDeclarant_representativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Declarant", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Declarant", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Delivery_terms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Delivery_terms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Delivery_terms object.
        /// </summary>
        /// <param name="delivery_terms_Id">Initial value of the Delivery_terms_Id property.</param>
        public static xcuda_Delivery_terms Createxcuda_Delivery_terms(global::System.Int32 delivery_terms_Id)
        {
            xcuda_Delivery_terms xcuda_Delivery_terms = new xcuda_Delivery_terms();
            xcuda_Delivery_terms.Delivery_terms_Id = delivery_terms_Id;
            return xcuda_Delivery_terms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Delivery_terms_Id
        {
            get
            {
                return _Delivery_terms_Id;
            }
            set
            {
                if (_Delivery_terms_Id != value)
                {
                    OnDelivery_terms_IdChanging(value);
                    ReportPropertyChanging("Delivery_terms_Id");
                    _Delivery_terms_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Delivery_terms_Id");
                    OnDelivery_terms_IdChanged();
                }
            }
        }
        private global::System.Int32 _Delivery_terms_Id;
        partial void OnDelivery_terms_IdChanging(global::System.Int32 value);
        partial void OnDelivery_terms_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transport_Id
        {
            get
            {
                return _Transport_Id;
            }
            set
            {
                OnTransport_IdChanging(value);
                ReportPropertyChanging("Transport_Id");
                _Transport_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transport_Id");
                OnTransport_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transport_Id;
        partial void OnTransport_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Situation
        {
            get
            {
                return _Situation;
            }
            set
            {
                OnSituationChanging(value);
                ReportPropertyChanging("Situation");
                _Situation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Situation");
                OnSituationChanged();
            }
        }
        private global::System.String _Situation;
        partial void OnSituationChanging(global::System.String value);
        partial void OnSituationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Delivery_terms", "xcuda_Transport")]
        public xcuda_Transport xcuda_Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Delivery_terms", "xcuda_Transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Delivery_terms", "xcuda_Transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transport> xcuda_TransportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Delivery_terms", "xcuda_Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Delivery_terms", "xcuda_Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Departure_arrival_information")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Departure_arrival_information : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Departure_arrival_information object.
        /// </summary>
        /// <param name="departure_arrival_information_Id">Initial value of the Departure_arrival_information_Id property.</param>
        public static xcuda_Departure_arrival_information Createxcuda_Departure_arrival_information(global::System.Int32 departure_arrival_information_Id)
        {
            xcuda_Departure_arrival_information xcuda_Departure_arrival_information = new xcuda_Departure_arrival_information();
            xcuda_Departure_arrival_information.Departure_arrival_information_Id = departure_arrival_information_Id;
            return xcuda_Departure_arrival_information;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Departure_arrival_information_Id
        {
            get
            {
                return _Departure_arrival_information_Id;
            }
            set
            {
                if (_Departure_arrival_information_Id != value)
                {
                    OnDeparture_arrival_information_IdChanging(value);
                    ReportPropertyChanging("Departure_arrival_information_Id");
                    _Departure_arrival_information_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Departure_arrival_information_Id");
                    OnDeparture_arrival_information_IdChanged();
                }
            }
        }
        private global::System.Int32 _Departure_arrival_information_Id;
        partial void OnDeparture_arrival_information_IdChanging(global::System.Int32 value);
        partial void OnDeparture_arrival_information_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Means_of_transport_Id
        {
            get
            {
                return _Means_of_transport_Id;
            }
            set
            {
                OnMeans_of_transport_IdChanging(value);
                ReportPropertyChanging("Means_of_transport_Id");
                _Means_of_transport_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Means_of_transport_Id");
                OnMeans_of_transport_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Means_of_transport_Id;
        partial void OnMeans_of_transport_IdChanging(Nullable<global::System.Int32> value);
        partial void OnMeans_of_transport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Identity
        {
            get
            {
                return _Identity;
            }
            set
            {
                OnIdentityChanging(value);
                ReportPropertyChanging("Identity");
                _Identity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Identity");
                OnIdentityChanged();
            }
        }
        private global::System.String _Identity;
        partial void OnIdentityChanging(global::System.String value);
        partial void OnIdentityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Means_of_transport_Departure_arrival_information", "xcuda_Means_of_transport")]
        public xcuda_Means_of_transport xcuda_Means_of_transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Departure_arrival_information", "xcuda_Means_of_transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Departure_arrival_information", "xcuda_Means_of_transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Means_of_transport> xcuda_Means_of_transportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Departure_arrival_information", "xcuda_Means_of_transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Means_of_transport_Departure_arrival_information", "xcuda_Means_of_transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Destination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Destination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Destination object.
        /// </summary>
        /// <param name="country_Id">Initial value of the Country_Id property.</param>
        public static xcuda_Destination Createxcuda_Destination(global::System.Int32 country_Id)
        {
            xcuda_Destination xcuda_Destination = new xcuda_Destination();
            xcuda_Destination.Country_Id = country_Id;
            return xcuda_Destination;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Destination_country_code
        {
            get
            {
                return _Destination_country_code;
            }
            set
            {
                OnDestination_country_codeChanging(value);
                ReportPropertyChanging("Destination_country_code");
                _Destination_country_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Destination_country_code");
                OnDestination_country_codeChanged();
            }
        }
        private global::System.String _Destination_country_code;
        partial void OnDestination_country_codeChanging(global::System.String value);
        partial void OnDestination_country_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Destination_country_name
        {
            get
            {
                return _Destination_country_name;
            }
            set
            {
                OnDestination_country_nameChanging(value);
                ReportPropertyChanging("Destination_country_name");
                _Destination_country_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Destination_country_name");
                OnDestination_country_nameChanged();
            }
        }
        private global::System.String _Destination_country_name;
        partial void OnDestination_country_nameChanging(global::System.String value);
        partial void OnDestination_country_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Country_Id
        {
            get
            {
                return _Country_Id;
            }
            set
            {
                if (_Country_Id != value)
                {
                    OnCountry_IdChanging(value);
                    ReportPropertyChanging("Country_Id");
                    _Country_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Country_Id");
                    OnCountry_IdChanged();
                }
            }
        }
        private global::System.Int32 _Country_Id;
        partial void OnCountry_IdChanging(global::System.Int32 value);
        partial void OnCountry_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Destination_xcuda_Country", "xcuda_Country")]
        public xcuda_Country xcuda_Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Country> xcuda_CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Destination_xcuda_Country", "xcuda_Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Export")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Export : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Export object.
        /// </summary>
        /// <param name="country_Id">Initial value of the Country_Id property.</param>
        public static xcuda_Export Createxcuda_Export(global::System.Int32 country_Id)
        {
            xcuda_Export xcuda_Export = new xcuda_Export();
            xcuda_Export.Country_Id = country_Id;
            return xcuda_Export;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Export_country_code
        {
            get
            {
                return _Export_country_code;
            }
            set
            {
                OnExport_country_codeChanging(value);
                ReportPropertyChanging("Export_country_code");
                _Export_country_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Export_country_code");
                OnExport_country_codeChanged();
            }
        }
        private global::System.String _Export_country_code;
        partial void OnExport_country_codeChanging(global::System.String value);
        partial void OnExport_country_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Export_country_name
        {
            get
            {
                return _Export_country_name;
            }
            set
            {
                OnExport_country_nameChanging(value);
                ReportPropertyChanging("Export_country_name");
                _Export_country_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Export_country_name");
                OnExport_country_nameChanged();
            }
        }
        private global::System.String _Export_country_name;
        partial void OnExport_country_nameChanging(global::System.String value);
        partial void OnExport_country_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Country_Id
        {
            get
            {
                return _Country_Id;
            }
            set
            {
                if (_Country_Id != value)
                {
                    OnCountry_IdChanging(value);
                    ReportPropertyChanging("Country_Id");
                    _Country_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Country_Id");
                    OnCountry_IdChanged();
                }
            }
        }
        private global::System.Int32 _Country_Id;
        partial void OnCountry_IdChanging(global::System.Int32 value);
        partial void OnCountry_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Export_country_region
        {
            get
            {
                return _Export_country_region;
            }
            set
            {
                OnExport_country_regionChanging(value);
                ReportPropertyChanging("Export_country_region");
                _Export_country_region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Export_country_region");
                OnExport_country_regionChanged();
            }
        }
        private global::System.String _Export_country_region;
        partial void OnExport_country_regionChanging(global::System.String value);
        partial void OnExport_country_regionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Export_xcuda_Country", "xcuda_Country")]
        public xcuda_Country xcuda_Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Country> xcuda_CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Export_xcuda_Country", "xcuda_Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Export_release")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Export_release : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Export_release object.
        /// </summary>
        /// <param name="export_release_Id">Initial value of the Export_release_Id property.</param>
        public static xcuda_Export_release Createxcuda_Export_release(global::System.Int32 export_release_Id)
        {
            xcuda_Export_release xcuda_Export_release = new xcuda_Export_release();
            xcuda_Export_release.Export_release_Id = export_release_Id;
            return xcuda_Export_release;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date_of_exit
        {
            get
            {
                return _Date_of_exit;
            }
            set
            {
                OnDate_of_exitChanging(value);
                ReportPropertyChanging("Date_of_exit");
                _Date_of_exit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date_of_exit");
                OnDate_of_exitChanged();
            }
        }
        private global::System.String _Date_of_exit;
        partial void OnDate_of_exitChanging(global::System.String value);
        partial void OnDate_of_exitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Time_of_exit
        {
            get
            {
                return _Time_of_exit;
            }
            set
            {
                OnTime_of_exitChanging(value);
                ReportPropertyChanging("Time_of_exit");
                _Time_of_exit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Time_of_exit");
                OnTime_of_exitChanged();
            }
        }
        private global::System.String _Time_of_exit;
        partial void OnTime_of_exitChanging(global::System.String value);
        partial void OnTime_of_exitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Export_release_Id
        {
            get
            {
                return _Export_release_Id;
            }
            set
            {
                if (_Export_release_Id != value)
                {
                    OnExport_release_IdChanging(value);
                    ReportPropertyChanging("Export_release_Id");
                    _Export_release_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Export_release_Id");
                    OnExport_release_IdChanged();
                }
            }
        }
        private global::System.Int32 _Export_release_Id;
        partial void OnExport_release_IdChanging(global::System.Int32 value);
        partial void OnExport_release_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Export_release", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Export_release", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Export_release", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Export_release", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Export_release", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Exporter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Exporter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Exporter object.
        /// </summary>
        /// <param name="traders_Id">Initial value of the Traders_Id property.</param>
        public static xcuda_Exporter Createxcuda_Exporter(global::System.Int32 traders_Id)
        {
            xcuda_Exporter xcuda_Exporter = new xcuda_Exporter();
            xcuda_Exporter.Traders_Id = traders_Id;
            return xcuda_Exporter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exporter_name
        {
            get
            {
                return _Exporter_name;
            }
            set
            {
                OnExporter_nameChanging(value);
                ReportPropertyChanging("Exporter_name");
                _Exporter_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exporter_name");
                OnExporter_nameChanged();
            }
        }
        private global::System.String _Exporter_name;
        partial void OnExporter_nameChanging(global::System.String value);
        partial void OnExporter_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Traders_Id
        {
            get
            {
                return _Traders_Id;
            }
            set
            {
                if (_Traders_Id != value)
                {
                    OnTraders_IdChanging(value);
                    ReportPropertyChanging("Traders_Id");
                    _Traders_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Traders_Id");
                    OnTraders_IdChanged();
                }
            }
        }
        private global::System.Int32 _Traders_Id;
        partial void OnTraders_IdChanging(global::System.Int32 value);
        partial void OnTraders_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exporter_code
        {
            get
            {
                return _Exporter_code;
            }
            set
            {
                OnExporter_codeChanging(value);
                ReportPropertyChanging("Exporter_code");
                _Exporter_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exporter_code");
                OnExporter_codeChanged();
            }
        }
        private global::System.String _Exporter_code;
        partial void OnExporter_codeChanging(global::System.String value);
        partial void OnExporter_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Traders_Exporter", "xcuda_Traders")]
        public xcuda_Traders xcuda_Traders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Traders> xcuda_TradersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Financial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Financial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Financial object.
        /// </summary>
        /// <param name="financial_Id">Initial value of the Financial_Id property.</param>
        public static xcuda_Financial Createxcuda_Financial(global::System.Int32 financial_Id)
        {
            xcuda_Financial xcuda_Financial = new xcuda_Financial();
            xcuda_Financial.Financial_Id = financial_Id;
            return xcuda_Financial;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Financial_Id
        {
            get
            {
                return _Financial_Id;
            }
            set
            {
                if (_Financial_Id != value)
                {
                    OnFinancial_IdChanging(value);
                    ReportPropertyChanging("Financial_Id");
                    _Financial_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Financial_Id");
                    OnFinancial_IdChanged();
                }
            }
        }
        private global::System.Int32 _Financial_Id;
        partial void OnFinancial_IdChanging(global::System.Int32 value);
        partial void OnFinancial_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Deffered_payment_reference
        {
            get
            {
                return _Deffered_payment_reference;
            }
            set
            {
                OnDeffered_payment_referenceChanging(value);
                ReportPropertyChanging("Deffered_payment_reference");
                _Deffered_payment_reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Deffered_payment_reference");
                OnDeffered_payment_referenceChanged();
            }
        }
        private global::System.String _Deffered_payment_reference;
        partial void OnDeffered_payment_referenceChanging(global::System.String value);
        partial void OnDeffered_payment_referenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mode_of_payment
        {
            get
            {
                return _Mode_of_payment;
            }
            set
            {
                OnMode_of_paymentChanging(value);
                ReportPropertyChanging("Mode_of_payment");
                _Mode_of_payment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mode_of_payment");
                OnMode_of_paymentChanged();
            }
        }
        private global::System.String _Mode_of_payment;
        partial void OnMode_of_paymentChanging(global::System.String value);
        partial void OnMode_of_paymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Financial_Code
        {
            get
            {
                return _Financial_Code;
            }
            set
            {
                OnFinancial_CodeChanging(value);
                ReportPropertyChanging("Financial_Code");
                _Financial_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Financial_Code");
                OnFinancial_CodeChanged();
            }
        }
        private global::System.String _Financial_Code;
        partial void OnFinancial_CodeChanging(global::System.String value);
        partial void OnFinancial_CodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Financial", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Financial", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Financial", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Financial", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Financial", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial_Amounts")]
        public EntityCollection<xcuda_Financial_Amounts> xcuda_Financial_Amounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Financial_Amounts>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial_Amounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Financial_Amounts>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial_Amounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial_Guarantee")]
        public EntityCollection<xcuda_Financial_Guarantee> xcuda_Financial_Guarantee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Financial_Guarantee>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial_Guarantee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Financial_Guarantee>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial_Guarantee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Financial_Amounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Financial_Amounts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Financial_Amounts object.
        /// </summary>
        /// <param name="amounts_Id">Initial value of the Amounts_Id property.</param>
        /// <param name="financial_Id">Initial value of the Financial_Id property.</param>
        public static xcuda_Financial_Amounts Createxcuda_Financial_Amounts(global::System.Int32 amounts_Id, global::System.Int32 financial_Id)
        {
            xcuda_Financial_Amounts xcuda_Financial_Amounts = new xcuda_Financial_Amounts();
            xcuda_Financial_Amounts.Amounts_Id = amounts_Id;
            xcuda_Financial_Amounts.Financial_Id = financial_Id;
            return xcuda_Financial_Amounts;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amounts_Id
        {
            get
            {
                return _Amounts_Id;
            }
            set
            {
                if (_Amounts_Id != value)
                {
                    OnAmounts_IdChanging(value);
                    ReportPropertyChanging("Amounts_Id");
                    _Amounts_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amounts_Id");
                    OnAmounts_IdChanged();
                }
            }
        }
        private global::System.Int32 _Amounts_Id;
        partial void OnAmounts_IdChanging(global::System.Int32 value);
        partial void OnAmounts_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Financial_Id
        {
            get
            {
                return _Financial_Id;
            }
            set
            {
                OnFinancial_IdChanging(value);
                ReportPropertyChanging("Financial_Id");
                _Financial_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Financial_Id");
                OnFinancial_IdChanged();
            }
        }
        private global::System.Int32 _Financial_Id;
        partial void OnFinancial_IdChanging(global::System.Int32 value);
        partial void OnFinancial_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total_manual_taxes
        {
            get
            {
                return _Total_manual_taxes;
            }
            set
            {
                OnTotal_manual_taxesChanging(value);
                ReportPropertyChanging("Total_manual_taxes");
                _Total_manual_taxes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_manual_taxes");
                OnTotal_manual_taxesChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total_manual_taxes;
        partial void OnTotal_manual_taxesChanging(Nullable<global::System.Decimal> value);
        partial void OnTotal_manual_taxesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Global_taxes
        {
            get
            {
                return _Global_taxes;
            }
            set
            {
                OnGlobal_taxesChanging(value);
                ReportPropertyChanging("Global_taxes");
                _Global_taxes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Global_taxes");
                OnGlobal_taxesChanged();
            }
        }
        private Nullable<global::System.Decimal> _Global_taxes;
        partial void OnGlobal_taxesChanging(Nullable<global::System.Decimal> value);
        partial void OnGlobal_taxesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Totals_taxes
        {
            get
            {
                return _Totals_taxes;
            }
            set
            {
                OnTotals_taxesChanging(value);
                ReportPropertyChanging("Totals_taxes");
                _Totals_taxes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Totals_taxes");
                OnTotals_taxesChanged();
            }
        }
        private Nullable<global::System.Decimal> _Totals_taxes;
        partial void OnTotals_taxesChanging(Nullable<global::System.Decimal> value);
        partial void OnTotals_taxesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial")]
        public xcuda_Financial xcuda_Financial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Financial> xcuda_FinancialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Amounts", "xcuda_Financial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Financial_Guarantee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Financial_Guarantee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Financial_Guarantee object.
        /// </summary>
        /// <param name="guarantee_Id">Initial value of the Guarantee_Id property.</param>
        /// <param name="financial_Id">Initial value of the Financial_Id property.</param>
        public static xcuda_Financial_Guarantee Createxcuda_Financial_Guarantee(global::System.Int32 guarantee_Id, global::System.Int32 financial_Id)
        {
            xcuda_Financial_Guarantee xcuda_Financial_Guarantee = new xcuda_Financial_Guarantee();
            xcuda_Financial_Guarantee.Guarantee_Id = guarantee_Id;
            xcuda_Financial_Guarantee.Financial_Id = financial_Id;
            return xcuda_Financial_Guarantee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Guarantee_Id
        {
            get
            {
                return _Guarantee_Id;
            }
            set
            {
                if (_Guarantee_Id != value)
                {
                    OnGuarantee_IdChanging(value);
                    ReportPropertyChanging("Guarantee_Id");
                    _Guarantee_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Guarantee_Id");
                    OnGuarantee_IdChanged();
                }
            }
        }
        private global::System.Int32 _Guarantee_Id;
        partial void OnGuarantee_IdChanging(global::System.Int32 value);
        partial void OnGuarantee_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Financial_Id
        {
            get
            {
                return _Financial_Id;
            }
            set
            {
                OnFinancial_IdChanging(value);
                ReportPropertyChanging("Financial_Id");
                _Financial_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Financial_Id");
                OnFinancial_IdChanged();
            }
        }
        private global::System.Int32 _Financial_Id;
        partial void OnFinancial_IdChanging(global::System.Int32 value);
        partial void OnFinancial_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial")]
        public xcuda_Financial xcuda_Financial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Financial> xcuda_FinancialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Financial>("WaterNutDB.DataLayer.FK_xcuda_Financialxcuda_Financial_Guarantee", "xcuda_Financial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Forms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Forms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Forms object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Forms Createxcuda_Forms(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Forms xcuda_Forms = new xcuda_Forms();
            xcuda_Forms.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Forms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Number_of_the_form
        {
            get
            {
                return _Number_of_the_form;
            }
            set
            {
                OnNumber_of_the_formChanging(value);
                ReportPropertyChanging("Number_of_the_form");
                _Number_of_the_form = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number_of_the_form");
                OnNumber_of_the_formChanged();
            }
        }
        private Nullable<global::System.Int32> _Number_of_the_form;
        partial void OnNumber_of_the_formChanging(Nullable<global::System.Int32> value);
        partial void OnNumber_of_the_formChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Total_number_of_forms
        {
            get
            {
                return _Total_number_of_forms;
            }
            set
            {
                OnTotal_number_of_formsChanging(value);
                ReportPropertyChanging("Total_number_of_forms");
                _Total_number_of_forms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_number_of_forms");
                OnTotal_number_of_formsChanged();
            }
        }
        private Nullable<global::System.Int32> _Total_number_of_forms;
        partial void OnTotal_number_of_formsChanging(Nullable<global::System.Int32> value);
        partial void OnTotal_number_of_formsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Forms_xcuda_Property", "xcuda_Property")]
        public xcuda_Property xcuda_Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Property> xcuda_PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_General_information")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_General_information : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_General_information object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_General_information Createxcuda_General_information(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_General_information xcuda_General_information = new xcuda_General_information();
            xcuda_General_information.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_General_information;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value_details
        {
            get
            {
                return _Value_details;
            }
            set
            {
                OnValue_detailsChanging(value);
                ReportPropertyChanging("Value_details");
                _Value_details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value_details");
                OnValue_detailsChanged();
            }
        }
        private global::System.String _Value_details;
        partial void OnValue_detailsChanging(global::System.String value);
        partial void OnValue_detailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CAP
        {
            get
            {
                return _CAP;
            }
            set
            {
                OnCAPChanging(value);
                ReportPropertyChanging("CAP");
                _CAP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CAP");
                OnCAPChanged();
            }
        }
        private global::System.String _CAP;
        partial void OnCAPChanging(global::System.String value);
        partial void OnCAPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Additional_information
        {
            get
            {
                return _Additional_information;
            }
            set
            {
                OnAdditional_informationChanging(value);
                ReportPropertyChanging("Additional_information");
                _Additional_information = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Additional_information");
                OnAdditional_informationChanged();
            }
        }
        private global::System.String _Additional_information;
        partial void OnAdditional_informationChanging(global::System.String value);
        partial void OnAdditional_informationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments_free_text
        {
            get
            {
                return _Comments_free_text;
            }
            set
            {
                OnComments_free_textChanging(value);
                ReportPropertyChanging("Comments_free_text");
                _Comments_free_text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments_free_text");
                OnComments_free_textChanged();
            }
        }
        private global::System.String _Comments_free_text;
        partial void OnComments_free_textChanging(global::System.String value);
        partial void OnComments_free_textChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Country_xcuda_General_information", "xcuda_Country")]
        public xcuda_Country xcuda_Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Country> xcuda_CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Country>("WaterNutDB.DataLayer.FK_xcuda_Country_xcuda_General_information", "xcuda_Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_General_information", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_General_information", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Global_taxes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Global_taxes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Global_taxes object.
        /// </summary>
        /// <param name="global_taxes_Id">Initial value of the Global_taxes_Id property.</param>
        public static xcuda_Global_taxes Createxcuda_Global_taxes(global::System.Int32 global_taxes_Id)
        {
            xcuda_Global_taxes xcuda_Global_taxes = new xcuda_Global_taxes();
            xcuda_Global_taxes.Global_taxes_Id = global_taxes_Id;
            return xcuda_Global_taxes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Global_taxes_Id
        {
            get
            {
                return _Global_taxes_Id;
            }
            set
            {
                if (_Global_taxes_Id != value)
                {
                    OnGlobal_taxes_IdChanging(value);
                    ReportPropertyChanging("Global_taxes_Id");
                    _Global_taxes_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Global_taxes_Id");
                    OnGlobal_taxes_IdChanged();
                }
            }
        }
        private global::System.Int32 _Global_taxes_Id;
        partial void OnGlobal_taxes_IdChanging(global::System.Int32 value);
        partial void OnGlobal_taxes_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Global_taxes", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Global_taxes", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Global_taxes", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Global_taxes", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Global_taxes", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Goods_description")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Goods_description : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Goods_description object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static xcuda_Goods_description Createxcuda_Goods_description(global::System.Int32 item_Id)
        {
            xcuda_Goods_description xcuda_Goods_description = new xcuda_Goods_description();
            xcuda_Goods_description.Item_Id = item_Id;
            return xcuda_Goods_description;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country_of_origin_code
        {
            get
            {
                return _Country_of_origin_code;
            }
            set
            {
                OnCountry_of_origin_codeChanging(value);
                ReportPropertyChanging("Country_of_origin_code");
                _Country_of_origin_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country_of_origin_code");
                OnCountry_of_origin_codeChanged();
            }
        }
        private global::System.String _Country_of_origin_code;
        partial void OnCountry_of_origin_codeChanging(global::System.String value);
        partial void OnCountry_of_origin_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description_of_goods
        {
            get
            {
                return _Description_of_goods;
            }
            set
            {
                OnDescription_of_goodsChanging(value);
                ReportPropertyChanging("Description_of_goods");
                _Description_of_goods = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description_of_goods");
                OnDescription_of_goodsChanged();
            }
        }
        private global::System.String _Description_of_goods;
        partial void OnDescription_of_goodsChanging(global::System.String value);
        partial void OnDescription_of_goodsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Commercial_Description
        {
            get
            {
                return _Commercial_Description;
            }
            set
            {
                OnCommercial_DescriptionChanging(value);
                ReportPropertyChanging("Commercial_Description");
                _Commercial_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Commercial_Description");
                OnCommercial_DescriptionChanged();
            }
        }
        private global::System.String _Commercial_Description;
        partial void OnCommercial_DescriptionChanging(global::System.String value);
        partial void OnCommercial_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Goods_description", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Gs_deduction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Gs_deduction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Gs_deduction object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Gs_deduction Createxcuda_Gs_deduction(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_Id)
        {
            xcuda_Gs_deduction xcuda_Gs_deduction = new xcuda_Gs_deduction();
            xcuda_Gs_deduction.Amount_national_currency = amount_national_currency;
            xcuda_Gs_deduction.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Gs_deduction.Currency_rate = currency_rate;
            xcuda_Gs_deduction.Valuation_Id = valuation_Id;
            return xcuda_Gs_deduction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Gs_external_freight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Gs_external_freight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Gs_external_freight object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Gs_external_freight Createxcuda_Gs_external_freight(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_Id)
        {
            xcuda_Gs_external_freight xcuda_Gs_external_freight = new xcuda_Gs_external_freight();
            xcuda_Gs_external_freight.Amount_national_currency = amount_national_currency;
            xcuda_Gs_external_freight.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Gs_external_freight.Currency_rate = currency_rate;
            xcuda_Gs_external_freight.Valuation_Id = valuation_Id;
            return xcuda_Gs_external_freight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Gs_insurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Gs_insurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Gs_insurance object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Gs_insurance Createxcuda_Gs_insurance(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_Id)
        {
            xcuda_Gs_insurance xcuda_Gs_insurance = new xcuda_Gs_insurance();
            xcuda_Gs_insurance.Amount_national_currency = amount_national_currency;
            xcuda_Gs_insurance.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Gs_insurance.Currency_rate = currency_rate;
            xcuda_Gs_insurance.Valuation_Id = valuation_Id;
            return xcuda_Gs_insurance;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Gs_internal_freight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Gs_internal_freight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Gs_internal_freight object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Gs_internal_freight Createxcuda_Gs_internal_freight(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_Id)
        {
            xcuda_Gs_internal_freight xcuda_Gs_internal_freight = new xcuda_Gs_internal_freight();
            xcuda_Gs_internal_freight.Amount_national_currency = amount_national_currency;
            xcuda_Gs_internal_freight.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Gs_internal_freight.Currency_rate = currency_rate;
            xcuda_Gs_internal_freight.Valuation_Id = valuation_Id;
            return xcuda_Gs_internal_freight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Gs_Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Gs_Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Gs_Invoice object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Gs_Invoice Createxcuda_Gs_Invoice(global::System.Double amount_national_currency, global::System.Double amount_foreign_currency, global::System.Double currency_rate, global::System.Int32 valuation_Id)
        {
            xcuda_Gs_Invoice xcuda_Gs_Invoice = new xcuda_Gs_Invoice();
            xcuda_Gs_Invoice.Amount_national_currency = amount_national_currency;
            xcuda_Gs_Invoice.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Gs_Invoice.Currency_rate = currency_rate;
            xcuda_Gs_Invoice.Valuation_Id = valuation_Id;
            return xcuda_Gs_Invoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Double _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Double value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Double _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Double value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Double _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Double value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Gs_other_cost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Gs_other_cost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Gs_other_cost object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Gs_other_cost Createxcuda_Gs_other_cost(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_Id)
        {
            xcuda_Gs_other_cost xcuda_Gs_other_cost = new xcuda_Gs_other_cost();
            xcuda_Gs_other_cost.Amount_national_currency = amount_national_currency;
            xcuda_Gs_other_cost.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Gs_other_cost.Currency_rate = currency_rate;
            xcuda_Gs_other_cost.Valuation_Id = valuation_Id;
            return xcuda_Gs_other_cost;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_HScode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_HScode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_HScode object.
        /// </summary>
        /// <param name="commodity_code">Initial value of the Commodity_code property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static xcuda_HScode Createxcuda_HScode(global::System.String commodity_code, global::System.Int32 item_Id)
        {
            xcuda_HScode xcuda_HScode = new xcuda_HScode();
            xcuda_HScode.Commodity_code = commodity_code;
            xcuda_HScode.Item_Id = item_Id;
            return xcuda_HScode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Commodity_code
        {
            get
            {
                return _Commodity_code;
            }
            set
            {
                OnCommodity_codeChanging(value);
                ReportPropertyChanging("Commodity_code");
                _Commodity_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Commodity_code");
                OnCommodity_codeChanged();
            }
        }
        private global::System.String _Commodity_code;
        partial void OnCommodity_codeChanging(global::System.String value);
        partial void OnCommodity_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Precision_1
        {
            get
            {
                return _Precision_1;
            }
            set
            {
                OnPrecision_1Changing(value);
                ReportPropertyChanging("Precision_1");
                _Precision_1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Precision_1");
                OnPrecision_1Changed();
            }
        }
        private global::System.String _Precision_1;
        partial void OnPrecision_1Changing(global::System.String value);
        partial void OnPrecision_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Precision_4
        {
            get
            {
                return _Precision_4;
            }
            set
            {
                OnPrecision_4Changing(value);
                ReportPropertyChanging("Precision_4");
                _Precision_4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Precision_4");
                OnPrecision_4Changed();
            }
        }
        private global::System.String _Precision_4;
        partial void OnPrecision_4Changing(global::System.String value);
        partial void OnPrecision_4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Tarification_HScode", "xcuda_Tarification")]
        public xcuda_Tarification xcuda_Tarification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_Tarification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_Tarification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Tarification> xcuda_TarificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_Tarification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_Tarification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_Inventory_Item")]
        public xcuda_Inventory_Item xcuda_Inventory_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Inventory_Item>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_Inventory_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Inventory_Item>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_Inventory_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Inventory_Item> xcuda_Inventory_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Inventory_Item>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_Inventory_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Inventory_Item>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_Inventory_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Identification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Identification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Identification object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Identification Createxcuda_Identification(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Identification xcuda_Identification = new xcuda_Identification();
            xcuda_Identification.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Identification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manifest_reference_number
        {
            get
            {
                return _Manifest_reference_number;
            }
            set
            {
                OnManifest_reference_numberChanging(value);
                ReportPropertyChanging("Manifest_reference_number");
                _Manifest_reference_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manifest_reference_number");
                OnManifest_reference_numberChanged();
            }
        }
        private global::System.String _Manifest_reference_number;
        partial void OnManifest_reference_numberChanging(global::System.String value);
        partial void OnManifest_reference_numberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Assessment", "xcuda_Assessment")]
        public xcuda_Assessment xcuda_Assessment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Assessment>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Assessment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Assessment>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Assessment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Assessment> xcuda_AssessmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Assessment>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Assessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Assessment>("WaterNutDB.DataLayer.FK_Identification_Assessment", "xcuda_Assessment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Identification", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Identification", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Office_segment", "xcuda_Office_segment")]
        public xcuda_Office_segment xcuda_Office_segment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Office_segment>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Office_segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Office_segment>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Office_segment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Office_segment> xcuda_Office_segmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Office_segment>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Office_segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Office_segment>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Office_segment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_receipt", "xcuda_receipt")]
        public xcuda_receipt xcuda_receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_receipt>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_receipt>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_receipt> xcuda_receiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_receipt>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_receipt>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Registration", "xcuda_Registration")]
        public xcuda_Registration xcuda_Registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Registration>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Registration>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Registration> xcuda_RegistrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Registration>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Registration>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Registration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Type", "xcuda_Type")]
        public xcuda_Type xcuda_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Type>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Type>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Type> xcuda_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Type>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Type>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Inventory_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Inventory_Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Inventory_Item object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        /// <param name="inventoryItemId">Initial value of the InventoryItemId property.</param>
        public static xcuda_Inventory_Item Createxcuda_Inventory_Item(global::System.Int32 item_Id, global::System.Int32 inventoryItemId)
        {
            xcuda_Inventory_Item xcuda_Inventory_Item = new xcuda_Inventory_Item();
            xcuda_Inventory_Item.Item_Id = item_Id;
            xcuda_Inventory_Item.InventoryItemId = inventoryItemId;
            return xcuda_Inventory_Item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryItemId
        {
            get
            {
                return _InventoryItemId;
            }
            set
            {
                OnInventoryItemIdChanging(value);
                ReportPropertyChanging("InventoryItemId");
                _InventoryItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryItemId");
                OnInventoryItemIdChanged();
            }
        }
        private global::System.Int32 _InventoryItemId;
        partial void OnInventoryItemIdChanging(global::System.Int32 value);
        partial void OnInventoryItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_HScode")]
        public xcuda_HScode xcuda_HScode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_HScode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_HScode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_HScode> xcuda_HScodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_HScode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_xcuda_Inventory_Item_xcuda_HScode1", "xcuda_HScode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "InventoryItemsxcuda_Inventory_Item", "InventoryItems")]
        public InventoryItems InventoryItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItems>("WaterNutDB.DataLayer.InventoryItemsxcuda_Inventory_Item", "InventoryItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItems>("WaterNutDB.DataLayer.InventoryItemsxcuda_Inventory_Item", "InventoryItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItems> InventoryItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItems>("WaterNutDB.DataLayer.InventoryItemsxcuda_Inventory_Item", "InventoryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItems>("WaterNutDB.DataLayer.InventoryItemsxcuda_Inventory_Item", "InventoryItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Item object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        /// <param name="lineNumber">Initial value of the LineNumber property.</param>
        /// <param name="dPQtyAllocated">Initial value of the DPQtyAllocated property.</param>
        /// <param name="dFQtyAllocated">Initial value of the DFQtyAllocated property.</param>
        /// <param name="importComplete">Initial value of the ImportComplete property.</param>
        /// <param name="salesFactor">Initial value of the SalesFactor property.</param>
        public static xcuda_Item Createxcuda_Item(global::System.Int32 item_Id, global::System.Int32 aSYCUDA_Id, global::System.Int32 lineNumber, global::System.Double dPQtyAllocated, global::System.Double dFQtyAllocated, global::System.Boolean importComplete, global::System.Double salesFactor)
        {
            xcuda_Item xcuda_Item = new xcuda_Item();
            xcuda_Item.Item_Id = item_Id;
            xcuda_Item.ASYCUDA_Id = aSYCUDA_Id;
            xcuda_Item.LineNumber = lineNumber;
            xcuda_Item.DPQtyAllocated = dPQtyAllocated;
            xcuda_Item.DFQtyAllocated = dFQtyAllocated;
            xcuda_Item.ImportComplete = importComplete;
            xcuda_Item.SalesFactor = salesFactor;
            return xcuda_Item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Amount_deducted_from_licence
        {
            get
            {
                return _Amount_deducted_from_licence;
            }
            set
            {
                OnAmount_deducted_from_licenceChanging(value);
                ReportPropertyChanging("Amount_deducted_from_licence");
                _Amount_deducted_from_licence = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Amount_deducted_from_licence");
                OnAmount_deducted_from_licenceChanged();
            }
        }
        private global::System.String _Amount_deducted_from_licence;
        partial void OnAmount_deducted_from_licenceChanging(global::System.String value);
        partial void OnAmount_deducted_from_licenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Quantity_deducted_from_licence
        {
            get
            {
                return _Quantity_deducted_from_licence;
            }
            set
            {
                OnQuantity_deducted_from_licenceChanging(value);
                ReportPropertyChanging("Quantity_deducted_from_licence");
                _Quantity_deducted_from_licence = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Quantity_deducted_from_licence");
                OnQuantity_deducted_from_licenceChanged();
            }
        }
        private global::System.String _Quantity_deducted_from_licence;
        partial void OnQuantity_deducted_from_licenceChanging(global::System.String value);
        partial void OnQuantity_deducted_from_licenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Licence_number
        {
            get
            {
                return _Licence_number;
            }
            set
            {
                OnLicence_numberChanging(value);
                ReportPropertyChanging("Licence_number");
                _Licence_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Licence_number");
                OnLicence_numberChanged();
            }
        }
        private global::System.String _Licence_number;
        partial void OnLicence_numberChanging(global::System.String value);
        partial void OnLicence_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Free_text_1
        {
            get
            {
                return _Free_text_1;
            }
            set
            {
                OnFree_text_1Changing(value);
                ReportPropertyChanging("Free_text_1");
                _Free_text_1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Free_text_1");
                OnFree_text_1Changed();
            }
        }
        private global::System.String _Free_text_1;
        partial void OnFree_text_1Changing(global::System.String value);
        partial void OnFree_text_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Free_text_2
        {
            get
            {
                return _Free_text_2;
            }
            set
            {
                OnFree_text_2Changing(value);
                ReportPropertyChanging("Free_text_2");
                _Free_text_2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Free_text_2");
                OnFree_text_2Changed();
            }
        }
        private global::System.String _Free_text_2;
        partial void OnFree_text_2Changing(global::System.String value);
        partial void OnFree_text_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryDataDetailsId
        {
            get
            {
                return _EntryDataDetailsId;
            }
            set
            {
                OnEntryDataDetailsIdChanging(value);
                ReportPropertyChanging("EntryDataDetailsId");
                _EntryDataDetailsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDataDetailsId");
                OnEntryDataDetailsIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryDataDetailsId;
        partial void OnEntryDataDetailsIdChanging(Nullable<global::System.Int32> value);
        partial void OnEntryDataDetailsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineNumber
        {
            get
            {
                return _LineNumber;
            }
            set
            {
                OnLineNumberChanging(value);
                ReportPropertyChanging("LineNumber");
                _LineNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineNumber");
                OnLineNumberChanged();
            }
        }
        private global::System.Int32 _LineNumber;
        partial void OnLineNumberChanging(global::System.Int32 value);
        partial void OnLineNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAssessed
        {
            get
            {
                return _IsAssessed;
            }
            set
            {
                OnIsAssessedChanging(value);
                ReportPropertyChanging("IsAssessed");
                _IsAssessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAssessed");
                OnIsAssessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAssessed;
        partial void OnIsAssessedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAssessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DPQtyAllocated
        {
            get
            {
                return _DPQtyAllocated;
            }
            set
            {
                OnDPQtyAllocatedChanging(value);
                ReportPropertyChanging("DPQtyAllocated");
                _DPQtyAllocated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DPQtyAllocated");
                OnDPQtyAllocatedChanged();
            }
        }
        private global::System.Double _DPQtyAllocated;
        partial void OnDPQtyAllocatedChanging(global::System.Double value);
        partial void OnDPQtyAllocatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DFQtyAllocated
        {
            get
            {
                return _DFQtyAllocated;
            }
            set
            {
                OnDFQtyAllocatedChanging(value);
                ReportPropertyChanging("DFQtyAllocated");
                _DFQtyAllocated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DFQtyAllocated");
                OnDFQtyAllocatedChanged();
            }
        }
        private global::System.Double _DFQtyAllocated;
        partial void OnDFQtyAllocatedChanging(global::System.Double value);
        partial void OnDFQtyAllocatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryTimeStamp
        {
            get
            {
                return _EntryTimeStamp;
            }
            set
            {
                OnEntryTimeStampChanging(value);
                ReportPropertyChanging("EntryTimeStamp");
                _EntryTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTimeStamp");
                OnEntryTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryTimeStamp;
        partial void OnEntryTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AttributeOnlyAllocation
        {
            get
            {
                return _AttributeOnlyAllocation;
            }
            set
            {
                OnAttributeOnlyAllocationChanging(value);
                ReportPropertyChanging("AttributeOnlyAllocation");
                _AttributeOnlyAllocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttributeOnlyAllocation");
                OnAttributeOnlyAllocationChanged();
            }
        }
        private Nullable<global::System.Boolean> _AttributeOnlyAllocation;
        partial void OnAttributeOnlyAllocationChanging(Nullable<global::System.Boolean> value);
        partial void OnAttributeOnlyAllocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DoNotAllocate
        {
            get
            {
                return _DoNotAllocate;
            }
            set
            {
                OnDoNotAllocateChanging(value);
                ReportPropertyChanging("DoNotAllocate");
                _DoNotAllocate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotAllocate");
                OnDoNotAllocateChanged();
            }
        }
        private Nullable<global::System.Boolean> _DoNotAllocate;
        partial void OnDoNotAllocateChanging(Nullable<global::System.Boolean> value);
        partial void OnDoNotAllocateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DoNotEX
        {
            get
            {
                return _DoNotEX;
            }
            set
            {
                OnDoNotEXChanging(value);
                ReportPropertyChanging("DoNotEX");
                _DoNotEX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotEX");
                OnDoNotEXChanged();
            }
        }
        private Nullable<global::System.Boolean> _DoNotEX;
        partial void OnDoNotEXChanging(Nullable<global::System.Boolean> value);
        partial void OnDoNotEXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ImportComplete
        {
            get
            {
                return _ImportComplete;
            }
            set
            {
                OnImportCompleteChanging(value);
                ReportPropertyChanging("ImportComplete");
                _ImportComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImportComplete");
                OnImportCompleteChanged();
            }
        }
        private global::System.Boolean _ImportComplete;
        partial void OnImportCompleteChanging(global::System.Boolean value);
        partial void OnImportCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseError
        {
            get
            {
                return _WarehouseError;
            }
            set
            {
                OnWarehouseErrorChanging(value);
                ReportPropertyChanging("WarehouseError");
                _WarehouseError = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseError");
                OnWarehouseErrorChanged();
            }
        }
        private global::System.String _WarehouseError;
        partial void OnWarehouseErrorChanging(global::System.String value);
        partial void OnWarehouseErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SalesFactor
        {
            get
            {
                return _SalesFactor;
            }
            set
            {
                OnSalesFactorChanging(value);
                ReportPropertyChanging("SalesFactor");
                _SalesFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesFactor");
                OnSalesFactorChanged();
            }
        }
        private global::System.Double _SalesFactor;
        partial void OnSalesFactorChanging(global::System.Double value);
        partial void OnSalesFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousInvoiceNumber
        {
            get
            {
                return _PreviousInvoiceNumber;
            }
            set
            {
                OnPreviousInvoiceNumberChanging(value);
                ReportPropertyChanging("PreviousInvoiceNumber");
                _PreviousInvoiceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousInvoiceNumber");
                OnPreviousInvoiceNumberChanged();
            }
        }
        private global::System.String _PreviousInvoiceNumber;
        partial void OnPreviousInvoiceNumberChanging(global::System.String value);
        partial void OnPreviousInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousInvoiceLineNumber
        {
            get
            {
                return _PreviousInvoiceLineNumber;
            }
            set
            {
                OnPreviousInvoiceLineNumberChanging(value);
                ReportPropertyChanging("PreviousInvoiceLineNumber");
                _PreviousInvoiceLineNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousInvoiceLineNumber");
                OnPreviousInvoiceLineNumberChanged();
            }
        }
        private global::System.String _PreviousInvoiceLineNumber;
        partial void OnPreviousInvoiceLineNumberChanging(global::System.String value);
        partial void OnPreviousInvoiceLineNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousInvoiceItemNumber
        {
            get
            {
                return _PreviousInvoiceItemNumber;
            }
            set
            {
                OnPreviousInvoiceItemNumberChanging(value);
                ReportPropertyChanging("PreviousInvoiceItemNumber");
                _PreviousInvoiceItemNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousInvoiceItemNumber");
                OnPreviousInvoiceItemNumberChanged();
            }
        }
        private global::System.String _PreviousInvoiceItemNumber;
        partial void OnPreviousInvoiceItemNumberChanging(global::System.String value);
        partial void OnPreviousInvoiceItemNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryDataType
        {
            get
            {
                return _EntryDataType;
            }
            set
            {
                OnEntryDataTypeChanging(value);
                ReportPropertyChanging("EntryDataType");
                _EntryDataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntryDataType");
                OnEntryDataTypeChanged();
            }
        }
        private global::System.String _EntryDataType;
        partial void OnEntryDataTypeChanging(global::System.String value);
        partial void OnEntryDataTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Item", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Item", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Item", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Item", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Item", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Attached_documents", "xcuda_Attached_documents")]
        public EntityCollection<xcuda_Attached_documents> xcuda_Attached_documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Attached_documents>("WaterNutDB.DataLayer.FK_Item_Attached_documents", "xcuda_Attached_documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Attached_documents>("WaterNutDB.DataLayer.FK_Item_Attached_documents", "xcuda_Attached_documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Goods_description", "xcuda_Goods_description")]
        public xcuda_Goods_description xcuda_Goods_description
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Goods_description>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Goods_description").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Goods_description>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Goods_description").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Goods_description> xcuda_Goods_descriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Goods_description>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Goods_description");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Goods_description>("WaterNutDB.DataLayer.FK_Item_Goods_description", "xcuda_Goods_description", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Packages", "xcuda_Packages")]
        public EntityCollection<xcuda_Packages> xcuda_Packages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Packages>("WaterNutDB.DataLayer.FK_Item_Packages", "xcuda_Packages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Packages>("WaterNutDB.DataLayer.FK_Item_Packages", "xcuda_Packages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Previous_doc", "xcuda_Previous_doc")]
        public xcuda_Previous_doc xcuda_Previous_doc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Previous_doc>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Previous_doc").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Previous_doc>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Previous_doc").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Previous_doc> xcuda_Previous_docReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Previous_doc>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Previous_doc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Previous_doc>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Previous_doc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Suppliers_link", "xcuda_Suppliers_link")]
        public EntityCollection<xcuda_Suppliers_link> xcuda_Suppliers_link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Suppliers_link>("WaterNutDB.DataLayer.FK_Item_Suppliers_link", "xcuda_Suppliers_link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Suppliers_link>("WaterNutDB.DataLayer.FK_Item_Suppliers_link", "xcuda_Suppliers_link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Tarification", "xcuda_Tarification")]
        public xcuda_Tarification xcuda_Tarification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Tarification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Tarification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Tarification> xcuda_TarificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Tarification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Tarification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Taxation", "xcuda_Taxation")]
        public EntityCollection<xcuda_Taxation> xcuda_Taxation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Taxation>("WaterNutDB.DataLayer.FK_Item_Taxation", "xcuda_Taxation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Taxation>("WaterNutDB.DataLayer.FK_Item_Taxation", "xcuda_Taxation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Valuation_item", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Valuation_item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_PreviousItem_xcuda_Item", "xcuda_PreviousItem")]
        public xcuda_PreviousItem xcuda_PreviousItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_PreviousItem>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_PreviousItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_PreviousItem>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_PreviousItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_PreviousItem> xcuda_PreviousItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_PreviousItem>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_PreviousItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_PreviousItem>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_PreviousItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_EntryPreviousItems_xcuda_Item", "EntryPreviousItems")]
        public EntityCollection<EntryPreviousItems> EntryPreviousItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntryPreviousItems>("WaterNutDB.DataLayer.FK_EntryPreviousItems_xcuda_Item", "EntryPreviousItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntryPreviousItems>("WaterNutDB.DataLayer.FK_EntryPreviousItems_xcuda_Item", "EntryPreviousItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_item_deduction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_item_deduction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_item_deduction object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_item_deduction Createxcuda_item_deduction(global::System.Double amount_national_currency, global::System.Double amount_foreign_currency, global::System.Int32 valuation_item_Id)
        {
            xcuda_item_deduction xcuda_item_deduction = new xcuda_item_deduction();
            xcuda_item_deduction.Amount_national_currency = amount_national_currency;
            xcuda_item_deduction.Amount_foreign_currency = amount_foreign_currency;
            xcuda_item_deduction.Valuation_item_Id = valuation_item_Id;
            return xcuda_item_deduction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Double _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Double value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Double _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Double value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private Nullable<global::System.Double> _Currency_rate;
        partial void OnCurrency_rateChanging(Nullable<global::System.Double> value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_deduction", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_item_external_freight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_item_external_freight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_item_external_freight object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_item_external_freight Createxcuda_item_external_freight(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_item_Id)
        {
            xcuda_item_external_freight xcuda_item_external_freight = new xcuda_item_external_freight();
            xcuda_item_external_freight.Amount_national_currency = amount_national_currency;
            xcuda_item_external_freight.Amount_foreign_currency = amount_foreign_currency;
            xcuda_item_external_freight.Currency_rate = currency_rate;
            xcuda_item_external_freight.Valuation_item_Id = valuation_item_Id;
            return xcuda_item_external_freight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_external_freight", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_item_insurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_item_insurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_item_insurance object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_item_insurance Createxcuda_item_insurance(global::System.Double amount_national_currency, global::System.Double amount_foreign_currency, global::System.Int32 valuation_item_Id)
        {
            xcuda_item_insurance xcuda_item_insurance = new xcuda_item_insurance();
            xcuda_item_insurance.Amount_national_currency = amount_national_currency;
            xcuda_item_insurance.Amount_foreign_currency = amount_foreign_currency;
            xcuda_item_insurance.Valuation_item_Id = valuation_item_Id;
            return xcuda_item_insurance;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Double _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Double value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Double _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Double value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private Nullable<global::System.Double> _Currency_rate;
        partial void OnCurrency_rateChanging(Nullable<global::System.Double> value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_insurance", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_item_internal_freight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_item_internal_freight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_item_internal_freight object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_item_internal_freight Createxcuda_item_internal_freight(global::System.Double amount_national_currency, global::System.Double amount_foreign_currency, global::System.Int32 valuation_item_Id)
        {
            xcuda_item_internal_freight xcuda_item_internal_freight = new xcuda_item_internal_freight();
            xcuda_item_internal_freight.Amount_national_currency = amount_national_currency;
            xcuda_item_internal_freight.Amount_foreign_currency = amount_foreign_currency;
            xcuda_item_internal_freight.Valuation_item_Id = valuation_item_Id;
            return xcuda_item_internal_freight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Double _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Double value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Double _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Double value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private Nullable<global::System.Double> _Currency_rate;
        partial void OnCurrency_rateChanging(Nullable<global::System.Double> value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_internal_freight", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Item_Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Item_Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Item_Invoice object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="currency_rate">Initial value of the Currency_rate property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_Item_Invoice Createxcuda_Item_Invoice(global::System.Single amount_national_currency, global::System.Single amount_foreign_currency, global::System.Single currency_rate, global::System.Int32 valuation_item_Id)
        {
            xcuda_Item_Invoice xcuda_Item_Invoice = new xcuda_Item_Invoice();
            xcuda_Item_Invoice.Amount_national_currency = amount_national_currency;
            xcuda_Item_Invoice.Amount_foreign_currency = amount_foreign_currency;
            xcuda_Item_Invoice.Currency_rate = currency_rate;
            xcuda_Item_Invoice.Valuation_item_Id = valuation_item_Id;
            return xcuda_Item_Invoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Single _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Single value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Single _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Single value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_code
        {
            get
            {
                return _Currency_code;
            }
            set
            {
                OnCurrency_codeChanging(value);
                ReportPropertyChanging("Currency_code");
                _Currency_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_code");
                OnCurrency_codeChanged();
            }
        }
        private global::System.String _Currency_code;
        partial void OnCurrency_codeChanging(global::System.String value);
        partial void OnCurrency_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private global::System.Single _Currency_rate;
        partial void OnCurrency_rateChanging(global::System.Single value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Item_Invoice", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_item_other_cost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_item_other_cost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_item_other_cost object.
        /// </summary>
        /// <param name="amount_national_currency">Initial value of the Amount_national_currency property.</param>
        /// <param name="amount_foreign_currency">Initial value of the Amount_foreign_currency property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_item_other_cost Createxcuda_item_other_cost(global::System.Double amount_national_currency, global::System.Double amount_foreign_currency, global::System.Int32 valuation_item_Id)
        {
            xcuda_item_other_cost xcuda_item_other_cost = new xcuda_item_other_cost();
            xcuda_item_other_cost.Amount_national_currency = amount_national_currency;
            xcuda_item_other_cost.Amount_foreign_currency = amount_foreign_currency;
            xcuda_item_other_cost.Valuation_item_Id = valuation_item_Id;
            return xcuda_item_other_cost;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_national_currency
        {
            get
            {
                return _Amount_national_currency;
            }
            set
            {
                OnAmount_national_currencyChanging(value);
                ReportPropertyChanging("Amount_national_currency");
                _Amount_national_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_national_currency");
                OnAmount_national_currencyChanged();
            }
        }
        private global::System.Double _Amount_national_currency;
        partial void OnAmount_national_currencyChanging(global::System.Double value);
        partial void OnAmount_national_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount_foreign_currency
        {
            get
            {
                return _Amount_foreign_currency;
            }
            set
            {
                OnAmount_foreign_currencyChanging(value);
                ReportPropertyChanging("Amount_foreign_currency");
                _Amount_foreign_currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount_foreign_currency");
                OnAmount_foreign_currencyChanged();
            }
        }
        private global::System.Double _Amount_foreign_currency;
        partial void OnAmount_foreign_currencyChanging(global::System.Double value);
        partial void OnAmount_foreign_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_name
        {
            get
            {
                return _Currency_name;
            }
            set
            {
                OnCurrency_nameChanging(value);
                ReportPropertyChanging("Currency_name");
                _Currency_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_name");
                OnCurrency_nameChanged();
            }
        }
        private global::System.String _Currency_name;
        partial void OnCurrency_nameChanging(global::System.String value);
        partial void OnCurrency_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Currency_rate
        {
            get
            {
                return _Currency_rate;
            }
            set
            {
                OnCurrency_rateChanging(value);
                ReportPropertyChanging("Currency_rate");
                _Currency_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_rate");
                OnCurrency_rateChanged();
            }
        }
        private Nullable<global::System.Double> _Currency_rate;
        partial void OnCurrency_rateChanging(Nullable<global::System.Double> value);
        partial void OnCurrency_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_other_cost", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Market_valuer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Market_valuer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Market_valuer object.
        /// </summary>
        /// <param name="currency_amount">Initial value of the Currency_amount property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_Market_valuer Createxcuda_Market_valuer(global::System.Double currency_amount, global::System.Int32 valuation_item_Id)
        {
            xcuda_Market_valuer xcuda_Market_valuer = new xcuda_Market_valuer();
            xcuda_Market_valuer.Currency_amount = currency_amount;
            xcuda_Market_valuer.Valuation_item_Id = valuation_item_Id;
            return xcuda_Market_valuer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Currency_amount
        {
            get
            {
                return _Currency_amount;
            }
            set
            {
                OnCurrency_amountChanging(value);
                ReportPropertyChanging("Currency_amount");
                _Currency_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_amount");
                OnCurrency_amountChanged();
            }
        }
        private global::System.Double _Currency_amount;
        partial void OnCurrency_amountChanging(global::System.Double value);
        partial void OnCurrency_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Basis_amount
        {
            get
            {
                return _Basis_amount;
            }
            set
            {
                OnBasis_amountChanging(value);
                ReportPropertyChanging("Basis_amount");
                _Basis_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Basis_amount");
                OnBasis_amountChanged();
            }
        }
        private Nullable<global::System.Double> _Basis_amount;
        partial void OnBasis_amountChanging(Nullable<global::System.Double> value);
        partial void OnBasis_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Market_valuer", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Means_of_transport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Means_of_transport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Means_of_transport object.
        /// </summary>
        /// <param name="means_of_transport_Id">Initial value of the Means_of_transport_Id property.</param>
        public static xcuda_Means_of_transport Createxcuda_Means_of_transport(global::System.Int32 means_of_transport_Id)
        {
            xcuda_Means_of_transport xcuda_Means_of_transport = new xcuda_Means_of_transport();
            xcuda_Means_of_transport.Means_of_transport_Id = means_of_transport_Id;
            return xcuda_Means_of_transport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Means_of_transport_Id
        {
            get
            {
                return _Means_of_transport_Id;
            }
            set
            {
                if (_Means_of_transport_Id != value)
                {
                    OnMeans_of_transport_IdChanging(value);
                    ReportPropertyChanging("Means_of_transport_Id");
                    _Means_of_transport_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Means_of_transport_Id");
                    OnMeans_of_transport_IdChanged();
                }
            }
        }
        private global::System.Int32 _Means_of_transport_Id;
        partial void OnMeans_of_transport_IdChanging(global::System.Int32 value);
        partial void OnMeans_of_transport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transport_Id
        {
            get
            {
                return _Transport_Id;
            }
            set
            {
                OnTransport_IdChanging(value);
                ReportPropertyChanging("Transport_Id");
                _Transport_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transport_Id");
                OnTransport_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transport_Id;
        partial void OnTransport_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inland_mode_of_transport
        {
            get
            {
                return _Inland_mode_of_transport;
            }
            set
            {
                OnInland_mode_of_transportChanging(value);
                ReportPropertyChanging("Inland_mode_of_transport");
                _Inland_mode_of_transport = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inland_mode_of_transport");
                OnInland_mode_of_transportChanged();
            }
        }
        private global::System.String _Inland_mode_of_transport;
        partial void OnInland_mode_of_transportChanging(global::System.String value);
        partial void OnInland_mode_of_transportChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Means_of_transport_Border_information", "xcuda_Border_information")]
        public EntityCollection<xcuda_Border_information> xcuda_Border_information
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Border_information>("WaterNutDB.DataLayer.FK_Means_of_transport_Border_information", "xcuda_Border_information");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Border_information>("WaterNutDB.DataLayer.FK_Means_of_transport_Border_information", "xcuda_Border_information", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Means_of_transport_Departure_arrival_information", "xcuda_Departure_arrival_information")]
        public EntityCollection<xcuda_Departure_arrival_information> xcuda_Departure_arrival_information
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Departure_arrival_information>("WaterNutDB.DataLayer.FK_Means_of_transport_Departure_arrival_information", "xcuda_Departure_arrival_information");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Departure_arrival_information>("WaterNutDB.DataLayer.FK_Means_of_transport_Departure_arrival_information", "xcuda_Departure_arrival_information", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Means_of_transport", "xcuda_Transport")]
        public xcuda_Transport xcuda_Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Means_of_transport", "xcuda_Transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Means_of_transport", "xcuda_Transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transport> xcuda_TransportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Means_of_transport", "xcuda_Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Means_of_transport", "xcuda_Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Nbers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Nbers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Nbers object.
        /// </summary>
        /// <param name="total_number_of_packages">Initial value of the Total_number_of_packages property.</param>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Nbers Createxcuda_Nbers(global::System.Double total_number_of_packages, global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Nbers xcuda_Nbers = new xcuda_Nbers();
            xcuda_Nbers.Total_number_of_packages = total_number_of_packages;
            xcuda_Nbers.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Nbers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number_of_loading_lists
        {
            get
            {
                return _Number_of_loading_lists;
            }
            set
            {
                OnNumber_of_loading_listsChanging(value);
                ReportPropertyChanging("Number_of_loading_lists");
                _Number_of_loading_lists = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number_of_loading_lists");
                OnNumber_of_loading_listsChanged();
            }
        }
        private global::System.String _Number_of_loading_lists;
        partial void OnNumber_of_loading_listsChanging(global::System.String value);
        partial void OnNumber_of_loading_listsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Total_number_of_items
        {
            get
            {
                return _Total_number_of_items;
            }
            set
            {
                OnTotal_number_of_itemsChanging(value);
                ReportPropertyChanging("Total_number_of_items");
                _Total_number_of_items = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Total_number_of_items");
                OnTotal_number_of_itemsChanged();
            }
        }
        private global::System.String _Total_number_of_items;
        partial void OnTotal_number_of_itemsChanging(global::System.String value);
        partial void OnTotal_number_of_itemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total_number_of_packages
        {
            get
            {
                return _Total_number_of_packages;
            }
            set
            {
                OnTotal_number_of_packagesChanging(value);
                ReportPropertyChanging("Total_number_of_packages");
                _Total_number_of_packages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_number_of_packages");
                OnTotal_number_of_packagesChanged();
            }
        }
        private global::System.Double _Total_number_of_packages;
        partial void OnTotal_number_of_packagesChanging(global::System.Double value);
        partial void OnTotal_number_of_packagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Property_Nbers", "xcuda_Property")]
        public xcuda_Property xcuda_Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Property> xcuda_PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Property>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Office_segment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Office_segment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Office_segment object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Office_segment Createxcuda_Office_segment(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Office_segment xcuda_Office_segment = new xcuda_Office_segment();
            xcuda_Office_segment.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Office_segment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customs_clearance_office_code
        {
            get
            {
                return _Customs_clearance_office_code;
            }
            set
            {
                OnCustoms_clearance_office_codeChanging(value);
                ReportPropertyChanging("Customs_clearance_office_code");
                _Customs_clearance_office_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customs_clearance_office_code");
                OnCustoms_clearance_office_codeChanged();
            }
        }
        private global::System.String _Customs_clearance_office_code;
        partial void OnCustoms_clearance_office_codeChanging(global::System.String value);
        partial void OnCustoms_clearance_office_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customs_Clearance_office_name
        {
            get
            {
                return _Customs_Clearance_office_name;
            }
            set
            {
                OnCustoms_Clearance_office_nameChanging(value);
                ReportPropertyChanging("Customs_Clearance_office_name");
                _Customs_Clearance_office_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customs_Clearance_office_name");
                OnCustoms_Clearance_office_nameChanged();
            }
        }
        private global::System.String _Customs_Clearance_office_name;
        partial void OnCustoms_Clearance_office_nameChanging(global::System.String value);
        partial void OnCustoms_Clearance_office_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Office_segment", "xcuda_Identification")]
        public xcuda_Identification xcuda_Identification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Identification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Identification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Identification> xcuda_IdentificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Identification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Office_segment", "xcuda_Identification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Packages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Packages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Packages object.
        /// </summary>
        /// <param name="number_of_packages">Initial value of the Number_of_packages property.</param>
        /// <param name="packages_Id">Initial value of the Packages_Id property.</param>
        public static xcuda_Packages Createxcuda_Packages(global::System.Double number_of_packages, global::System.Int32 packages_Id)
        {
            xcuda_Packages xcuda_Packages = new xcuda_Packages();
            xcuda_Packages.Number_of_packages = number_of_packages;
            xcuda_Packages.Packages_Id = packages_Id;
            return xcuda_Packages;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Number_of_packages
        {
            get
            {
                return _Number_of_packages;
            }
            set
            {
                OnNumber_of_packagesChanging(value);
                ReportPropertyChanging("Number_of_packages");
                _Number_of_packages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number_of_packages");
                OnNumber_of_packagesChanged();
            }
        }
        private global::System.Double _Number_of_packages;
        partial void OnNumber_of_packagesChanging(global::System.Double value);
        partial void OnNumber_of_packagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kind_of_packages_code
        {
            get
            {
                return _Kind_of_packages_code;
            }
            set
            {
                OnKind_of_packages_codeChanging(value);
                ReportPropertyChanging("Kind_of_packages_code");
                _Kind_of_packages_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kind_of_packages_code");
                OnKind_of_packages_codeChanged();
            }
        }
        private global::System.String _Kind_of_packages_code;
        partial void OnKind_of_packages_codeChanging(global::System.String value);
        partial void OnKind_of_packages_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kind_of_packages_name
        {
            get
            {
                return _Kind_of_packages_name;
            }
            set
            {
                OnKind_of_packages_nameChanging(value);
                ReportPropertyChanging("Kind_of_packages_name");
                _Kind_of_packages_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kind_of_packages_name");
                OnKind_of_packages_nameChanged();
            }
        }
        private global::System.String _Kind_of_packages_name;
        partial void OnKind_of_packages_nameChanging(global::System.String value);
        partial void OnKind_of_packages_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Packages_Id
        {
            get
            {
                return _Packages_Id;
            }
            set
            {
                if (_Packages_Id != value)
                {
                    OnPackages_IdChanging(value);
                    ReportPropertyChanging("Packages_Id");
                    _Packages_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Packages_Id");
                    OnPackages_IdChanged();
                }
            }
        }
        private global::System.Int32 _Packages_Id;
        partial void OnPackages_IdChanging(global::System.Int32 value);
        partial void OnPackages_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Item_Id;
        partial void OnItem_IdChanging(Nullable<global::System.Int32> value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Marks1_of_packages
        {
            get
            {
                return _Marks1_of_packages;
            }
            set
            {
                OnMarks1_of_packagesChanging(value);
                ReportPropertyChanging("Marks1_of_packages");
                _Marks1_of_packages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Marks1_of_packages");
                OnMarks1_of_packagesChanged();
            }
        }
        private global::System.String _Marks1_of_packages;
        partial void OnMarks1_of_packagesChanging(global::System.String value);
        partial void OnMarks1_of_packagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Marks2_of_packages
        {
            get
            {
                return _Marks2_of_packages;
            }
            set
            {
                OnMarks2_of_packagesChanging(value);
                ReportPropertyChanging("Marks2_of_packages");
                _Marks2_of_packages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Marks2_of_packages");
                OnMarks2_of_packagesChanged();
            }
        }
        private global::System.String _Marks2_of_packages;
        partial void OnMarks2_of_packagesChanging(global::System.String value);
        partial void OnMarks2_of_packagesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Packages", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Packages", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Packages", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Packages", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Packages", "xcuda_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Place_of_loading")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Place_of_loading : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Place_of_loading object.
        /// </summary>
        /// <param name="place_of_loading_Id">Initial value of the Place_of_loading_Id property.</param>
        public static xcuda_Place_of_loading Createxcuda_Place_of_loading(global::System.Int32 place_of_loading_Id)
        {
            xcuda_Place_of_loading xcuda_Place_of_loading = new xcuda_Place_of_loading();
            xcuda_Place_of_loading.Place_of_loading_Id = place_of_loading_Id;
            return xcuda_Place_of_loading;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Place_of_loading_Id
        {
            get
            {
                return _Place_of_loading_Id;
            }
            set
            {
                if (_Place_of_loading_Id != value)
                {
                    OnPlace_of_loading_IdChanging(value);
                    ReportPropertyChanging("Place_of_loading_Id");
                    _Place_of_loading_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Place_of_loading_Id");
                    OnPlace_of_loading_IdChanged();
                }
            }
        }
        private global::System.Int32 _Place_of_loading_Id;
        partial void OnPlace_of_loading_IdChanging(global::System.Int32 value);
        partial void OnPlace_of_loading_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transport_Id
        {
            get
            {
                return _Transport_Id;
            }
            set
            {
                OnTransport_IdChanging(value);
                ReportPropertyChanging("Transport_Id");
                _Transport_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transport_Id");
                OnTransport_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transport_Id;
        partial void OnTransport_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransport_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Place_of_loading", "xcuda_Transport")]
        public xcuda_Transport xcuda_Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Place_of_loading", "xcuda_Transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Place_of_loading", "xcuda_Transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transport> xcuda_TransportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Place_of_loading", "xcuda_Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transport>("WaterNutDB.DataLayer.FK_Transport_Place_of_loading", "xcuda_Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Previous_doc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Previous_doc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Previous_doc object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static xcuda_Previous_doc Createxcuda_Previous_doc(global::System.Int32 item_Id)
        {
            xcuda_Previous_doc xcuda_Previous_doc = new xcuda_Previous_doc();
            xcuda_Previous_doc.Item_Id = item_Id;
            return xcuda_Previous_doc;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary_declaration
        {
            get
            {
                return _Summary_declaration;
            }
            set
            {
                OnSummary_declarationChanging(value);
                ReportPropertyChanging("Summary_declaration");
                _Summary_declaration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Summary_declaration");
                OnSummary_declarationChanged();
            }
        }
        private global::System.String _Summary_declaration;
        partial void OnSummary_declarationChanging(global::System.String value);
        partial void OnSummary_declarationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Previous_doc", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Previous_doc", "xcuda_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_PreviousItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_PreviousItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_PreviousItem object.
        /// </summary>
        /// <param name="net_weight">Initial value of the Net_weight property.</param>
        /// <param name="prev_net_weight">Initial value of the Prev_net_weight property.</param>
        /// <param name="suplementary_Quantity">Initial value of the Suplementary_Quantity property.</param>
        /// <param name="preveious_suplementary_quantity">Initial value of the Preveious_suplementary_quantity property.</param>
        /// <param name="current_value">Initial value of the Current_value property.</param>
        /// <param name="previous_value">Initial value of the Previous_value property.</param>
        /// <param name="previousItem_Id">Initial value of the PreviousItem_Id property.</param>
        /// <param name="qtyAllocated">Initial value of the QtyAllocated property.</param>
        public static xcuda_PreviousItem Createxcuda_PreviousItem(global::System.Double net_weight, global::System.Double prev_net_weight, global::System.Double suplementary_Quantity, global::System.Double preveious_suplementary_quantity, global::System.Double current_value, global::System.Double previous_value, global::System.Int32 previousItem_Id, global::System.Double qtyAllocated)
        {
            xcuda_PreviousItem xcuda_PreviousItem = new xcuda_PreviousItem();
            xcuda_PreviousItem.Net_weight = net_weight;
            xcuda_PreviousItem.Prev_net_weight = prev_net_weight;
            xcuda_PreviousItem.Suplementary_Quantity = suplementary_Quantity;
            xcuda_PreviousItem.Preveious_suplementary_quantity = preveious_suplementary_quantity;
            xcuda_PreviousItem.Current_value = current_value;
            xcuda_PreviousItem.Previous_value = previous_value;
            xcuda_PreviousItem.PreviousItem_Id = previousItem_Id;
            xcuda_PreviousItem.QtyAllocated = qtyAllocated;
            return xcuda_PreviousItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Packages_number
        {
            get
            {
                return _Packages_number;
            }
            set
            {
                OnPackages_numberChanging(value);
                ReportPropertyChanging("Packages_number");
                _Packages_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Packages_number");
                OnPackages_numberChanged();
            }
        }
        private global::System.String _Packages_number;
        partial void OnPackages_numberChanging(global::System.String value);
        partial void OnPackages_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Previous_Packages_number
        {
            get
            {
                return _Previous_Packages_number;
            }
            set
            {
                OnPrevious_Packages_numberChanging(value);
                ReportPropertyChanging("Previous_Packages_number");
                _Previous_Packages_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Previous_Packages_number");
                OnPrevious_Packages_numberChanged();
            }
        }
        private global::System.String _Previous_Packages_number;
        partial void OnPrevious_Packages_numberChanging(global::System.String value);
        partial void OnPrevious_Packages_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hs_code
        {
            get
            {
                return _Hs_code;
            }
            set
            {
                OnHs_codeChanging(value);
                ReportPropertyChanging("Hs_code");
                _Hs_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hs_code");
                OnHs_codeChanged();
            }
        }
        private global::System.String _Hs_code;
        partial void OnHs_codeChanging(global::System.String value);
        partial void OnHs_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Commodity_code
        {
            get
            {
                return _Commodity_code;
            }
            set
            {
                OnCommodity_codeChanging(value);
                ReportPropertyChanging("Commodity_code");
                _Commodity_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Commodity_code");
                OnCommodity_codeChanged();
            }
        }
        private global::System.String _Commodity_code;
        partial void OnCommodity_codeChanging(global::System.String value);
        partial void OnCommodity_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Previous_item_number
        {
            get
            {
                return _Previous_item_number;
            }
            set
            {
                OnPrevious_item_numberChanging(value);
                ReportPropertyChanging("Previous_item_number");
                _Previous_item_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Previous_item_number");
                OnPrevious_item_numberChanged();
            }
        }
        private global::System.String _Previous_item_number;
        partial void OnPrevious_item_numberChanging(global::System.String value);
        partial void OnPrevious_item_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Goods_origin
        {
            get
            {
                return _Goods_origin;
            }
            set
            {
                OnGoods_originChanging(value);
                ReportPropertyChanging("Goods_origin");
                _Goods_origin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Goods_origin");
                OnGoods_originChanged();
            }
        }
        private global::System.String _Goods_origin;
        partial void OnGoods_originChanging(global::System.String value);
        partial void OnGoods_originChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Net_weight
        {
            get
            {
                return _Net_weight;
            }
            set
            {
                OnNet_weightChanging(value);
                ReportPropertyChanging("Net_weight");
                _Net_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Net_weight");
                OnNet_weightChanged();
            }
        }
        private global::System.Double _Net_weight;
        partial void OnNet_weightChanging(global::System.Double value);
        partial void OnNet_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Prev_net_weight
        {
            get
            {
                return _Prev_net_weight;
            }
            set
            {
                OnPrev_net_weightChanging(value);
                ReportPropertyChanging("Prev_net_weight");
                _Prev_net_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Prev_net_weight");
                OnPrev_net_weightChanged();
            }
        }
        private global::System.Double _Prev_net_weight;
        partial void OnPrev_net_weightChanging(global::System.Double value);
        partial void OnPrev_net_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prev_reg_ser
        {
            get
            {
                return _Prev_reg_ser;
            }
            set
            {
                OnPrev_reg_serChanging(value);
                ReportPropertyChanging("Prev_reg_ser");
                _Prev_reg_ser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prev_reg_ser");
                OnPrev_reg_serChanged();
            }
        }
        private global::System.String _Prev_reg_ser;
        partial void OnPrev_reg_serChanging(global::System.String value);
        partial void OnPrev_reg_serChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prev_reg_nbr
        {
            get
            {
                return _Prev_reg_nbr;
            }
            set
            {
                OnPrev_reg_nbrChanging(value);
                ReportPropertyChanging("Prev_reg_nbr");
                _Prev_reg_nbr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prev_reg_nbr");
                OnPrev_reg_nbrChanged();
            }
        }
        private global::System.String _Prev_reg_nbr;
        partial void OnPrev_reg_nbrChanging(global::System.String value);
        partial void OnPrev_reg_nbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prev_reg_dat
        {
            get
            {
                return _Prev_reg_dat;
            }
            set
            {
                OnPrev_reg_datChanging(value);
                ReportPropertyChanging("Prev_reg_dat");
                _Prev_reg_dat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prev_reg_dat");
                OnPrev_reg_datChanged();
            }
        }
        private global::System.String _Prev_reg_dat;
        partial void OnPrev_reg_datChanging(global::System.String value);
        partial void OnPrev_reg_datChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prev_reg_cuo
        {
            get
            {
                return _Prev_reg_cuo;
            }
            set
            {
                OnPrev_reg_cuoChanging(value);
                ReportPropertyChanging("Prev_reg_cuo");
                _Prev_reg_cuo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prev_reg_cuo");
                OnPrev_reg_cuoChanged();
            }
        }
        private global::System.String _Prev_reg_cuo;
        partial void OnPrev_reg_cuoChanging(global::System.String value);
        partial void OnPrev_reg_cuoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Suplementary_Quantity
        {
            get
            {
                return _Suplementary_Quantity;
            }
            set
            {
                OnSuplementary_QuantityChanging(value);
                ReportPropertyChanging("Suplementary_Quantity");
                _Suplementary_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Suplementary_Quantity");
                OnSuplementary_QuantityChanged();
            }
        }
        private global::System.Double _Suplementary_Quantity;
        partial void OnSuplementary_QuantityChanging(global::System.Double value);
        partial void OnSuplementary_QuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Preveious_suplementary_quantity
        {
            get
            {
                return _Preveious_suplementary_quantity;
            }
            set
            {
                OnPreveious_suplementary_quantityChanging(value);
                ReportPropertyChanging("Preveious_suplementary_quantity");
                _Preveious_suplementary_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Preveious_suplementary_quantity");
                OnPreveious_suplementary_quantityChanged();
            }
        }
        private global::System.Double _Preveious_suplementary_quantity;
        partial void OnPreveious_suplementary_quantityChanging(global::System.Double value);
        partial void OnPreveious_suplementary_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Current_value
        {
            get
            {
                return _Current_value;
            }
            set
            {
                OnCurrent_valueChanging(value);
                ReportPropertyChanging("Current_value");
                _Current_value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Current_value");
                OnCurrent_valueChanged();
            }
        }
        private global::System.Double _Current_value;
        partial void OnCurrent_valueChanging(global::System.Double value);
        partial void OnCurrent_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Previous_value
        {
            get
            {
                return _Previous_value;
            }
            set
            {
                OnPrevious_valueChanging(value);
                ReportPropertyChanging("Previous_value");
                _Previous_value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Previous_value");
                OnPrevious_valueChanged();
            }
        }
        private global::System.Double _Previous_value;
        partial void OnPrevious_valueChanging(global::System.Double value);
        partial void OnPrevious_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Current_item_number
        {
            get
            {
                return _Current_item_number;
            }
            set
            {
                OnCurrent_item_numberChanging(value);
                ReportPropertyChanging("Current_item_number");
                _Current_item_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Current_item_number");
                OnCurrent_item_numberChanged();
            }
        }
        private global::System.String _Current_item_number;
        partial void OnCurrent_item_numberChanging(global::System.String value);
        partial void OnCurrent_item_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PreviousItem_Id
        {
            get
            {
                return _PreviousItem_Id;
            }
            set
            {
                if (_PreviousItem_Id != value)
                {
                    OnPreviousItem_IdChanging(value);
                    ReportPropertyChanging("PreviousItem_Id");
                    _PreviousItem_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreviousItem_Id");
                    OnPreviousItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _PreviousItem_Id;
        partial void OnPreviousItem_IdChanging(global::System.Int32 value);
        partial void OnPreviousItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double QtyAllocated
        {
            get
            {
                return _QtyAllocated;
            }
            set
            {
                OnQtyAllocatedChanging(value);
                ReportPropertyChanging("QtyAllocated");
                _QtyAllocated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyAllocated");
                OnQtyAllocatedChanged();
            }
        }
        private global::System.Double _QtyAllocated;
        partial void OnQtyAllocatedChanging(global::System.Double value);
        partial void OnQtyAllocatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prev_decl_HS_spec
        {
            get
            {
                return _Prev_decl_HS_spec;
            }
            set
            {
                OnPrev_decl_HS_specChanging(value);
                ReportPropertyChanging("Prev_decl_HS_spec");
                _Prev_decl_HS_spec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prev_decl_HS_spec");
                OnPrev_decl_HS_specChanged();
            }
        }
        private global::System.String _Prev_decl_HS_spec;
        partial void OnPrev_decl_HS_specChanging(global::System.String value);
        partial void OnPrev_decl_HS_specChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_PreviousItem", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_PreviousItem", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_PreviousItem", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_PreviousItem", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_PreviousItem", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_PreviousItem_xcuda_Item", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_xcuda_PreviousItem_xcuda_Item", "xcuda_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Principal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Principal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Principal object.
        /// </summary>
        /// <param name="principal_Id">Initial value of the Principal_Id property.</param>
        public static xcuda_Principal Createxcuda_Principal(global::System.Int32 principal_Id)
        {
            xcuda_Principal xcuda_Principal = new xcuda_Principal();
            xcuda_Principal.Principal_Id = principal_Id;
            return xcuda_Principal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Principal_Id
        {
            get
            {
                return _Principal_Id;
            }
            set
            {
                if (_Principal_Id != value)
                {
                    OnPrincipal_IdChanging(value);
                    ReportPropertyChanging("Principal_Id");
                    _Principal_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Principal_Id");
                    OnPrincipal_IdChanged();
                }
            }
        }
        private global::System.Int32 _Principal_Id;
        partial void OnPrincipal_IdChanging(global::System.Int32 value);
        partial void OnPrincipal_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transit_Id
        {
            get
            {
                return _Transit_Id;
            }
            set
            {
                OnTransit_IdChanging(value);
                ReportPropertyChanging("Transit_Id");
                _Transit_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transit_Id");
                OnTransit_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transit_Id;
        partial void OnTransit_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransit_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transit_Principal", "xcuda_Transit")]
        public xcuda_Transit xcuda_Transit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Principal", "xcuda_Transit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Principal", "xcuda_Transit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transit> xcuda_TransitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Principal", "xcuda_Transit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Principal", "xcuda_Transit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Property object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Property Createxcuda_Property(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Property xcuda_Property = new xcuda_Property();
            xcuda_Property.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sad_flow
        {
            get
            {
                return _Sad_flow;
            }
            set
            {
                OnSad_flowChanging(value);
                ReportPropertyChanging("Sad_flow");
                _Sad_flow = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sad_flow");
                OnSad_flowChanged();
            }
        }
        private global::System.String _Sad_flow;
        partial void OnSad_flowChanging(global::System.String value);
        partial void OnSad_flowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date_of_declaration
        {
            get
            {
                return _Date_of_declaration;
            }
            set
            {
                OnDate_of_declarationChanging(value);
                ReportPropertyChanging("Date_of_declaration");
                _Date_of_declaration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date_of_declaration");
                OnDate_of_declarationChanged();
            }
        }
        private global::System.String _Date_of_declaration;
        partial void OnDate_of_declarationChanging(global::System.String value);
        partial void OnDate_of_declarationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Selected_page
        {
            get
            {
                return _Selected_page;
            }
            set
            {
                OnSelected_pageChanging(value);
                ReportPropertyChanging("Selected_page");
                _Selected_page = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Selected_page");
                OnSelected_pageChanged();
            }
        }
        private global::System.String _Selected_page;
        partial void OnSelected_pageChanging(global::System.String value);
        partial void OnSelected_pageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Place_of_declaration
        {
            get
            {
                return _Place_of_declaration;
            }
            set
            {
                OnPlace_of_declarationChanging(value);
                ReportPropertyChanging("Place_of_declaration");
                _Place_of_declaration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Place_of_declaration");
                OnPlace_of_declarationChanged();
            }
        }
        private global::System.String _Place_of_declaration;
        partial void OnPlace_of_declarationChanging(global::System.String value);
        partial void OnPlace_of_declarationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Property", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Property", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Forms_xcuda_Property", "xcuda_Forms")]
        public xcuda_Forms xcuda_Forms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Forms>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Forms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Forms>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Forms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Forms> xcuda_FormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Forms>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Forms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Forms>("WaterNutDB.DataLayer.FK_xcuda_Forms_xcuda_Property", "xcuda_Forms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Property_Nbers", "xcuda_Nbers")]
        public xcuda_Nbers xcuda_Nbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Nbers>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Nbers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Nbers>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Nbers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Nbers> xcuda_NbersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Nbers>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Nbers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Nbers>("WaterNutDB.DataLayer.FK_Property_Nbers", "xcuda_Nbers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_receipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_receipt object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_receipt Createxcuda_receipt(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_receipt xcuda_receipt = new xcuda_receipt();
            xcuda_receipt.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_receipt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_receipt", "xcuda_Identification")]
        public xcuda_Identification xcuda_Identification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_Identification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_Identification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Identification> xcuda_IdentificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_Identification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_receipt", "xcuda_Identification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Registration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Registration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Registration object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Registration Createxcuda_Registration(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Registration xcuda_Registration = new xcuda_Registration();
            xcuda_Registration.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Registration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Registration", "xcuda_Identification")]
        public xcuda_Identification xcuda_Identification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Identification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Identification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Identification> xcuda_IdentificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Identification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Registration", "xcuda_Identification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Seals")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Seals : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Seals object.
        /// </summary>
        /// <param name="seals_Id">Initial value of the Seals_Id property.</param>
        public static xcuda_Seals Createxcuda_Seals(global::System.Int32 seals_Id)
        {
            xcuda_Seals xcuda_Seals = new xcuda_Seals();
            xcuda_Seals.Seals_Id = seals_Id;
            return xcuda_Seals;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Seals_Id
        {
            get
            {
                return _Seals_Id;
            }
            set
            {
                if (_Seals_Id != value)
                {
                    OnSeals_IdChanging(value);
                    ReportPropertyChanging("Seals_Id");
                    _Seals_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Seals_Id");
                    OnSeals_IdChanged();
                }
            }
        }
        private global::System.Int32 _Seals_Id;
        partial void OnSeals_IdChanging(global::System.Int32 value);
        partial void OnSeals_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transit_Id
        {
            get
            {
                return _Transit_Id;
            }
            set
            {
                OnTransit_IdChanging(value);
                ReportPropertyChanging("Transit_Id");
                _Transit_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transit_Id");
                OnTransit_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transit_Id;
        partial void OnTransit_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransit_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transit_Seals", "xcuda_Transit")]
        public xcuda_Transit xcuda_Transit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Seals", "xcuda_Transit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Seals", "xcuda_Transit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transit> xcuda_TransitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Seals", "xcuda_Transit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Seals", "xcuda_Transit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Signature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Signature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Signature object.
        /// </summary>
        /// <param name="signature_Id">Initial value of the Signature_Id property.</param>
        public static xcuda_Signature Createxcuda_Signature(global::System.Int32 signature_Id)
        {
            xcuda_Signature xcuda_Signature = new xcuda_Signature();
            xcuda_Signature.Signature_Id = signature_Id;
            return xcuda_Signature;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Signature_Id
        {
            get
            {
                return _Signature_Id;
            }
            set
            {
                if (_Signature_Id != value)
                {
                    OnSignature_IdChanging(value);
                    ReportPropertyChanging("Signature_Id");
                    _Signature_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Signature_Id");
                    OnSignature_IdChanged();
                }
            }
        }
        private global::System.Int32 _Signature_Id;
        partial void OnSignature_IdChanging(global::System.Int32 value);
        partial void OnSignature_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Transit_Id
        {
            get
            {
                return _Transit_Id;
            }
            set
            {
                OnTransit_IdChanging(value);
                ReportPropertyChanging("Transit_Id");
                _Transit_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transit_Id");
                OnTransit_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Transit_Id;
        partial void OnTransit_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTransit_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transit_Signature", "xcuda_Transit")]
        public xcuda_Transit xcuda_Transit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Signature", "xcuda_Transit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Signature", "xcuda_Transit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transit> xcuda_TransitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Signature", "xcuda_Transit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_Transit_Signature", "xcuda_Transit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Supplementary_unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Supplementary_unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Supplementary_unit object.
        /// </summary>
        /// <param name="supplementary_unit_Id">Initial value of the Supplementary_unit_Id property.</param>
        /// <param name="tarification_Id">Initial value of the Tarification_Id property.</param>
        public static xcuda_Supplementary_unit Createxcuda_Supplementary_unit(global::System.Int32 supplementary_unit_Id, global::System.Int32 tarification_Id)
        {
            xcuda_Supplementary_unit xcuda_Supplementary_unit = new xcuda_Supplementary_unit();
            xcuda_Supplementary_unit.Supplementary_unit_Id = supplementary_unit_Id;
            xcuda_Supplementary_unit.Tarification_Id = tarification_Id;
            return xcuda_Supplementary_unit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Suppplementary_unit_quantity
        {
            get
            {
                return _Suppplementary_unit_quantity;
            }
            set
            {
                OnSuppplementary_unit_quantityChanging(value);
                ReportPropertyChanging("Suppplementary_unit_quantity");
                _Suppplementary_unit_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Suppplementary_unit_quantity");
                OnSuppplementary_unit_quantityChanged();
            }
        }
        private Nullable<global::System.Double> _Suppplementary_unit_quantity;
        partial void OnSuppplementary_unit_quantityChanging(Nullable<global::System.Double> value);
        partial void OnSuppplementary_unit_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supplementary_unit_Id
        {
            get
            {
                return _Supplementary_unit_Id;
            }
            set
            {
                if (_Supplementary_unit_Id != value)
                {
                    OnSupplementary_unit_IdChanging(value);
                    ReportPropertyChanging("Supplementary_unit_Id");
                    _Supplementary_unit_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Supplementary_unit_Id");
                    OnSupplementary_unit_IdChanged();
                }
            }
        }
        private global::System.Int32 _Supplementary_unit_Id;
        partial void OnSupplementary_unit_IdChanging(global::System.Int32 value);
        partial void OnSupplementary_unit_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tarification_Id
        {
            get
            {
                return _Tarification_Id;
            }
            set
            {
                OnTarification_IdChanging(value);
                ReportPropertyChanging("Tarification_Id");
                _Tarification_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tarification_Id");
                OnTarification_IdChanged();
            }
        }
        private global::System.Int32 _Tarification_Id;
        partial void OnTarification_IdChanging(global::System.Int32 value);
        partial void OnTarification_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppplementary_unit_code
        {
            get
            {
                return _Suppplementary_unit_code;
            }
            set
            {
                OnSuppplementary_unit_codeChanging(value);
                ReportPropertyChanging("Suppplementary_unit_code");
                _Suppplementary_unit_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppplementary_unit_code");
                OnSuppplementary_unit_codeChanged();
            }
        }
        private global::System.String _Suppplementary_unit_code;
        partial void OnSuppplementary_unit_codeChanging(global::System.String value);
        partial void OnSuppplementary_unit_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppplementary_unit_name
        {
            get
            {
                return _Suppplementary_unit_name;
            }
            set
            {
                OnSuppplementary_unit_nameChanging(value);
                ReportPropertyChanging("Suppplementary_unit_name");
                _Suppplementary_unit_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppplementary_unit_name");
                OnSuppplementary_unit_nameChanged();
            }
        }
        private global::System.String _Suppplementary_unit_name;
        partial void OnSuppplementary_unit_nameChanging(global::System.String value);
        partial void OnSuppplementary_unit_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFirstRow
        {
            get
            {
                return _IsFirstRow;
            }
            set
            {
                OnIsFirstRowChanging(value);
                ReportPropertyChanging("IsFirstRow");
                _IsFirstRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFirstRow");
                OnIsFirstRowChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFirstRow;
        partial void OnIsFirstRowChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFirstRowChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Tarification_Supplementary_unit", "xcuda_Tarification")]
        public xcuda_Tarification xcuda_Tarification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_Supplementary_unit", "xcuda_Tarification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_Supplementary_unit", "xcuda_Tarification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Tarification> xcuda_TarificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_Supplementary_unit", "xcuda_Tarification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Tarification>("WaterNutDB.DataLayer.FK_Tarification_Supplementary_unit", "xcuda_Tarification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Suppliers_documents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Suppliers_documents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Suppliers_documents object.
        /// </summary>
        /// <param name="suppliers_documents_Id">Initial value of the Suppliers_documents_Id property.</param>
        public static xcuda_Suppliers_documents Createxcuda_Suppliers_documents(global::System.Int32 suppliers_documents_Id)
        {
            xcuda_Suppliers_documents xcuda_Suppliers_documents = new xcuda_Suppliers_documents();
            xcuda_Suppliers_documents.Suppliers_documents_Id = suppliers_documents_Id;
            return xcuda_Suppliers_documents;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_date
        {
            get
            {
                return _Suppliers_document_date;
            }
            set
            {
                OnSuppliers_document_dateChanging(value);
                ReportPropertyChanging("Suppliers_document_date");
                _Suppliers_document_date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_date");
                OnSuppliers_document_dateChanged();
            }
        }
        private global::System.String _Suppliers_document_date;
        partial void OnSuppliers_document_dateChanging(global::System.String value);
        partial void OnSuppliers_document_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Suppliers_documents_Id
        {
            get
            {
                return _Suppliers_documents_Id;
            }
            set
            {
                if (_Suppliers_documents_Id != value)
                {
                    OnSuppliers_documents_IdChanging(value);
                    ReportPropertyChanging("Suppliers_documents_Id");
                    _Suppliers_documents_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Suppliers_documents_Id");
                    OnSuppliers_documents_IdChanged();
                }
            }
        }
        private global::System.Int32 _Suppliers_documents_Id;
        partial void OnSuppliers_documents_IdChanging(global::System.Int32 value);
        partial void OnSuppliers_documents_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_itmlink
        {
            get
            {
                return _Suppliers_document_itmlink;
            }
            set
            {
                OnSuppliers_document_itmlinkChanging(value);
                ReportPropertyChanging("Suppliers_document_itmlink");
                _Suppliers_document_itmlink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_itmlink");
                OnSuppliers_document_itmlinkChanged();
            }
        }
        private global::System.String _Suppliers_document_itmlink;
        partial void OnSuppliers_document_itmlinkChanging(global::System.String value);
        partial void OnSuppliers_document_itmlinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_code
        {
            get
            {
                return _Suppliers_document_code;
            }
            set
            {
                OnSuppliers_document_codeChanging(value);
                ReportPropertyChanging("Suppliers_document_code");
                _Suppliers_document_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_code");
                OnSuppliers_document_codeChanged();
            }
        }
        private global::System.String _Suppliers_document_code;
        partial void OnSuppliers_document_codeChanging(global::System.String value);
        partial void OnSuppliers_document_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_name
        {
            get
            {
                return _Suppliers_document_name;
            }
            set
            {
                OnSuppliers_document_nameChanging(value);
                ReportPropertyChanging("Suppliers_document_name");
                _Suppliers_document_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_name");
                OnSuppliers_document_nameChanged();
            }
        }
        private global::System.String _Suppliers_document_name;
        partial void OnSuppliers_document_nameChanging(global::System.String value);
        partial void OnSuppliers_document_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_country
        {
            get
            {
                return _Suppliers_document_country;
            }
            set
            {
                OnSuppliers_document_countryChanging(value);
                ReportPropertyChanging("Suppliers_document_country");
                _Suppliers_document_country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_country");
                OnSuppliers_document_countryChanged();
            }
        }
        private global::System.String _Suppliers_document_country;
        partial void OnSuppliers_document_countryChanging(global::System.String value);
        partial void OnSuppliers_document_countryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_city
        {
            get
            {
                return _Suppliers_document_city;
            }
            set
            {
                OnSuppliers_document_cityChanging(value);
                ReportPropertyChanging("Suppliers_document_city");
                _Suppliers_document_city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_city");
                OnSuppliers_document_cityChanged();
            }
        }
        private global::System.String _Suppliers_document_city;
        partial void OnSuppliers_document_cityChanging(global::System.String value);
        partial void OnSuppliers_document_cityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_street
        {
            get
            {
                return _Suppliers_document_street;
            }
            set
            {
                OnSuppliers_document_streetChanging(value);
                ReportPropertyChanging("Suppliers_document_street");
                _Suppliers_document_street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_street");
                OnSuppliers_document_streetChanged();
            }
        }
        private global::System.String _Suppliers_document_street;
        partial void OnSuppliers_document_streetChanging(global::System.String value);
        partial void OnSuppliers_document_streetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_telephone
        {
            get
            {
                return _Suppliers_document_telephone;
            }
            set
            {
                OnSuppliers_document_telephoneChanging(value);
                ReportPropertyChanging("Suppliers_document_telephone");
                _Suppliers_document_telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_telephone");
                OnSuppliers_document_telephoneChanged();
            }
        }
        private global::System.String _Suppliers_document_telephone;
        partial void OnSuppliers_document_telephoneChanging(global::System.String value);
        partial void OnSuppliers_document_telephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_fax
        {
            get
            {
                return _Suppliers_document_fax;
            }
            set
            {
                OnSuppliers_document_faxChanging(value);
                ReportPropertyChanging("Suppliers_document_fax");
                _Suppliers_document_fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_fax");
                OnSuppliers_document_faxChanged();
            }
        }
        private global::System.String _Suppliers_document_fax;
        partial void OnSuppliers_document_faxChanging(global::System.String value);
        partial void OnSuppliers_document_faxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_zip_code
        {
            get
            {
                return _Suppliers_document_zip_code;
            }
            set
            {
                OnSuppliers_document_zip_codeChanging(value);
                ReportPropertyChanging("Suppliers_document_zip_code");
                _Suppliers_document_zip_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_zip_code");
                OnSuppliers_document_zip_codeChanged();
            }
        }
        private global::System.String _Suppliers_document_zip_code;
        partial void OnSuppliers_document_zip_codeChanging(global::System.String value);
        partial void OnSuppliers_document_zip_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_invoice_nbr
        {
            get
            {
                return _Suppliers_document_invoice_nbr;
            }
            set
            {
                OnSuppliers_document_invoice_nbrChanging(value);
                ReportPropertyChanging("Suppliers_document_invoice_nbr");
                _Suppliers_document_invoice_nbr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_invoice_nbr");
                OnSuppliers_document_invoice_nbrChanged();
            }
        }
        private global::System.String _Suppliers_document_invoice_nbr;
        partial void OnSuppliers_document_invoice_nbrChanging(global::System.String value);
        partial void OnSuppliers_document_invoice_nbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_invoice_amt
        {
            get
            {
                return _Suppliers_document_invoice_amt;
            }
            set
            {
                OnSuppliers_document_invoice_amtChanging(value);
                ReportPropertyChanging("Suppliers_document_invoice_amt");
                _Suppliers_document_invoice_amt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_invoice_amt");
                OnSuppliers_document_invoice_amtChanged();
            }
        }
        private global::System.String _Suppliers_document_invoice_amt;
        partial void OnSuppliers_document_invoice_amtChanging(global::System.String value);
        partial void OnSuppliers_document_invoice_amtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_document_type_code
        {
            get
            {
                return _Suppliers_document_type_code;
            }
            set
            {
                OnSuppliers_document_type_codeChanging(value);
                ReportPropertyChanging("Suppliers_document_type_code");
                _Suppliers_document_type_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_document_type_code");
                OnSuppliers_document_type_codeChanged();
            }
        }
        private global::System.String _Suppliers_document_type_code;
        partial void OnSuppliers_document_type_codeChanging(global::System.String value);
        partial void OnSuppliers_document_type_codeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Suppliers_documents", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Suppliers_documents", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Suppliers_documents", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Suppliers_documents", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Suppliers_documents", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Suppliers_link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Suppliers_link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Suppliers_link object.
        /// </summary>
        /// <param name="suppliers_link_Id">Initial value of the Suppliers_link_Id property.</param>
        public static xcuda_Suppliers_link Createxcuda_Suppliers_link(global::System.Int32 suppliers_link_Id)
        {
            xcuda_Suppliers_link xcuda_Suppliers_link = new xcuda_Suppliers_link();
            xcuda_Suppliers_link.Suppliers_link_Id = suppliers_link_Id;
            return xcuda_Suppliers_link;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suppliers_link_code
        {
            get
            {
                return _Suppliers_link_code;
            }
            set
            {
                OnSuppliers_link_codeChanging(value);
                ReportPropertyChanging("Suppliers_link_code");
                _Suppliers_link_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suppliers_link_code");
                OnSuppliers_link_codeChanged();
            }
        }
        private global::System.String _Suppliers_link_code;
        partial void OnSuppliers_link_codeChanging(global::System.String value);
        partial void OnSuppliers_link_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Item_Id;
        partial void OnItem_IdChanging(Nullable<global::System.Int32> value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Suppliers_link_Id
        {
            get
            {
                return _Suppliers_link_Id;
            }
            set
            {
                if (_Suppliers_link_Id != value)
                {
                    OnSuppliers_link_IdChanging(value);
                    ReportPropertyChanging("Suppliers_link_Id");
                    _Suppliers_link_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Suppliers_link_Id");
                    OnSuppliers_link_IdChanged();
                }
            }
        }
        private global::System.Int32 _Suppliers_link_Id;
        partial void OnSuppliers_link_IdChanging(global::System.Int32 value);
        partial void OnSuppliers_link_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Suppliers_link", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Suppliers_link", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Suppliers_link", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Suppliers_link", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Suppliers_link", "xcuda_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Tarification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Tarification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Tarification object.
        /// </summary>
        /// <param name="item_price">Initial value of the Item_price property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static xcuda_Tarification Createxcuda_Tarification(global::System.Double item_price, global::System.Int32 item_Id)
        {
            xcuda_Tarification xcuda_Tarification = new xcuda_Tarification();
            xcuda_Tarification.Item_price = item_price;
            xcuda_Tarification.Item_Id = item_Id;
            return xcuda_Tarification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extended_customs_procedure
        {
            get
            {
                return _Extended_customs_procedure;
            }
            set
            {
                OnExtended_customs_procedureChanging(value);
                ReportPropertyChanging("Extended_customs_procedure");
                _Extended_customs_procedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extended_customs_procedure");
                OnExtended_customs_procedureChanged();
            }
        }
        private global::System.String _Extended_customs_procedure;
        partial void OnExtended_customs_procedureChanging(global::System.String value);
        partial void OnExtended_customs_procedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String National_customs_procedure
        {
            get
            {
                return _National_customs_procedure;
            }
            set
            {
                OnNational_customs_procedureChanging(value);
                ReportPropertyChanging("National_customs_procedure");
                _National_customs_procedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("National_customs_procedure");
                OnNational_customs_procedureChanged();
            }
        }
        private global::System.String _National_customs_procedure;
        partial void OnNational_customs_procedureChanging(global::System.String value);
        partial void OnNational_customs_procedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Item_price
        {
            get
            {
                return _Item_price;
            }
            set
            {
                OnItem_priceChanging(value);
                ReportPropertyChanging("Item_price");
                _Item_price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_price");
                OnItem_priceChanged();
            }
        }
        private global::System.Double _Item_price;
        partial void OnItem_priceChanging(global::System.Double value);
        partial void OnItem_priceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value_item
        {
            get
            {
                return _Value_item;
            }
            set
            {
                OnValue_itemChanging(value);
                ReportPropertyChanging("Value_item");
                _Value_item = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value_item");
                OnValue_itemChanged();
            }
        }
        private global::System.String _Value_item;
        partial void OnValue_itemChanging(global::System.String value);
        partial void OnValue_itemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attached_doc_item
        {
            get
            {
                return _Attached_doc_item;
            }
            set
            {
                OnAttached_doc_itemChanging(value);
                ReportPropertyChanging("Attached_doc_item");
                _Attached_doc_item = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attached_doc_item");
                OnAttached_doc_itemChanged();
            }
        }
        private global::System.String _Attached_doc_item;
        partial void OnAttached_doc_itemChanging(global::System.String value);
        partial void OnAttached_doc_itemChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Tarification_HScode", "xcuda_HScode")]
        public xcuda_HScode xcuda_HScode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_HScode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_HScode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_HScode> xcuda_HScodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_HScode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_HScode>("WaterNutDB.DataLayer.FK_Tarification_HScode", "xcuda_HScode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Tarification", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Tarification", "xcuda_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Tarification_Supplementary_unit", "xcuda_Supplementary_unit")]
        public EntityCollection<xcuda_Supplementary_unit> Unordered_xcuda_Supplementary_unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Supplementary_unit>("WaterNutDB.DataLayer.FK_Tarification_Supplementary_unit", "xcuda_Supplementary_unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Supplementary_unit>("WaterNutDB.DataLayer.FK_Tarification_Supplementary_unit", "xcuda_Supplementary_unit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Taxation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Taxation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Taxation object.
        /// </summary>
        /// <param name="item_taxes_amount">Initial value of the Item_taxes_amount property.</param>
        /// <param name="taxation_Id">Initial value of the Taxation_Id property.</param>
        public static xcuda_Taxation Createxcuda_Taxation(global::System.Double item_taxes_amount, global::System.Int32 taxation_Id)
        {
            xcuda_Taxation xcuda_Taxation = new xcuda_Taxation();
            xcuda_Taxation.Item_taxes_amount = item_taxes_amount;
            xcuda_Taxation.Taxation_Id = taxation_Id;
            return xcuda_Taxation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Item_taxes_amount
        {
            get
            {
                return _Item_taxes_amount;
            }
            set
            {
                OnItem_taxes_amountChanging(value);
                ReportPropertyChanging("Item_taxes_amount");
                _Item_taxes_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_taxes_amount");
                OnItem_taxes_amountChanged();
            }
        }
        private global::System.Double _Item_taxes_amount;
        partial void OnItem_taxes_amountChanging(global::System.Double value);
        partial void OnItem_taxes_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Item_taxes_guaranted_amount
        {
            get
            {
                return _Item_taxes_guaranted_amount;
            }
            set
            {
                OnItem_taxes_guaranted_amountChanging(value);
                ReportPropertyChanging("Item_taxes_guaranted_amount");
                _Item_taxes_guaranted_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_taxes_guaranted_amount");
                OnItem_taxes_guaranted_amountChanged();
            }
        }
        private Nullable<global::System.Double> _Item_taxes_guaranted_amount;
        partial void OnItem_taxes_guaranted_amountChanging(Nullable<global::System.Double> value);
        partial void OnItem_taxes_guaranted_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Counter_of_normal_mode_of_payment
        {
            get
            {
                return _Counter_of_normal_mode_of_payment;
            }
            set
            {
                OnCounter_of_normal_mode_of_paymentChanging(value);
                ReportPropertyChanging("Counter_of_normal_mode_of_payment");
                _Counter_of_normal_mode_of_payment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Counter_of_normal_mode_of_payment");
                OnCounter_of_normal_mode_of_paymentChanged();
            }
        }
        private global::System.String _Counter_of_normal_mode_of_payment;
        partial void OnCounter_of_normal_mode_of_paymentChanging(global::System.String value);
        partial void OnCounter_of_normal_mode_of_paymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Displayed_item_taxes_amount
        {
            get
            {
                return _Displayed_item_taxes_amount;
            }
            set
            {
                OnDisplayed_item_taxes_amountChanging(value);
                ReportPropertyChanging("Displayed_item_taxes_amount");
                _Displayed_item_taxes_amount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Displayed_item_taxes_amount");
                OnDisplayed_item_taxes_amountChanged();
            }
        }
        private global::System.String _Displayed_item_taxes_amount;
        partial void OnDisplayed_item_taxes_amountChanging(global::System.String value);
        partial void OnDisplayed_item_taxes_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Taxation_Id
        {
            get
            {
                return _Taxation_Id;
            }
            set
            {
                if (_Taxation_Id != value)
                {
                    OnTaxation_IdChanging(value);
                    ReportPropertyChanging("Taxation_Id");
                    _Taxation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Taxation_Id");
                    OnTaxation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Taxation_Id;
        partial void OnTaxation_IdChanging(global::System.Int32 value);
        partial void OnTaxation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Item_Id;
        partial void OnItem_IdChanging(Nullable<global::System.Int32> value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item_taxes_mode_of_payment
        {
            get
            {
                return _Item_taxes_mode_of_payment;
            }
            set
            {
                OnItem_taxes_mode_of_paymentChanging(value);
                ReportPropertyChanging("Item_taxes_mode_of_payment");
                _Item_taxes_mode_of_payment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Item_taxes_mode_of_payment");
                OnItem_taxes_mode_of_paymentChanged();
            }
        }
        private global::System.String _Item_taxes_mode_of_payment;
        partial void OnItem_taxes_mode_of_paymentChanging(global::System.String value);
        partial void OnItem_taxes_mode_of_paymentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Taxation", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Taxation", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Taxation", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Taxation", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Taxation", "xcuda_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Taxation_Taxation_line", "xcuda_Taxation_line")]
        public EntityCollection<xcuda_Taxation_line> xcuda_Taxation_line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Taxation_line>("WaterNutDB.DataLayer.FK_Taxation_Taxation_line", "xcuda_Taxation_line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Taxation_line>("WaterNutDB.DataLayer.FK_Taxation_Taxation_line", "xcuda_Taxation_line", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Taxation_line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Taxation_line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Taxation_line object.
        /// </summary>
        /// <param name="duty_tax_rate">Initial value of the Duty_tax_rate property.</param>
        /// <param name="duty_tax_amount">Initial value of the Duty_tax_amount property.</param>
        /// <param name="taxation_line_Id">Initial value of the Taxation_line_Id property.</param>
        public static xcuda_Taxation_line Createxcuda_Taxation_line(global::System.Double duty_tax_rate, global::System.Double duty_tax_amount, global::System.Int32 taxation_line_Id)
        {
            xcuda_Taxation_line xcuda_Taxation_line = new xcuda_Taxation_line();
            xcuda_Taxation_line.Duty_tax_rate = duty_tax_rate;
            xcuda_Taxation_line.Duty_tax_amount = duty_tax_amount;
            xcuda_Taxation_line.Taxation_line_Id = taxation_line_Id;
            return xcuda_Taxation_line;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Duty_tax_Base
        {
            get
            {
                return _Duty_tax_Base;
            }
            set
            {
                OnDuty_tax_BaseChanging(value);
                ReportPropertyChanging("Duty_tax_Base");
                _Duty_tax_Base = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Duty_tax_Base");
                OnDuty_tax_BaseChanged();
            }
        }
        private global::System.String _Duty_tax_Base;
        partial void OnDuty_tax_BaseChanging(global::System.String value);
        partial void OnDuty_tax_BaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Duty_tax_rate
        {
            get
            {
                return _Duty_tax_rate;
            }
            set
            {
                OnDuty_tax_rateChanging(value);
                ReportPropertyChanging("Duty_tax_rate");
                _Duty_tax_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duty_tax_rate");
                OnDuty_tax_rateChanged();
            }
        }
        private global::System.Double _Duty_tax_rate;
        partial void OnDuty_tax_rateChanging(global::System.Double value);
        partial void OnDuty_tax_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Duty_tax_amount
        {
            get
            {
                return _Duty_tax_amount;
            }
            set
            {
                OnDuty_tax_amountChanging(value);
                ReportPropertyChanging("Duty_tax_amount");
                _Duty_tax_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duty_tax_amount");
                OnDuty_tax_amountChanged();
            }
        }
        private global::System.Double _Duty_tax_amount;
        partial void OnDuty_tax_amountChanging(global::System.Double value);
        partial void OnDuty_tax_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Taxation_line_Id
        {
            get
            {
                return _Taxation_line_Id;
            }
            set
            {
                if (_Taxation_line_Id != value)
                {
                    OnTaxation_line_IdChanging(value);
                    ReportPropertyChanging("Taxation_line_Id");
                    _Taxation_line_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Taxation_line_Id");
                    OnTaxation_line_IdChanged();
                }
            }
        }
        private global::System.Int32 _Taxation_line_Id;
        partial void OnTaxation_line_IdChanging(global::System.Int32 value);
        partial void OnTaxation_line_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Taxation_Id
        {
            get
            {
                return _Taxation_Id;
            }
            set
            {
                OnTaxation_IdChanging(value);
                ReportPropertyChanging("Taxation_Id");
                _Taxation_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Taxation_Id");
                OnTaxation_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Taxation_Id;
        partial void OnTaxation_IdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Duty_tax_code
        {
            get
            {
                return _Duty_tax_code;
            }
            set
            {
                OnDuty_tax_codeChanging(value);
                ReportPropertyChanging("Duty_tax_code");
                _Duty_tax_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Duty_tax_code");
                OnDuty_tax_codeChanged();
            }
        }
        private global::System.String _Duty_tax_code;
        partial void OnDuty_tax_codeChanging(global::System.String value);
        partial void OnDuty_tax_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Duty_tax_MP
        {
            get
            {
                return _Duty_tax_MP;
            }
            set
            {
                OnDuty_tax_MPChanging(value);
                ReportPropertyChanging("Duty_tax_MP");
                _Duty_tax_MP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Duty_tax_MP");
                OnDuty_tax_MPChanged();
            }
        }
        private global::System.String _Duty_tax_MP;
        partial void OnDuty_tax_MPChanging(global::System.String value);
        partial void OnDuty_tax_MPChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Taxation_Taxation_line", "xcuda_Taxation")]
        public xcuda_Taxation xcuda_Taxation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Taxation>("WaterNutDB.DataLayer.FK_Taxation_Taxation_line", "xcuda_Taxation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Taxation>("WaterNutDB.DataLayer.FK_Taxation_Taxation_line", "xcuda_Taxation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Taxation> xcuda_TaxationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Taxation>("WaterNutDB.DataLayer.FK_Taxation_Taxation_line", "xcuda_Taxation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Taxation>("WaterNutDB.DataLayer.FK_Taxation_Taxation_line", "xcuda_Taxation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Total")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Total : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Total object.
        /// </summary>
        /// <param name="total_invoice">Initial value of the Total_invoice property.</param>
        /// <param name="total_weight">Initial value of the Total_weight property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Total Createxcuda_Total(global::System.Single total_invoice, global::System.Single total_weight, global::System.Int32 valuation_Id)
        {
            xcuda_Total xcuda_Total = new xcuda_Total();
            xcuda_Total.Total_invoice = total_invoice;
            xcuda_Total.Total_weight = total_weight;
            xcuda_Total.Valuation_Id = valuation_Id;
            return xcuda_Total;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Total_invoice
        {
            get
            {
                return _Total_invoice;
            }
            set
            {
                OnTotal_invoiceChanging(value);
                ReportPropertyChanging("Total_invoice");
                _Total_invoice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_invoice");
                OnTotal_invoiceChanged();
            }
        }
        private global::System.Single _Total_invoice;
        partial void OnTotal_invoiceChanging(global::System.Single value);
        partial void OnTotal_invoiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Total_weight
        {
            get
            {
                return _Total_weight;
            }
            set
            {
                OnTotal_weightChanging(value);
                ReportPropertyChanging("Total_weight");
                _Total_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_weight");
                OnTotal_weightChanged();
            }
        }
        private global::System.Single _Total_weight;
        partial void OnTotal_weightChanging(global::System.Single value);
        partial void OnTotal_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Total_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Traders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Traders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Traders object.
        /// </summary>
        /// <param name="traders_Id">Initial value of the Traders_Id property.</param>
        public static xcuda_Traders Createxcuda_Traders(global::System.Int32 traders_Id)
        {
            xcuda_Traders xcuda_Traders = new xcuda_Traders();
            xcuda_Traders.Traders_Id = traders_Id;
            return xcuda_Traders;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Traders_Id
        {
            get
            {
                return _Traders_Id;
            }
            set
            {
                if (_Traders_Id != value)
                {
                    OnTraders_IdChanging(value);
                    ReportPropertyChanging("Traders_Id");
                    _Traders_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Traders_Id");
                    OnTraders_IdChanged();
                }
            }
        }
        private global::System.Int32 _Traders_Id;
        partial void OnTraders_IdChanging(global::System.Int32 value);
        partial void OnTraders_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Traders_Consignee", "xcuda_Consignee")]
        public xcuda_Consignee xcuda_Consignee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Consignee>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Consignee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Consignee>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Consignee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Consignee> xcuda_ConsigneeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Consignee>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Consignee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Consignee>("WaterNutDB.DataLayer.FK_Traders_Consignee", "xcuda_Consignee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Traders_Exporter", "xcuda_Exporter")]
        public xcuda_Exporter xcuda_Exporter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Exporter>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Exporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Exporter>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Exporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Exporter> xcuda_ExporterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Exporter>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Exporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Exporter>("WaterNutDB.DataLayer.FK_Traders_Exporter", "xcuda_Exporter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Traders_Financial", "xcuda_Traders_Financial")]
        public xcuda_Traders_Financial xcuda_Traders_Financial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders_Financial>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders_Financial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders_Financial>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders_Financial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Traders_Financial> xcuda_Traders_FinancialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders_Financial>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders_Financial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Traders_Financial>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders_Financial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_xcuda_Traders_xcuda_ASYCUDA", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Traders_Financial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Traders_Financial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Traders_Financial object.
        /// </summary>
        /// <param name="traders_Id">Initial value of the Traders_Id property.</param>
        public static xcuda_Traders_Financial Createxcuda_Traders_Financial(global::System.Int32 traders_Id)
        {
            xcuda_Traders_Financial xcuda_Traders_Financial = new xcuda_Traders_Financial();
            xcuda_Traders_Financial.Traders_Id = traders_Id;
            return xcuda_Traders_Financial;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Traders_Id
        {
            get
            {
                return _Traders_Id;
            }
            set
            {
                if (_Traders_Id != value)
                {
                    OnTraders_IdChanging(value);
                    ReportPropertyChanging("Traders_Id");
                    _Traders_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Traders_Id");
                    OnTraders_IdChanged();
                }
            }
        }
        private global::System.Int32 _Traders_Id;
        partial void OnTraders_IdChanging(global::System.Int32 value);
        partial void OnTraders_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Financial_code
        {
            get
            {
                return _Financial_code;
            }
            set
            {
                OnFinancial_codeChanging(value);
                ReportPropertyChanging("Financial_code");
                _Financial_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Financial_code");
                OnFinancial_codeChanged();
            }
        }
        private global::System.String _Financial_code;
        partial void OnFinancial_codeChanging(global::System.String value);
        partial void OnFinancial_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Financial_name
        {
            get
            {
                return _Financial_name;
            }
            set
            {
                OnFinancial_nameChanging(value);
                ReportPropertyChanging("Financial_name");
                _Financial_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Financial_name");
                OnFinancial_nameChanged();
            }
        }
        private global::System.String _Financial_name;
        partial void OnFinancial_nameChanging(global::System.String value);
        partial void OnFinancial_nameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Traders_Financial", "xcuda_Traders")]
        public xcuda_Traders xcuda_Traders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Traders> xcuda_TradersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Traders>("WaterNutDB.DataLayer.FK_Traders_Financial", "xcuda_Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Transit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Transit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Transit object.
        /// </summary>
        /// <param name="transit_Id">Initial value of the Transit_Id property.</param>
        public static xcuda_Transit Createxcuda_Transit(global::System.Int32 transit_Id)
        {
            xcuda_Transit xcuda_Transit = new xcuda_Transit();
            xcuda_Transit.Transit_Id = transit_Id;
            return xcuda_Transit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Time_limit
        {
            get
            {
                return _Time_limit;
            }
            set
            {
                OnTime_limitChanging(value);
                ReportPropertyChanging("Time_limit");
                _Time_limit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Time_limit");
                OnTime_limitChanged();
            }
        }
        private global::System.String _Time_limit;
        partial void OnTime_limitChanging(global::System.String value);
        partial void OnTime_limitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Transit_Id
        {
            get
            {
                return _Transit_Id;
            }
            set
            {
                if (_Transit_Id != value)
                {
                    OnTransit_IdChanging(value);
                    ReportPropertyChanging("Transit_Id");
                    _Transit_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Transit_Id");
                    OnTransit_IdChanged();
                }
            }
        }
        private global::System.Int32 _Transit_Id;
        partial void OnTransit_IdChanging(global::System.Int32 value);
        partial void OnTransit_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Transit", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transit", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transit", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transit", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transit", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transit_Principal", "xcuda_Principal")]
        public EntityCollection<xcuda_Principal> xcuda_Principal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Principal>("WaterNutDB.DataLayer.FK_Transit_Principal", "xcuda_Principal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Principal>("WaterNutDB.DataLayer.FK_Transit_Principal", "xcuda_Principal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transit_Seals", "xcuda_Seals")]
        public EntityCollection<xcuda_Seals> xcuda_Seals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Seals>("WaterNutDB.DataLayer.FK_Transit_Seals", "xcuda_Seals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Seals>("WaterNutDB.DataLayer.FK_Transit_Seals", "xcuda_Seals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transit_Signature", "xcuda_Signature")]
        public EntityCollection<xcuda_Signature> xcuda_Signature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Signature>("WaterNutDB.DataLayer.FK_Transit_Signature", "xcuda_Signature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Signature>("WaterNutDB.DataLayer.FK_Transit_Signature", "xcuda_Signature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit_Destination")]
        public EntityCollection<xcuda_Transit_Destination> xcuda_Transit_Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Transit_Destination>("WaterNutDB.DataLayer.FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit_Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Transit_Destination>("WaterNutDB.DataLayer.FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit_Destination", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Transit_Destination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Transit_Destination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Transit_Destination object.
        /// </summary>
        /// <param name="destination_Id">Initial value of the Destination_Id property.</param>
        /// <param name="transit_Id">Initial value of the Transit_Id property.</param>
        public static xcuda_Transit_Destination Createxcuda_Transit_Destination(global::System.Int32 destination_Id, global::System.Int32 transit_Id)
        {
            xcuda_Transit_Destination xcuda_Transit_Destination = new xcuda_Transit_Destination();
            xcuda_Transit_Destination.Destination_Id = destination_Id;
            xcuda_Transit_Destination.Transit_Id = transit_Id;
            return xcuda_Transit_Destination;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Destination_Id
        {
            get
            {
                return _Destination_Id;
            }
            set
            {
                if (_Destination_Id != value)
                {
                    OnDestination_IdChanging(value);
                    ReportPropertyChanging("Destination_Id");
                    _Destination_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Destination_Id");
                    OnDestination_IdChanged();
                }
            }
        }
        private global::System.Int32 _Destination_Id;
        partial void OnDestination_IdChanging(global::System.Int32 value);
        partial void OnDestination_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Office
        {
            get
            {
                return _Office;
            }
            set
            {
                OnOfficeChanging(value);
                ReportPropertyChanging("Office");
                _Office = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Office");
                OnOfficeChanged();
            }
        }
        private global::System.String _Office;
        partial void OnOfficeChanging(global::System.String value);
        partial void OnOfficeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Transit_Id
        {
            get
            {
                return _Transit_Id;
            }
            set
            {
                OnTransit_IdChanging(value);
                ReportPropertyChanging("Transit_Id");
                _Transit_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transit_Id");
                OnTransit_IdChanged();
            }
        }
        private global::System.Int32 _Transit_Id;
        partial void OnTransit_IdChanging(global::System.Int32 value);
        partial void OnTransit_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit")]
        public xcuda_Transit xcuda_Transit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Transit> xcuda_TransitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Transit>("WaterNutDB.DataLayer.FK_xcuda_Transit_Destination_xcuda_Transit", "xcuda_Transit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Transport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Transport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Transport object.
        /// </summary>
        /// <param name="container_flag">Initial value of the Container_flag property.</param>
        /// <param name="single_waybill_flag">Initial value of the Single_waybill_flag property.</param>
        /// <param name="transport_Id">Initial value of the Transport_Id property.</param>
        public static xcuda_Transport Createxcuda_Transport(global::System.Boolean container_flag, global::System.Boolean single_waybill_flag, global::System.Int32 transport_Id)
        {
            xcuda_Transport xcuda_Transport = new xcuda_Transport();
            xcuda_Transport.Container_flag = container_flag;
            xcuda_Transport.Single_waybill_flag = single_waybill_flag;
            xcuda_Transport.Transport_Id = transport_Id;
            return xcuda_Transport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Container_flag
        {
            get
            {
                return _Container_flag;
            }
            set
            {
                OnContainer_flagChanging(value);
                ReportPropertyChanging("Container_flag");
                _Container_flag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Container_flag");
                OnContainer_flagChanged();
            }
        }
        private global::System.Boolean _Container_flag;
        partial void OnContainer_flagChanging(global::System.Boolean value);
        partial void OnContainer_flagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Single_waybill_flag
        {
            get
            {
                return _Single_waybill_flag;
            }
            set
            {
                OnSingle_waybill_flagChanging(value);
                ReportPropertyChanging("Single_waybill_flag");
                _Single_waybill_flag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Single_waybill_flag");
                OnSingle_waybill_flagChanged();
            }
        }
        private global::System.Boolean _Single_waybill_flag;
        partial void OnSingle_waybill_flagChanging(global::System.Boolean value);
        partial void OnSingle_waybill_flagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Transport_Id
        {
            get
            {
                return _Transport_Id;
            }
            set
            {
                if (_Transport_Id != value)
                {
                    OnTransport_IdChanging(value);
                    ReportPropertyChanging("Transport_Id");
                    _Transport_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Transport_Id");
                    OnTransport_IdChanged();
                }
            }
        }
        private global::System.Int32 _Transport_Id;
        partial void OnTransport_IdChanging(global::System.Int32 value);
        partial void OnTransport_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location_of_goods
        {
            get
            {
                return _Location_of_goods;
            }
            set
            {
                OnLocation_of_goodsChanging(value);
                ReportPropertyChanging("Location_of_goods");
                _Location_of_goods = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location_of_goods");
                OnLocation_of_goodsChanged();
            }
        }
        private global::System.String _Location_of_goods;
        partial void OnLocation_of_goodsChanging(global::System.String value);
        partial void OnLocation_of_goodsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Transport", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transport", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transport", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transport", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Transport", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Border_office", "xcuda_Border_office")]
        public EntityCollection<xcuda_Border_office> xcuda_Border_office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Border_office>("WaterNutDB.DataLayer.FK_Transport_Border_office", "xcuda_Border_office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Border_office>("WaterNutDB.DataLayer.FK_Transport_Border_office", "xcuda_Border_office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Delivery_terms", "xcuda_Delivery_terms")]
        public EntityCollection<xcuda_Delivery_terms> xcuda_Delivery_terms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Delivery_terms>("WaterNutDB.DataLayer.FK_Transport_Delivery_terms", "xcuda_Delivery_terms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Delivery_terms>("WaterNutDB.DataLayer.FK_Transport_Delivery_terms", "xcuda_Delivery_terms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Means_of_transport", "xcuda_Means_of_transport")]
        public EntityCollection<xcuda_Means_of_transport> xcuda_Means_of_transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Transport_Means_of_transport", "xcuda_Means_of_transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Means_of_transport>("WaterNutDB.DataLayer.FK_Transport_Means_of_transport", "xcuda_Means_of_transport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Transport_Place_of_loading", "xcuda_Place_of_loading")]
        public EntityCollection<xcuda_Place_of_loading> xcuda_Place_of_loading
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xcuda_Place_of_loading>("WaterNutDB.DataLayer.FK_Transport_Place_of_loading", "xcuda_Place_of_loading");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xcuda_Place_of_loading>("WaterNutDB.DataLayer.FK_Transport_Place_of_loading", "xcuda_Place_of_loading", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Type object.
        /// </summary>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Type Createxcuda_Type(global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Type xcuda_Type = new xcuda_Type();
            xcuda_Type.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Type;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type_of_declaration
        {
            get
            {
                return _Type_of_declaration;
            }
            set
            {
                OnType_of_declarationChanging(value);
                ReportPropertyChanging("Type_of_declaration");
                _Type_of_declaration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type_of_declaration");
                OnType_of_declarationChanged();
            }
        }
        private global::System.String _Type_of_declaration;
        partial void OnType_of_declarationChanging(global::System.String value);
        partial void OnType_of_declarationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Declaration_gen_procedure_code
        {
            get
            {
                return _Declaration_gen_procedure_code;
            }
            set
            {
                OnDeclaration_gen_procedure_codeChanging(value);
                ReportPropertyChanging("Declaration_gen_procedure_code");
                _Declaration_gen_procedure_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Declaration_gen_procedure_code");
                OnDeclaration_gen_procedure_codeChanged();
            }
        }
        private global::System.String _Declaration_gen_procedure_code;
        partial void OnDeclaration_gen_procedure_codeChanging(global::System.String value);
        partial void OnDeclaration_gen_procedure_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Identification_Type", "xcuda_Identification")]
        public xcuda_Identification xcuda_Identification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Identification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Identification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Identification> xcuda_IdentificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Identification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Identification>("WaterNutDB.DataLayer.FK_Identification_Type", "xcuda_Identification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Valuation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Valuation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Valuation object.
        /// </summary>
        /// <param name="total_cost">Initial value of the Total_cost property.</param>
        /// <param name="total_CIF">Initial value of the Total_CIF property.</param>
        /// <param name="aSYCUDA_Id">Initial value of the ASYCUDA_Id property.</param>
        public static xcuda_Valuation Createxcuda_Valuation(global::System.Double total_cost, global::System.Double total_CIF, global::System.Int32 aSYCUDA_Id)
        {
            xcuda_Valuation xcuda_Valuation = new xcuda_Valuation();
            xcuda_Valuation.Total_cost = total_cost;
            xcuda_Valuation.Total_CIF = total_CIF;
            xcuda_Valuation.ASYCUDA_Id = aSYCUDA_Id;
            return xcuda_Valuation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Calculation_working_mode
        {
            get
            {
                return _Calculation_working_mode;
            }
            set
            {
                OnCalculation_working_modeChanging(value);
                ReportPropertyChanging("Calculation_working_mode");
                _Calculation_working_mode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Calculation_working_mode");
                OnCalculation_working_modeChanged();
            }
        }
        private global::System.String _Calculation_working_mode;
        partial void OnCalculation_working_modeChanging(global::System.String value);
        partial void OnCalculation_working_modeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total_cost
        {
            get
            {
                return _Total_cost;
            }
            set
            {
                OnTotal_costChanging(value);
                ReportPropertyChanging("Total_cost");
                _Total_cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_cost");
                OnTotal_costChanged();
            }
        }
        private global::System.Double _Total_cost;
        partial void OnTotal_costChanging(global::System.Double value);
        partial void OnTotal_costChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total_CIF
        {
            get
            {
                return _Total_CIF;
            }
            set
            {
                OnTotal_CIFChanging(value);
                ReportPropertyChanging("Total_CIF");
                _Total_CIF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_CIF");
                OnTotal_CIFChanged();
            }
        }
        private global::System.Double _Total_CIF;
        partial void OnTotal_CIFChanging(global::System.Double value);
        partial void OnTotal_CIFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                if (_ASYCUDA_Id != value)
                {
                    OnASYCUDA_IdChanging(value);
                    ReportPropertyChanging("ASYCUDA_Id");
                    _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASYCUDA_Id");
                    OnASYCUDA_IdChanged();
                }
            }
        }
        private global::System.Int32 _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(global::System.Int32 value);
        partial void OnASYCUDA_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Valuation", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Valuation", "xcuda_ASYCUDA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Gs_deduction")]
        public xcuda_Gs_deduction xcuda_Gs_deduction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_deduction>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Gs_deduction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_deduction>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Gs_deduction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Gs_deduction> xcuda_Gs_deductionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_deduction>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Gs_deduction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Gs_deduction>("WaterNutDB.DataLayer.FK_xcuda_Gs_deduction_xcuda_Valuation", "xcuda_Gs_deduction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Gs_external_freight")]
        public xcuda_Gs_external_freight xcuda_Gs_external_freight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_external_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Gs_external_freight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_external_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Gs_external_freight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Gs_external_freight> xcuda_Gs_external_freightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_external_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Gs_external_freight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Gs_external_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_external_freight_xcuda_Valuation", "xcuda_Gs_external_freight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Gs_insurance")]
        public xcuda_Gs_insurance xcuda_Gs_insurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_insurance>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Gs_insurance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_insurance>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Gs_insurance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Gs_insurance> xcuda_Gs_insuranceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_insurance>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Gs_insurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Gs_insurance>("WaterNutDB.DataLayer.FK_xcuda_Gs_insurance_xcuda_Valuation", "xcuda_Gs_insurance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Gs_internal_freight")]
        public xcuda_Gs_internal_freight xcuda_Gs_internal_freight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_internal_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Gs_internal_freight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_internal_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Gs_internal_freight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Gs_internal_freight> xcuda_Gs_internal_freightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_internal_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Gs_internal_freight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Gs_internal_freight>("WaterNutDB.DataLayer.FK_xcuda_Gs_internal_freight_xcuda_Valuation", "xcuda_Gs_internal_freight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Gs_Invoice")]
        public xcuda_Gs_Invoice xcuda_Gs_Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_Invoice>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Gs_Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_Invoice>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Gs_Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Gs_Invoice> xcuda_Gs_InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_Invoice>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Gs_Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Gs_Invoice>("WaterNutDB.DataLayer.FK_xcuda_Gs_Invoice_xcuda_Valuation", "xcuda_Gs_Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Gs_other_cost")]
        public xcuda_Gs_other_cost xcuda_Gs_other_cost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_other_cost>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Gs_other_cost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_other_cost>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Gs_other_cost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Gs_other_cost> xcuda_Gs_other_costReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Gs_other_cost>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Gs_other_cost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Gs_other_cost>("WaterNutDB.DataLayer.FK_xcuda_Gs_other_cost_xcuda_Valuation", "xcuda_Gs_other_cost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Total_xcuda_Valuation", "xcuda_Total")]
        public xcuda_Total xcuda_Total
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Total>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Total").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Total>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Total").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Total> xcuda_TotalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Total>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Total");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Total>("WaterNutDB.DataLayer.FK_xcuda_Total_xcuda_Valuation", "xcuda_Total", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Weight_xcuda_Valuation", "xcuda_Weight")]
        public xcuda_Weight xcuda_Weight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Weight>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Weight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Weight>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Weight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Weight> xcuda_WeightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Weight>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Weight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Weight>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Weight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Valuation_item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Valuation_item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Valuation_item object.
        /// </summary>
        /// <param name="total_cost_itm">Initial value of the Total_cost_itm property.</param>
        /// <param name="total_CIF_itm">Initial value of the Total_CIF_itm property.</param>
        /// <param name="statistical_value">Initial value of the Statistical_value property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static xcuda_Valuation_item Createxcuda_Valuation_item(global::System.Double total_cost_itm, global::System.Double total_CIF_itm, global::System.Double statistical_value, global::System.Int32 item_Id)
        {
            xcuda_Valuation_item xcuda_Valuation_item = new xcuda_Valuation_item();
            xcuda_Valuation_item.Total_cost_itm = total_cost_itm;
            xcuda_Valuation_item.Total_CIF_itm = total_CIF_itm;
            xcuda_Valuation_item.Statistical_value = statistical_value;
            xcuda_Valuation_item.Item_Id = item_Id;
            return xcuda_Valuation_item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total_cost_itm
        {
            get
            {
                return _Total_cost_itm;
            }
            set
            {
                OnTotal_cost_itmChanging(value);
                ReportPropertyChanging("Total_cost_itm");
                _Total_cost_itm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_cost_itm");
                OnTotal_cost_itmChanged();
            }
        }
        private global::System.Double _Total_cost_itm;
        partial void OnTotal_cost_itmChanging(global::System.Double value);
        partial void OnTotal_cost_itmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total_CIF_itm
        {
            get
            {
                return _Total_CIF_itm;
            }
            set
            {
                OnTotal_CIF_itmChanging(value);
                ReportPropertyChanging("Total_CIF_itm");
                _Total_CIF_itm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_CIF_itm");
                OnTotal_CIF_itmChanged();
            }
        }
        private global::System.Double _Total_CIF_itm;
        partial void OnTotal_CIF_itmChanging(global::System.Double value);
        partial void OnTotal_CIF_itmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate_of_adjustement
        {
            get
            {
                return _Rate_of_adjustement;
            }
            set
            {
                OnRate_of_adjustementChanging(value);
                ReportPropertyChanging("Rate_of_adjustement");
                _Rate_of_adjustement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate_of_adjustement");
                OnRate_of_adjustementChanged();
            }
        }
        private Nullable<global::System.Double> _Rate_of_adjustement;
        partial void OnRate_of_adjustementChanging(Nullable<global::System.Double> value);
        partial void OnRate_of_adjustementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Statistical_value
        {
            get
            {
                return _Statistical_value;
            }
            set
            {
                OnStatistical_valueChanging(value);
                ReportPropertyChanging("Statistical_value");
                _Statistical_value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Statistical_value");
                OnStatistical_valueChanged();
            }
        }
        private global::System.Double _Statistical_value;
        partial void OnStatistical_valueChanging(global::System.Double value);
        partial void OnStatistical_valueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alpha_coeficient_of_apportionment
        {
            get
            {
                return _Alpha_coeficient_of_apportionment;
            }
            set
            {
                OnAlpha_coeficient_of_apportionmentChanging(value);
                ReportPropertyChanging("Alpha_coeficient_of_apportionment");
                _Alpha_coeficient_of_apportionment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alpha_coeficient_of_apportionment");
                OnAlpha_coeficient_of_apportionmentChanged();
            }
        }
        private global::System.String _Alpha_coeficient_of_apportionment;
        partial void OnAlpha_coeficient_of_apportionmentChanging(global::System.String value);
        partial void OnAlpha_coeficient_of_apportionmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_external_freight", "xcuda_item_external_freight")]
        public xcuda_item_external_freight xcuda_item_external_freight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_external_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_item_external_freight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_external_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_item_external_freight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_item_external_freight> xcuda_item_external_freightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_external_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_item_external_freight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_item_external_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_external_freight", "xcuda_item_external_freight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_internal_freight", "xcuda_item_internal_freight")]
        public xcuda_item_internal_freight xcuda_item_internal_freight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_internal_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_item_internal_freight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_internal_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_item_internal_freight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_item_internal_freight> xcuda_item_internal_freightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_internal_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_item_internal_freight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_item_internal_freight>("WaterNutDB.DataLayer.FK_Valuation_item_item_internal_freight", "xcuda_item_internal_freight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Item_Invoice", "xcuda_Item_Invoice")]
        public xcuda_Item_Invoice xcuda_Item_Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item_Invoice>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Item_Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item_Invoice>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Item_Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item_Invoice> xcuda_Item_InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item_Invoice>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Item_Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item_Invoice>("WaterNutDB.DataLayer.FK_Valuation_item_Item_Invoice", "xcuda_Item_Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_other_cost", "xcuda_item_other_cost")]
        public xcuda_item_other_cost xcuda_item_other_cost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_other_cost>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_item_other_cost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_other_cost>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_item_other_cost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_item_other_cost> xcuda_item_other_costReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_other_cost>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_item_other_cost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_item_other_cost>("WaterNutDB.DataLayer.FK_Valuation_item_item_other_cost", "xcuda_item_other_cost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Market_valuer", "xcuda_Market_valuer")]
        public xcuda_Market_valuer xcuda_Market_valuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Market_valuer>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Market_valuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Market_valuer>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Market_valuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Market_valuer> xcuda_Market_valuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Market_valuer>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Market_valuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Market_valuer>("WaterNutDB.DataLayer.FK_Valuation_item_Market_valuer", "xcuda_Market_valuer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Weight_itm", "xcuda_Weight_itm")]
        public xcuda_Weight_itm xcuda_Weight_itm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Weight_itm>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Weight_itm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Weight_itm>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Weight_itm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Weight_itm> xcuda_Weight_itmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Weight_itm>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Weight_itm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Weight_itm>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Weight_itm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Item_Valuation_item", "xcuda_Item")]
        public xcuda_Item xcuda_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Item> xcuda_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Item>("WaterNutDB.DataLayer.FK_Item_Valuation_item", "xcuda_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_deduction", "xcuda_item_deduction")]
        public xcuda_item_deduction xcuda_item_deduction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_deduction>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_item_deduction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_deduction>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_item_deduction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_item_deduction> xcuda_item_deductionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_deduction>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_item_deduction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_item_deduction>("WaterNutDB.DataLayer.FK_Valuation_item_item_deduction", "xcuda_item_deduction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_item_insurance", "xcuda_item_insurance")]
        public xcuda_item_insurance xcuda_item_insurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_insurance>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_item_insurance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_insurance>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_item_insurance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_item_insurance> xcuda_item_insuranceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_item_insurance>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_item_insurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_item_insurance>("WaterNutDB.DataLayer.FK_Valuation_item_item_insurance", "xcuda_item_insurance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Warehouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Warehouse object.
        /// </summary>
        /// <param name="warehouse_Id">Initial value of the Warehouse_Id property.</param>
        public static xcuda_Warehouse Createxcuda_Warehouse(global::System.Int32 warehouse_Id)
        {
            xcuda_Warehouse xcuda_Warehouse = new xcuda_Warehouse();
            xcuda_Warehouse.Warehouse_Id = warehouse_Id;
            return xcuda_Warehouse;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Identification
        {
            get
            {
                return _Identification;
            }
            set
            {
                OnIdentificationChanging(value);
                ReportPropertyChanging("Identification");
                _Identification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Identification");
                OnIdentificationChanged();
            }
        }
        private global::System.String _Identification;
        partial void OnIdentificationChanging(global::System.String value);
        partial void OnIdentificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Delay
        {
            get
            {
                return _Delay;
            }
            set
            {
                OnDelayChanging(value);
                ReportPropertyChanging("Delay");
                _Delay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Delay");
                OnDelayChanged();
            }
        }
        private global::System.String _Delay;
        partial void OnDelayChanging(global::System.String value);
        partial void OnDelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASYCUDA_Id
        {
            get
            {
                return _ASYCUDA_Id;
            }
            set
            {
                OnASYCUDA_IdChanging(value);
                ReportPropertyChanging("ASYCUDA_Id");
                _ASYCUDA_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASYCUDA_Id");
                OnASYCUDA_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _ASYCUDA_Id;
        partial void OnASYCUDA_IdChanging(Nullable<global::System.Int32> value);
        partial void OnASYCUDA_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Warehouse_Id
        {
            get
            {
                return _Warehouse_Id;
            }
            set
            {
                if (_Warehouse_Id != value)
                {
                    OnWarehouse_IdChanging(value);
                    ReportPropertyChanging("Warehouse_Id");
                    _Warehouse_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Warehouse_Id");
                    OnWarehouse_IdChanged();
                }
            }
        }
        private global::System.Int32 _Warehouse_Id;
        partial void OnWarehouse_IdChanging(global::System.Int32 value);
        partial void OnWarehouse_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_ASYCUDA_Warehouse", "xcuda_ASYCUDA")]
        public xcuda_ASYCUDA xcuda_ASYCUDA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Warehouse", "xcuda_ASYCUDA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Warehouse", "xcuda_ASYCUDA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_ASYCUDA> xcuda_ASYCUDAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Warehouse", "xcuda_ASYCUDA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_ASYCUDA>("WaterNutDB.DataLayer.FK_ASYCUDA_Warehouse", "xcuda_ASYCUDA", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Weight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Weight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Weight object.
        /// </summary>
        /// <param name="gross_weight">Initial value of the Gross_weight property.</param>
        /// <param name="valuation_Id">Initial value of the Valuation_Id property.</param>
        public static xcuda_Weight Createxcuda_Weight(global::System.Double gross_weight, global::System.Int32 valuation_Id)
        {
            xcuda_Weight xcuda_Weight = new xcuda_Weight();
            xcuda_Weight.Gross_weight = gross_weight;
            xcuda_Weight.Valuation_Id = valuation_Id;
            return xcuda_Weight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Gross_weight
        {
            get
            {
                return _Gross_weight;
            }
            set
            {
                OnGross_weightChanging(value);
                ReportPropertyChanging("Gross_weight");
                _Gross_weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gross_weight");
                OnGross_weightChanged();
            }
        }
        private global::System.Double _Gross_weight;
        partial void OnGross_weightChanging(global::System.Double value);
        partial void OnGross_weightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_Id
        {
            get
            {
                return _Valuation_Id;
            }
            set
            {
                if (_Valuation_Id != value)
                {
                    OnValuation_IdChanging(value);
                    ReportPropertyChanging("Valuation_Id");
                    _Valuation_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_Id");
                    OnValuation_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_Id;
        partial void OnValuation_IdChanging(global::System.Int32 value);
        partial void OnValuation_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_xcuda_Weight_xcuda_Valuation", "xcuda_Valuation")]
        public xcuda_Valuation xcuda_Valuation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Valuation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Valuation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation> xcuda_ValuationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Valuation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation>("WaterNutDB.DataLayer.FK_xcuda_Weight_xcuda_Valuation", "xcuda_Valuation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="xcuda_Weight_itm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xcuda_Weight_itm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new xcuda_Weight_itm object.
        /// </summary>
        /// <param name="gross_weight_itm">Initial value of the Gross_weight_itm property.</param>
        /// <param name="net_weight_itm">Initial value of the Net_weight_itm property.</param>
        /// <param name="valuation_item_Id">Initial value of the Valuation_item_Id property.</param>
        public static xcuda_Weight_itm Createxcuda_Weight_itm(global::System.Single gross_weight_itm, global::System.Single net_weight_itm, global::System.Int32 valuation_item_Id)
        {
            xcuda_Weight_itm xcuda_Weight_itm = new xcuda_Weight_itm();
            xcuda_Weight_itm.Gross_weight_itm = gross_weight_itm;
            xcuda_Weight_itm.Net_weight_itm = net_weight_itm;
            xcuda_Weight_itm.Valuation_item_Id = valuation_item_Id;
            return xcuda_Weight_itm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Gross_weight_itm
        {
            get
            {
                return _Gross_weight_itm;
            }
            set
            {
                OnGross_weight_itmChanging(value);
                ReportPropertyChanging("Gross_weight_itm");
                _Gross_weight_itm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gross_weight_itm");
                OnGross_weight_itmChanged();
            }
        }
        private global::System.Single _Gross_weight_itm;
        partial void OnGross_weight_itmChanging(global::System.Single value);
        partial void OnGross_weight_itmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Net_weight_itm
        {
            get
            {
                return _Net_weight_itm;
            }
            set
            {
                OnNet_weight_itmChanging(value);
                ReportPropertyChanging("Net_weight_itm");
                _Net_weight_itm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Net_weight_itm");
                OnNet_weight_itmChanged();
            }
        }
        private global::System.Single _Net_weight_itm;
        partial void OnNet_weight_itmChanging(global::System.Single value);
        partial void OnNet_weight_itmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valuation_item_Id
        {
            get
            {
                return _Valuation_item_Id;
            }
            set
            {
                if (_Valuation_item_Id != value)
                {
                    OnValuation_item_IdChanging(value);
                    ReportPropertyChanging("Valuation_item_Id");
                    _Valuation_item_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Valuation_item_Id");
                    OnValuation_item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Valuation_item_Id;
        partial void OnValuation_item_IdChanging(global::System.Int32 value);
        partial void OnValuation_item_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaterNutDB.DataLayer", "FK_Valuation_item_Weight_itm", "xcuda_Valuation_item")]
        public xcuda_Valuation_item xcuda_Valuation_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Valuation_item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Valuation_item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xcuda_Valuation_item> xcuda_Valuation_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Valuation_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xcuda_Valuation_item>("WaterNutDB.DataLayer.FK_Valuation_item_Weight_itm", "xcuda_Valuation_item", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="sp_helpdiagramdefinition1_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition1_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="sp_helpdiagramdefinition2_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition2_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="sp_helpdiagrams1_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams1_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams1_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams1_Result Createsp_helpdiagrams1_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams1_Result sp_helpdiagrams1_Result = new sp_helpdiagrams1_Result();
            sp_helpdiagrams1_Result.Name = name;
            sp_helpdiagrams1_Result.ID = id;
            sp_helpdiagrams1_Result.OwnerID = ownerID;
            return sp_helpdiagrams1_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="WaterNutDB.DataLayer", Name="sp_helpdiagrams2_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams2_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams2_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams2_Result Createsp_helpdiagrams2_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams2_Result sp_helpdiagrams2_Result = new sp_helpdiagrams2_Result();
            sp_helpdiagrams2_Result.Name = name;
            sp_helpdiagrams2_Result.ID = id;
            sp_helpdiagrams2_Result.OwnerID = ownerID;
            return sp_helpdiagrams2_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

}
