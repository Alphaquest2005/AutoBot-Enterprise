// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using AdjustmentQS.Client.DTO;


using Core.Common.Validation;

namespace AdjustmentQS.Client.Entities
{
       public partial class InventoryItemAlia: BaseEntity<InventoryItemAlia>
    {
        DTO.InventoryItemAlia inventoryitemalia;
        public InventoryItemAlia(DTO.InventoryItemAlia dto )
        {
              inventoryitemalia = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.InventoryItemAlia>(inventoryitemalia);

        }

        public DTO.InventoryItemAlia DTO
        {
            get
            {
             return inventoryitemalia;
            }
            set
            {
                inventoryitemalia = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "Alias is required")]
       
public int AliasId
		{ 
		    get { return this.inventoryitemalia.AliasId; }
			set
			{
			    if (value == this.inventoryitemalia.AliasId) return;
				this.inventoryitemalia.AliasId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AliasId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.inventoryitemalia.ItemNumber; }
			set
			{
			    if (value == this.inventoryitemalia.ItemNumber) return;
				this.inventoryitemalia.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AliasName is required")]
       
                
                [MaxLength(20, ErrorMessage = "AliasName has a max length of 20 letters ")]
public string AliasName
		{ 
		    get { return this.inventoryitemalia.AliasName; }
			set
			{
			    if (value == this.inventoryitemalia.AliasName) return;
				this.inventoryitemalia.AliasName = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AliasName");
			}
		}
     

       private InventoryItem _InventoryItem;
        public  InventoryItem InventoryItem
		{
		    get
               { 
                  if (this.inventoryitemalia != null)
                   {
                       if (_InventoryItem != null)
                       {
                           if (this.inventoryitemalia.InventoryItem !=
                               _InventoryItem.DTO)
                           {
                                if (this.inventoryitemalia.InventoryItem  != null)
                               _InventoryItem = new InventoryItem(this.inventoryitemalia.InventoryItem);
                           }
                       }
                       else
                       {
                             if (this.inventoryitemalia.InventoryItem  != null)
                           _InventoryItem = new InventoryItem(this.inventoryitemalia.InventoryItem);
                       }
                   }


             //       if (_InventoryItem != null) return _InventoryItem;
                       
             //       var i = new InventoryItem(){TrackingState = TrackingState.Added};
			//		//if (this.inventoryitemalia.InventoryItem == null) Debugger.Break();
			//		if (this.inventoryitemalia.InventoryItem != null)
            //        {
            //           i. = this.inventoryitemalia.InventoryItem;
            //        }
            //        else
            //        {
            //            this.inventoryitemalia.InventoryItem = i.;
             //       }
                           
            //        _InventoryItem = i;
                     
                    return _InventoryItem;
               }
			set
			{
			    if (value == _InventoryItem) return;
                _InventoryItem = value;
                if(value != null)
                     this.inventoryitemalia.InventoryItem = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("InventoryItem");
			}
		}
        


        ChangeTrackingCollection<DTO.InventoryItemAlia> _changeTracker;    
        public ChangeTrackingCollection<DTO.InventoryItemAlia> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


