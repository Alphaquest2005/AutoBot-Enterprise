// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using EntryDataQS.Client.DTO;


using Core.Common.Validation;

namespace EntryDataQS.Client.Entities
{
       public partial class PackageType: BaseEntity<PackageType>
    {
        DTO.PackageType packagetype;
        public PackageType(DTO.PackageType dto )
        {
              packagetype = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.PackageType>(packagetype);

        }

        public DTO.PackageType DTO
        {
            get
            {
             return packagetype;
            }
            set
            {
                packagetype = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "PackageCode is required")]
       
                
                [MaxLength(4, ErrorMessage = "PackageCode has a max length of 4 letters ")]
public string PackageCode
		{ 
		    get { return this.packagetype.PackageCode; }
			set
			{
			    if (value == this.packagetype.PackageCode) return;
				this.packagetype.PackageCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PackageCode");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PackageDescription has a max length of 50 letters ")]
public string PackageDescription
		{ 
		    get { return this.packagetype.PackageDescription; }
			set
			{
			    if (value == this.packagetype.PackageDescription) return;
				this.packagetype.PackageDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PackageDescription");
			}
		}
     


        ChangeTrackingCollection<DTO.PackageType> _changeTracker;    
        public ChangeTrackingCollection<DTO.PackageType> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


