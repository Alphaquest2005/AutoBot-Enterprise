// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using EntryDataQS.Client.DTO;


using Core.Common.Validation;

namespace EntryDataQS.Client.Entities
{
       public partial class AsycudaDocumentEntryDataLine: BaseEntity<AsycudaDocumentEntryDataLine>
    {
        DTO.AsycudaDocumentEntryDataLine asycudadocumententrydataline;
        public AsycudaDocumentEntryDataLine(DTO.AsycudaDocumentEntryDataLine dto )
        {
              asycudadocumententrydataline = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocumentEntryDataLine>(asycudadocumententrydataline);

        }

        public DTO.AsycudaDocumentEntryDataLine DTO
        {
            get
            {
             return asycudadocumententrydataline;
            }
            set
            {
                asycudadocumententrydataline = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.asycudadocumententrydataline.ApplicationSettingsId; }
			set
			{
			    if (value == this.asycudadocumententrydataline.ApplicationSettingsId) return;
				this.asycudadocumententrydataline.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData is required")]
       
                
                [MaxLength(50, ErrorMessage = "EntryDataId has a max length of 50 letters ")]
public string EntryDataId
		{ 
		    get { return this.asycudadocumententrydataline.EntryDataId; }
			set
			{
			    if (value == this.asycudadocumententrydataline.EntryDataId) return;
				this.asycudadocumententrydataline.EntryDataId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryDataDate is required")]
       
public System.DateTime EntryDataDate
		{ 
		    get { return this.asycudadocumententrydataline.EntryDataDate; }
			set
			{
			    if (value == this.asycudadocumententrydataline.EntryDataDate) return;
				this.asycudadocumententrydataline.EntryDataDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDate");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "EntryType has a max length of 50 letters ")]
public string EntryType
		{ 
		    get { return this.asycudadocumententrydataline.EntryType; }
			set
			{
			    if (value == this.asycudadocumententrydataline.EntryType) return;
				this.asycudadocumententrydataline.EntryType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryType");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.asycudadocumententrydataline.ItemNumber; }
			set
			{
			    if (value == this.asycudadocumententrydataline.ItemNumber) return;
				this.asycudadocumententrydataline.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Quantity is required")]
       [NumberValidationAttribute]
public double Quantity
		{ 
		    get { return this.asycudadocumententrydataline.Quantity; }
			set
			{
			    if (value == this.asycudadocumententrydataline.Quantity) return;
				this.asycudadocumententrydataline.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Cost is required")]
       [NumberValidationAttribute]
public double Cost
		{ 
		    get { return this.asycudadocumententrydataline.Cost; }
			set
			{
			    if (value == this.asycudadocumententrydataline.Cost) return;
				this.asycudadocumententrydataline.Cost = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Cost");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PreviousInvoiceNumber has a max length of 50 letters ")]
public string PreviousInvoiceNumber
		{ 
		    get { return this.asycudadocumententrydataline.PreviousInvoiceNumber; }
			set
			{
			    if (value == this.asycudadocumententrydataline.PreviousInvoiceNumber) return;
				this.asycudadocumententrydataline.PreviousInvoiceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousInvoiceNumber");
			}
		}
     

       
       
                
                [MaxLength(4000, ErrorMessage = "EntryDataDetailsKey has a max length of 4000 letters ")]
public string EntryDataDetailsKey
		{ 
		    get { return this.asycudadocumententrydataline.EntryDataDetailsKey; }
			set
			{
			    if (value == this.asycudadocumententrydataline.EntryDataDetailsKey) return;
				this.asycudadocumententrydataline.EntryDataDetailsKey = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDetailsKey");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LineNumber
		{ 
		    get { return this.asycudadocumententrydataline.LineNumber; }
			set
			{
			    if (value == this.asycudadocumententrydataline.LineNumber) return;
				this.asycudadocumententrydataline.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Comment has a max length of 255 letters ")]
public string Comment
		{ 
		    get { return this.asycudadocumententrydataline.Comment; }
			set
			{
			    if (value == this.asycudadocumententrydataline.Comment) return;
				this.asycudadocumententrydataline.Comment = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Comment");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocument is required")]
       
public int AsycudaDocumentId
		{ 
		    get { return this.asycudadocumententrydataline.AsycudaDocumentId; }
			set
			{
			    if (value == this.asycudadocumententrydataline.AsycudaDocumentId) return;
				this.asycudadocumententrydataline.AsycudaDocumentId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData_ is required")]
       
public int EntryData_Id
		{ 
		    get { return this.asycudadocumententrydataline.EntryData_Id; }
			set
			{
			    if (value == this.asycudadocumententrydataline.EntryData_Id) return;
				this.asycudadocumententrydataline.EntryData_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryData_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemDescription is required")]
       
                
                [MaxLength(255, ErrorMessage = "ItemDescription has a max length of 255 letters ")]
public string ItemDescription
		{ 
		    get { return this.asycudadocumententrydataline.ItemDescription; }
			set
			{
			    if (value == this.asycudadocumententrydataline.ItemDescription) return;
				this.asycudadocumententrydataline.ItemDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemDescription");
			}
		}
     


        ChangeTrackingCollection<DTO.AsycudaDocumentEntryDataLine> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocumentEntryDataLine> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


