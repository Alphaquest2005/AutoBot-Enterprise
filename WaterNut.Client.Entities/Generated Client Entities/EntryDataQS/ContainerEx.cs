// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using EntryDataQS.Client.DTO;


using Core.Common.Validation;

namespace EntryDataQS.Client.Entities
{
       public partial class ContainerEx: BaseEntity<ContainerEx>
    {
        DTO.ContainerEx containerex;
        public ContainerEx(DTO.ContainerEx dto )
        {
              containerex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.ContainerEx>(containerex);

        }

        public DTO.ContainerEx DTO
        {
            get
            {
             return containerex;
            }
            set
            {
                containerex = value;
            }
        }
       
       
                
                [MaxLength(255, ErrorMessage = "Container_identity has a max length of 255 letters ")]
public string Container_identity
		{ 
		    get { return this.containerex.Container_identity; }
			set
			{
			    if (value == this.containerex.Container_identity) return;
				this.containerex.Container_identity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Container_identity");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Container_type has a max length of 50 letters ")]
public string Container_type
		{ 
		    get { return this.containerex.Container_type; }
			set
			{
			    if (value == this.containerex.Container_type) return;
				this.containerex.Container_type = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Container_type");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Empty_full_indicator has a max length of 255 letters ")]
public string Empty_full_indicator
		{ 
		    get { return this.containerex.Empty_full_indicator; }
			set
			{
			    if (value == this.containerex.Empty_full_indicator) return;
				this.containerex.Empty_full_indicator = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Empty_full_indicator");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Gross_weight is required")]
       [NumberValidationAttribute]
public double Gross_weight
		{ 
		    get { return this.containerex.Gross_weight; }
			set
			{
			    if (value == this.containerex.Gross_weight) return;
				this.containerex.Gross_weight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Gross_weight");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Goods_description has a max length of 255 letters ")]
public string Goods_description
		{ 
		    get { return this.containerex.Goods_description; }
			set
			{
			    if (value == this.containerex.Goods_description) return;
				this.containerex.Goods_description = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Goods_description");
			}
		}
     

       
       
                
                [MaxLength(3, ErrorMessage = "Packages_number has a max length of 3 letters ")]
public string Packages_number
		{ 
		    get { return this.containerex.Packages_number; }
			set
			{
			    if (value == this.containerex.Packages_number) return;
				this.containerex.Packages_number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Packages_number");
			}
		}
     

       
       
                
                [MaxLength(4, ErrorMessage = "Packages_type has a max length of 4 letters ")]
public string Packages_type
		{ 
		    get { return this.containerex.Packages_type; }
			set
			{
			    if (value == this.containerex.Packages_type) return;
				this.containerex.Packages_type = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Packages_type");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Packages_weight is required")]
       [NumberValidationAttribute]
public double Packages_weight
		{ 
		    get { return this.containerex.Packages_weight; }
			set
			{
			    if (value == this.containerex.Packages_weight) return;
				this.containerex.Packages_weight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Packages_weight");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Container_ is required")]
       
public int Container_Id
		{ 
		    get { return this.containerex.Container_Id; }
			set
			{
			    if (value == this.containerex.Container_Id) return;
				this.containerex.Container_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Container_Id");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> TotalValue
		{ 
		    get { return this.containerex.TotalValue; }
			set
			{
			    if (value == this.containerex.TotalValue) return;
				this.containerex.TotalValue = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TotalValue");
			}
		}
     

       
       
public Nullable<System.DateTime> ShipDate
		{ 
		    get { return this.containerex.ShipDate; }
			set
			{
			    if (value == this.containerex.ShipDate) return;
				this.containerex.ShipDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ShipDate");
			}
		}
     

       
       
public Nullable<System.DateTime> DeliveryDate
		{ 
		    get { return this.containerex.DeliveryDate; }
			set
			{
			    if (value == this.containerex.DeliveryDate) return;
				this.containerex.DeliveryDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DeliveryDate");
			}
		}
     

       
       
                
                [MaxLength(100, ErrorMessage = "Seal has a max length of 100 letters ")]
public string Seal
		{ 
		    get { return this.containerex.Seal; }
			set
			{
			    if (value == this.containerex.Seal) return;
				this.containerex.Seal = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Seal");
			}
		}
     

       
       
public Nullable<int> AsycudaDocumentSetId
		{ 
		    get { return this.containerex.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.containerex.AsycudaDocumentSetId) return;
				this.containerex.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "EntryDataId has a max length of 50 letters ")]
public string EntryDataId
		{ 
		    get { return this.containerex.EntryDataId; }
			set
			{
			    if (value == this.containerex.EntryDataId) return;
				this.containerex.EntryDataId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PackageDescription has a max length of 50 letters ")]
public string PackageDescription
		{ 
		    get { return this.containerex.PackageDescription; }
			set
			{
			    if (value == this.containerex.PackageDescription) return;
				this.containerex.PackageDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PackageDescription");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "ContainerTypeDescription has a max length of 50 letters ")]
public string ContainerTypeDescription
		{ 
		    get { return this.containerex.ContainerTypeDescription; }
			set
			{
			    if (value == this.containerex.ContainerTypeDescription) return;
				this.containerex.ContainerTypeDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ContainerTypeDescription");
			}
		}
     


        ChangeTrackingCollection<DTO.ContainerEx> _changeTracker;    
        public ChangeTrackingCollection<DTO.ContainerEx> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


