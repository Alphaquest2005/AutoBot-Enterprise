// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using PreviousDocumentQS.Client.DTO;


using Core.Common.Validation;

namespace PreviousDocumentQS.Client.Entities
{
       public partial class PreviousItemsEx: BaseEntity<PreviousItemsEx>
    {
        DTO.PreviousItemsEx previousitemsex;
        public PreviousItemsEx(DTO.PreviousItemsEx dto )
        {
              previousitemsex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.PreviousItemsEx>(previousitemsex);

        }

        public DTO.PreviousItemsEx DTO
        {
            get
            {
             return previousitemsex;
            }
            set
            {
                previousitemsex = value;
            }
        }
       
       
                
                [MaxLength(20, ErrorMessage = "Packages_number has a max length of 20 letters ")]
public string Packages_number
		{ 
		    get { return this.previousitemsex.Packages_number; }
			set
			{
			    if (value == this.previousitemsex.Packages_number) return;
				this.previousitemsex.Packages_number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Packages_number");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Previous_Packages_number has a max length of 20 letters ")]
public string Previous_Packages_number
		{ 
		    get { return this.previousitemsex.Previous_Packages_number; }
			set
			{
			    if (value == this.previousitemsex.Previous_Packages_number) return;
				this.previousitemsex.Previous_Packages_number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Previous_Packages_number");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Hs_code has a max length of 20 letters ")]
public string Hs_code
		{ 
		    get { return this.previousitemsex.Hs_code; }
			set
			{
			    if (value == this.previousitemsex.Hs_code) return;
				this.previousitemsex.Hs_code = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Hs_code");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Commodity_code has a max length of 20 letters ")]
public string Commodity_code
		{ 
		    get { return this.previousitemsex.Commodity_code; }
			set
			{
			    if (value == this.previousitemsex.Commodity_code) return;
				this.previousitemsex.Commodity_code = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Commodity_code");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Previous_item_number has a max length of 20 letters ")]
public string Previous_item_number
		{ 
		    get { return this.previousitemsex.Previous_item_number; }
			set
			{
			    if (value == this.previousitemsex.Previous_item_number) return;
				this.previousitemsex.Previous_item_number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Previous_item_number");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Goods_origin has a max length of 20 letters ")]
public string Goods_origin
		{ 
		    get { return this.previousitemsex.Goods_origin; }
			set
			{
			    if (value == this.previousitemsex.Goods_origin) return;
				this.previousitemsex.Goods_origin = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Goods_origin");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Net_weight is required")]
       [NumberValidationAttribute]
public double Net_weight
		{ 
		    get { return this.previousitemsex.Net_weight; }
			set
			{
			    if (value == this.previousitemsex.Net_weight) return;
				this.previousitemsex.Net_weight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Net_weight");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Prev_net_weight is required")]
       [NumberValidationAttribute]
public double Prev_net_weight
		{ 
		    get { return this.previousitemsex.Prev_net_weight; }
			set
			{
			    if (value == this.previousitemsex.Prev_net_weight) return;
				this.previousitemsex.Prev_net_weight = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Prev_net_weight");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Prev_reg_ser has a max length of 20 letters ")]
public string Prev_reg_ser
		{ 
		    get { return this.previousitemsex.Prev_reg_ser; }
			set
			{
			    if (value == this.previousitemsex.Prev_reg_ser) return;
				this.previousitemsex.Prev_reg_ser = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Prev_reg_ser");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Prev_reg_nbr has a max length of 20 letters ")]
public string Prev_reg_nbr
		{ 
		    get { return this.previousitemsex.Prev_reg_nbr; }
			set
			{
			    if (value == this.previousitemsex.Prev_reg_nbr) return;
				this.previousitemsex.Prev_reg_nbr = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Prev_reg_nbr");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Prev_reg_dat has a max length of 20 letters ")]
public string Prev_reg_dat
		{ 
		    get { return this.previousitemsex.Prev_reg_dat; }
			set
			{
			    if (value == this.previousitemsex.Prev_reg_dat) return;
				this.previousitemsex.Prev_reg_dat = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Prev_reg_dat");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Prev_reg_cuo has a max length of 20 letters ")]
public string Prev_reg_cuo
		{ 
		    get { return this.previousitemsex.Prev_reg_cuo; }
			set
			{
			    if (value == this.previousitemsex.Prev_reg_cuo) return;
				this.previousitemsex.Prev_reg_cuo = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Prev_reg_cuo");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Suplementary_Quantity is required")]
       [NumberValidationAttribute]
public double Suplementary_Quantity
		{ 
		    get { return this.previousitemsex.Suplementary_Quantity; }
			set
			{
			    if (value == this.previousitemsex.Suplementary_Quantity) return;
				this.previousitemsex.Suplementary_Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Suplementary_Quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Preveious_suplementary_quantity is required")]
       [NumberValidationAttribute]
public double Preveious_suplementary_quantity
		{ 
		    get { return this.previousitemsex.Preveious_suplementary_quantity; }
			set
			{
			    if (value == this.previousitemsex.Preveious_suplementary_quantity) return;
				this.previousitemsex.Preveious_suplementary_quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Preveious_suplementary_quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Current_value is required")]
       [NumberValidationAttribute]
public double Current_value
		{ 
		    get { return this.previousitemsex.Current_value; }
			set
			{
			    if (value == this.previousitemsex.Current_value) return;
				this.previousitemsex.Current_value = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Current_value");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Previous_value is required")]
       [NumberValidationAttribute]
public double Previous_value
		{ 
		    get { return this.previousitemsex.Previous_value; }
			set
			{
			    if (value == this.previousitemsex.Previous_value) return;
				this.previousitemsex.Previous_value = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Previous_value");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Current_item_number has a max length of 20 letters ")]
public string Current_item_number
		{ 
		    get { return this.previousitemsex.Current_item_number; }
			set
			{
			    if (value == this.previousitemsex.Current_item_number) return;
				this.previousitemsex.Current_item_number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Current_item_number");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "PreviousItem_ is required")]
       
public int PreviousItem_Id
		{ 
		    get { return this.previousitemsex.PreviousItem_Id; }
			set
			{
			    if (value == this.previousitemsex.PreviousItem_Id) return;
				this.previousitemsex.PreviousItem_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousItem_Id");
			}
		}
     

       
       
public Nullable<int> ASYCUDA_Id
		{ 
		    get { return this.previousitemsex.ASYCUDA_Id; }
			set
			{
			    if (value == this.previousitemsex.ASYCUDA_Id) return;
				this.previousitemsex.ASYCUDA_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ASYCUDA_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "QtyAllocated is required")]
       [NumberValidationAttribute]
public double QtyAllocated
		{ 
		    get { return this.previousitemsex.QtyAllocated; }
			set
			{
			    if (value == this.previousitemsex.QtyAllocated) return;
				this.previousitemsex.QtyAllocated = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QtyAllocated");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RndCurrent_Value is required")]
       [NumberValidationAttribute]
public double RndCurrent_Value
		{ 
		    get { return this.previousitemsex.RndCurrent_Value; }
			set
			{
			    if (value == this.previousitemsex.RndCurrent_Value) return;
				this.previousitemsex.RndCurrent_Value = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RndCurrent_Value");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "CNumber has a max length of 20 letters ")]
public string CNumber
		{ 
		    get { return this.previousitemsex.CNumber; }
			set
			{
			    if (value == this.previousitemsex.CNumber) return;
				this.previousitemsex.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
public Nullable<System.DateTime> RegistrationDate
		{ 
		    get { return this.previousitemsex.RegistrationDate; }
			set
			{
			    if (value == this.previousitemsex.RegistrationDate) return;
				this.previousitemsex.RegistrationDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       
       
public Nullable<int> PreviousDocumentItemId
		{ 
		    get { return this.previousitemsex.PreviousDocumentItemId; }
			set
			{
			    if (value == this.previousitemsex.PreviousDocumentItemId) return;
				this.previousitemsex.PreviousDocumentItemId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousDocumentItemId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentItem is required")]
       
public int AsycudaDocumentItemId
		{ 
		    get { return this.previousitemsex.AsycudaDocumentItemId; }
			set
			{
			    if (value == this.previousitemsex.AsycudaDocumentItemId) return;
				this.previousitemsex.AsycudaDocumentItemId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentItemId");
			}
		}
     

       
       
                
                [MaxLength(30, ErrorMessage = "ReferenceNumber has a max length of 30 letters ")]
public string ReferenceNumber
		{ 
		    get { return this.previousitemsex.ReferenceNumber; }
			set
			{
			    if (value == this.previousitemsex.ReferenceNumber) return;
				this.previousitemsex.ReferenceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReferenceNumber");
			}
		}
     

       
       
public Nullable<System.DateTime> AssessmentDate
		{ 
		    get { return this.previousitemsex.AssessmentDate; }
			set
			{
			    if (value == this.previousitemsex.AssessmentDate) return;
				this.previousitemsex.AssessmentDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AssessmentDate");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.previousitemsex.ItemNumber; }
			set
			{
			    if (value == this.previousitemsex.ItemNumber) return;
				this.previousitemsex.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "SalesFactor is required")]
       [NumberValidationAttribute]
public double SalesFactor
		{ 
		    get { return this.previousitemsex.SalesFactor; }
			set
			{
			    if (value == this.previousitemsex.SalesFactor) return;
				this.previousitemsex.SalesFactor = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SalesFactor");
			}
		}
     

       
       
                
                [MaxLength(40, ErrorMessage = "DocumentType has a max length of 40 letters ")]
public string DocumentType
		{ 
		    get { return this.previousitemsex.DocumentType; }
			set
			{
			    if (value == this.previousitemsex.DocumentType) return;
				this.previousitemsex.DocumentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentType");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DutyFreePaid is required")]
       
                
                [MaxLength(9, ErrorMessage = "DutyFreePaid has a max length of 9 letters ")]
public string DutyFreePaid
		{ 
		    get { return this.previousitemsex.DutyFreePaid; }
			set
			{
			    if (value == this.previousitemsex.DutyFreePaid) return;
				this.previousitemsex.DutyFreePaid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DutyFreePaid");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "Prev_decl_HS_spec has a max length of 20 letters ")]
public string Prev_decl_HS_spec
		{ 
		    get { return this.previousitemsex.Prev_decl_HS_spec; }
			set
			{
			    if (value == this.previousitemsex.Prev_decl_HS_spec) return;
				this.previousitemsex.Prev_decl_HS_spec = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Prev_decl_HS_spec");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> pLineNumber
		{ 
		    get { return this.previousitemsex.pLineNumber; }
			set
			{
			    if (value == this.previousitemsex.pLineNumber) return;
				this.previousitemsex.pLineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("pLineNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.previousitemsex.ApplicationSettingsId; }
			set
			{
			    if (value == this.previousitemsex.ApplicationSettingsId) return;
				this.previousitemsex.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       private PreviousDocumentItem _PreviousDocumentItem;
        public  PreviousDocumentItem PreviousDocumentItem
		{
		    get
               { 
                  if (this.previousitemsex != null)
                   {
                       if (_PreviousDocumentItem != null)
                       {
                           if (this.previousitemsex.PreviousDocumentItem !=
                               _PreviousDocumentItem.DTO)
                           {
                                if (this.previousitemsex.PreviousDocumentItem  != null)
                               _PreviousDocumentItem = new PreviousDocumentItem(this.previousitemsex.PreviousDocumentItem);
                           }
                       }
                       else
                       {
                             if (this.previousitemsex.PreviousDocumentItem  != null)
                           _PreviousDocumentItem = new PreviousDocumentItem(this.previousitemsex.PreviousDocumentItem);
                       }
                   }


             //       if (_PreviousDocumentItem != null) return _PreviousDocumentItem;
                       
             //       var i = new PreviousDocumentItem(){TrackingState = TrackingState.Added};
			//		//if (this.previousitemsex.PreviousDocumentItem == null) Debugger.Break();
			//		if (this.previousitemsex.PreviousDocumentItem != null)
            //        {
            //           i. = this.previousitemsex.PreviousDocumentItem;
            //        }
            //        else
            //        {
            //            this.previousitemsex.PreviousDocumentItem = i.;
             //       }
                           
            //        _PreviousDocumentItem = i;
                     
                    return _PreviousDocumentItem;
               }
			set
			{
			    if (value == _PreviousDocumentItem) return;
                _PreviousDocumentItem = value;
                if(value != null)
                     this.previousitemsex.PreviousDocumentItem = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("PreviousDocumentItem");
			}
		}
        

       private PreviousDocumentItem _AsycudaDocumentItem;
        public  PreviousDocumentItem AsycudaDocumentItem
		{
		    get
               { 
                  if (this.previousitemsex != null)
                   {
                       if (_AsycudaDocumentItem != null)
                       {
                           if (this.previousitemsex.AsycudaDocumentItem !=
                               _AsycudaDocumentItem.DTO)
                           {
                                if (this.previousitemsex.AsycudaDocumentItem  != null)
                               _AsycudaDocumentItem = new PreviousDocumentItem(this.previousitemsex.AsycudaDocumentItem);
                           }
                       }
                       else
                       {
                             if (this.previousitemsex.AsycudaDocumentItem  != null)
                           _AsycudaDocumentItem = new PreviousDocumentItem(this.previousitemsex.AsycudaDocumentItem);
                       }
                   }


             //       if (_AsycudaDocumentItem != null) return _AsycudaDocumentItem;
                       
             //       var i = new PreviousDocumentItem(){TrackingState = TrackingState.Added};
			//		//if (this.previousitemsex.AsycudaDocumentItem == null) Debugger.Break();
			//		if (this.previousitemsex.AsycudaDocumentItem != null)
            //        {
            //           i. = this.previousitemsex.AsycudaDocumentItem;
            //        }
            //        else
            //        {
            //            this.previousitemsex.AsycudaDocumentItem = i.;
             //       }
                           
            //        _AsycudaDocumentItem = i;
                     
                    return _AsycudaDocumentItem;
               }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
                _AsycudaDocumentItem = value;
                if(value != null)
                     this.previousitemsex.AsycudaDocumentItem = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentItem");
			}
		}
        


        ChangeTrackingCollection<DTO.PreviousItemsEx> _changeTracker;    
        public ChangeTrackingCollection<DTO.PreviousItemsEx> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


