// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class Start: BaseEntity<Start>
    {
        DTO.Start start;
        public Start(DTO.Start dto )
        {
              start = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.Start>(start);

        }

        public DTO.Start DTO
        {
            get
            {
             return start;
            }
            set
            {
                start = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.start.Id; }
			set
			{
			    if (value == this.start.Id) return;
				this.start.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Part is required")]
       
public int PartId
		{ 
		    get { return this.start.PartId; }
			set
			{
			    if (value == this.start.PartId) return;
				this.start.PartId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PartId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegExChain is required")]
       
public int RegExChainId
		{ 
		    get { return this.start.RegExChainId; }
			set
			{
			    if (value == this.start.RegExChainId) return;
				this.start.RegExChainId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegExChainId");
			}
		}
     

       private Parts _Parts;
        public  Parts Parts
		{
		    get
               { 
                  if (this.start != null)
                   {
                       if (_Parts != null)
                       {
                           if (this.start.Parts !=
                               _Parts.DTO)
                           {
                                if (this.start.Parts  != null)
                               _Parts = new Parts(this.start.Parts);
                           }
                       }
                       else
                       {
                             if (this.start.Parts  != null)
                           _Parts = new Parts(this.start.Parts);
                       }
                   }


             //       if (_Parts != null) return _Parts;
                       
             //       var i = new Parts(){TrackingState = TrackingState.Added};
			//		//if (this.start.Parts == null) Debugger.Break();
			//		if (this.start.Parts != null)
            //        {
            //           i. = this.start.Parts;
            //        }
            //        else
            //        {
            //            this.start.Parts = i.;
             //       }
                           
            //        _Parts = i;
                     
                    return _Parts;
               }
			set
			{
			    if (value == _Parts) return;
                _Parts = value;
                if(value != null)
                     this.start.Parts = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Parts");
			}
		}
        

       private RegExChain _RegExChain;
        public  RegExChain RegExChain
		{
		    get
               { 
                  if (this.start != null)
                   {
                       if (_RegExChain != null)
                       {
                           if (this.start.RegExChain !=
                               _RegExChain.DTO)
                           {
                                if (this.start.RegExChain  != null)
                               _RegExChain = new RegExChain(this.start.RegExChain);
                           }
                       }
                       else
                       {
                             if (this.start.RegExChain  != null)
                           _RegExChain = new RegExChain(this.start.RegExChain);
                       }
                   }


             //       if (_RegExChain != null) return _RegExChain;
                       
             //       var i = new RegExChain(){TrackingState = TrackingState.Added};
			//		//if (this.start.RegExChain == null) Debugger.Break();
			//		if (this.start.RegExChain != null)
            //        {
            //           i. = this.start.RegExChain;
            //        }
            //        else
            //        {
            //            this.start.RegExChain = i.;
             //       }
                           
            //        _RegExChain = i;
                     
                    return _RegExChain;
               }
			set
			{
			    if (value == _RegExChain) return;
                _RegExChain = value;
                if(value != null)
                     this.start.RegExChain = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("RegExChain");
			}
		}
        


        ChangeTrackingCollection<DTO.Start> _changeTracker;    
        public ChangeTrackingCollection<DTO.Start> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


