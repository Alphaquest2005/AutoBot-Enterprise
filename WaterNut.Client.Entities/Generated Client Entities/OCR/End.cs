// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class End: BaseEntity<End>
    {
        DTO.End end;
        public End(DTO.End dto )
        {
              end = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.End>(end);

        }

        public DTO.End DTO
        {
            get
            {
             return end;
            }
            set
            {
                end = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.end.Id; }
			set
			{
			    if (value == this.end.Id) return;
				this.end.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Part is required")]
       
public int PartId
		{ 
		    get { return this.end.PartId; }
			set
			{
			    if (value == this.end.PartId) return;
				this.end.PartId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PartId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegEx is required")]
       
public int RegExId
		{ 
		    get { return this.end.RegExId; }
			set
			{
			    if (value == this.end.RegExId) return;
				this.end.RegExId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegExId");
			}
		}
     

       private Parts _Parts;
        public  Parts Parts
		{
		    get
               { 
                  if (this.end != null)
                   {
                       if (_Parts != null)
                       {
                           if (this.end.Parts !=
                               _Parts.DTO)
                           {
                                if (this.end.Parts  != null)
                               _Parts = new Parts(this.end.Parts);
                           }
                       }
                       else
                       {
                             if (this.end.Parts  != null)
                           _Parts = new Parts(this.end.Parts);
                       }
                   }


             //       if (_Parts != null) return _Parts;
                       
             //       var i = new Parts(){TrackingState = TrackingState.Added};
			//		//if (this.end.Parts == null) Debugger.Break();
			//		if (this.end.Parts != null)
            //        {
            //           i. = this.end.Parts;
            //        }
            //        else
            //        {
            //            this.end.Parts = i.;
             //       }
                           
            //        _Parts = i;
                     
                    return _Parts;
               }
			set
			{
			    if (value == _Parts) return;
                _Parts = value;
                if(value != null)
                     this.end.Parts = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Parts");
			}
		}
        

       private RegularExpressions _RegularExpressions;
        public  RegularExpressions RegularExpressions
		{
		    get
               { 
                  if (this.end != null)
                   {
                       if (_RegularExpressions != null)
                       {
                           if (this.end.RegularExpressions !=
                               _RegularExpressions.DTO)
                           {
                                if (this.end.RegularExpressions  != null)
                               _RegularExpressions = new RegularExpressions(this.end.RegularExpressions);
                           }
                       }
                       else
                       {
                             if (this.end.RegularExpressions  != null)
                           _RegularExpressions = new RegularExpressions(this.end.RegularExpressions);
                       }
                   }


             //       if (_RegularExpressions != null) return _RegularExpressions;
                       
             //       var i = new RegularExpressions(){TrackingState = TrackingState.Added};
			//		//if (this.end.RegularExpressions == null) Debugger.Break();
			//		if (this.end.RegularExpressions != null)
            //        {
            //           i. = this.end.RegularExpressions;
            //        }
            //        else
            //        {
            //            this.end.RegularExpressions = i.;
             //       }
                           
            //        _RegularExpressions = i;
                     
                    return _RegularExpressions;
               }
			set
			{
			    if (value == _RegularExpressions) return;
                _RegularExpressions = value;
                if(value != null)
                     this.end.RegularExpressions = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("RegularExpressions");
			}
		}
        


        ChangeTrackingCollection<DTO.End> _changeTracker;    
        public ChangeTrackingCollection<DTO.End> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


