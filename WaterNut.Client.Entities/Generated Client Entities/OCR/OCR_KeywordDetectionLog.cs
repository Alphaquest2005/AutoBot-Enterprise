// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class OCR_KeywordDetectionLog: BaseEntity<OCR_KeywordDetectionLog>
    {
        DTO.OCR_KeywordDetectionLog ocr_keyworddetectionlog;
        public OCR_KeywordDetectionLog(DTO.OCR_KeywordDetectionLog dto )
        {
              ocr_keyworddetectionlog = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.OCR_KeywordDetectionLog>(ocr_keyworddetectionlog);

        }

        public DTO.OCR_KeywordDetectionLog DTO
        {
            get
            {
             return ocr_keyworddetectionlog;
            }
            set
            {
                ocr_keyworddetectionlog = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.ocr_keyworddetectionlog.Id; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.Id) return;
				this.ocr_keyworddetectionlog.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       
       
                
                [MaxLength(500, ErrorMessage = "DocumentPath has a max length of 500 letters ")]
public string DocumentPath
		{ 
		    get { return this.ocr_keyworddetectionlog.DocumentPath; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.DocumentPath) return;
				this.ocr_keyworddetectionlog.DocumentPath = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentPath");
			}
		}
     

       
       
                
                
public string DocumentContent
		{ 
		    get { return this.ocr_keyworddetectionlog.DocumentContent; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.DocumentContent) return;
				this.ocr_keyworddetectionlog.DocumentContent = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentContent");
			}
		}
     

       
       
public Nullable<int> DetectedMappingId
		{ 
		    get { return this.ocr_keyworddetectionlog.DetectedMappingId; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.DetectedMappingId) return;
				this.ocr_keyworddetectionlog.DetectedMappingId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DetectedMappingId");
			}
		}
     

       
       
                
                
public string KeywordMatches
		{ 
		    get { return this.ocr_keyworddetectionlog.KeywordMatches; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.KeywordMatches) return;
				this.ocr_keyworddetectionlog.KeywordMatches = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("KeywordMatches");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<decimal> MatchScore
		{ 
		    get { return this.ocr_keyworddetectionlog.MatchScore; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.MatchScore) return;
				this.ocr_keyworddetectionlog.MatchScore = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("MatchScore");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> ProcessingTimeMs
		{ 
		    get { return this.ocr_keyworddetectionlog.ProcessingTimeMs; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.ProcessingTimeMs) return;
				this.ocr_keyworddetectionlog.ProcessingTimeMs = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ProcessingTimeMs");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Success is required")]
       
public bool Success
		{ 
		    get { return this.ocr_keyworddetectionlog.Success; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.Success) return;
				this.ocr_keyworddetectionlog.Success = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Success");
			}
		}
     

       
       
                
                
public string ErrorMessage
		{ 
		    get { return this.ocr_keyworddetectionlog.ErrorMessage; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.ErrorMessage) return;
				this.ocr_keyworddetectionlog.ErrorMessage = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ErrorMessage");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "CreatedDate is required")]
       
public System.DateTime CreatedDate
		{ 
		    get { return this.ocr_keyworddetectionlog.CreatedDate; }
			set
			{
			    if (value == this.ocr_keyworddetectionlog.CreatedDate) return;
				this.ocr_keyworddetectionlog.CreatedDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CreatedDate");
			}
		}
     

       private OCR_TemplateTableMapping _OCR_TemplateTableMapping;
        public  OCR_TemplateTableMapping OCR_TemplateTableMapping
		{
		    get
               { 
                  if (this.ocr_keyworddetectionlog != null)
                   {
                       if (_OCR_TemplateTableMapping != null)
                       {
                           if (this.ocr_keyworddetectionlog.OCR_TemplateTableMapping !=
                               _OCR_TemplateTableMapping.DTO)
                           {
                                if (this.ocr_keyworddetectionlog.OCR_TemplateTableMapping  != null)
                               _OCR_TemplateTableMapping = new OCR_TemplateTableMapping(this.ocr_keyworddetectionlog.OCR_TemplateTableMapping);
                           }
                       }
                       else
                       {
                             if (this.ocr_keyworddetectionlog.OCR_TemplateTableMapping  != null)
                           _OCR_TemplateTableMapping = new OCR_TemplateTableMapping(this.ocr_keyworddetectionlog.OCR_TemplateTableMapping);
                       }
                   }


             //       if (_OCR_TemplateTableMapping != null) return _OCR_TemplateTableMapping;
                       
             //       var i = new OCR_TemplateTableMapping(){TrackingState = TrackingState.Added};
			//		//if (this.ocr_keyworddetectionlog.OCR_TemplateTableMapping == null) Debugger.Break();
			//		if (this.ocr_keyworddetectionlog.OCR_TemplateTableMapping != null)
            //        {
            //           i. = this.ocr_keyworddetectionlog.OCR_TemplateTableMapping;
            //        }
            //        else
            //        {
            //            this.ocr_keyworddetectionlog.OCR_TemplateTableMapping = i.;
             //       }
                           
            //        _OCR_TemplateTableMapping = i;
                     
                    return _OCR_TemplateTableMapping;
               }
			set
			{
			    if (value == _OCR_TemplateTableMapping) return;
                _OCR_TemplateTableMapping = value;
                if(value != null)
                     this.ocr_keyworddetectionlog.OCR_TemplateTableMapping = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OCR_TemplateTableMapping");
			}
		}
        


        ChangeTrackingCollection<DTO.OCR_KeywordDetectionLog> _changeTracker;    
        public ChangeTrackingCollection<DTO.OCR_KeywordDetectionLog> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


