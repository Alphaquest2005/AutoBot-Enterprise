// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class TemplateIdentificatonRegEx: BaseEntity<TemplateIdentificatonRegEx>
    {
        DTO.TemplateIdentificatonRegEx templateidentificatonregex;
        public TemplateIdentificatonRegEx(DTO.TemplateIdentificatonRegEx dto )
        {
              templateidentificatonregex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TemplateIdentificatonRegEx>(templateidentificatonregex);

        }

        public DTO.TemplateIdentificatonRegEx DTO
        {
            get
            {
             return templateidentificatonregex;
            }
            set
            {
                templateidentificatonregex = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.templateidentificatonregex.Id; }
			set
			{
			    if (value == this.templateidentificatonregex.Id) return;
				this.templateidentificatonregex.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Template is required")]
       
public int TemplateId
		{ 
		    get { return this.templateidentificatonregex.TemplateId; }
			set
			{
			    if (value == this.templateidentificatonregex.TemplateId) return;
				this.templateidentificatonregex.TemplateId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TemplateId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegEx is required")]
       
public int RegExId
		{ 
		    get { return this.templateidentificatonregex.RegExId; }
			set
			{
			    if (value == this.templateidentificatonregex.RegExId) return;
				this.templateidentificatonregex.RegExId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegExId");
			}
		}
     

       private Templates _OCR_Templates;
        public  Templates OCR_Templates
		{
		    get
               { 
                  if (this.templateidentificatonregex != null)
                   {
                       if (_OCR_Templates != null)
                       {
                           if (this.templateidentificatonregex.OCR_Templates !=
                               _OCR_Templates.DTO)
                           {
                                if (this.templateidentificatonregex.OCR_Templates  != null)
                               _OCR_Templates = new Templates(this.templateidentificatonregex.OCR_Templates);
                           }
                       }
                       else
                       {
                             if (this.templateidentificatonregex.OCR_Templates  != null)
                           _OCR_Templates = new Templates(this.templateidentificatonregex.OCR_Templates);
                       }
                   }


             //       if (_OCR_Templates != null) return _OCR_Templates;
                       
             //       var i = new Templates(){TrackingState = TrackingState.Added};
			//		//if (this.templateidentificatonregex.OCR_Templates == null) Debugger.Break();
			//		if (this.templateidentificatonregex.OCR_Templates != null)
            //        {
            //           i. = this.templateidentificatonregex.OCR_Templates;
            //        }
            //        else
            //        {
            //            this.templateidentificatonregex.OCR_Templates = i.;
             //       }
                           
            //        _OCR_Templates = i;
                     
                    return _OCR_Templates;
               }
			set
			{
			    if (value == _OCR_Templates) return;
                _OCR_Templates = value;
                if(value != null)
                     this.templateidentificatonregex.OCR_Templates = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OCR_Templates");
			}
		}
        

       private RegularExpressions _OCR_RegularExpressions;
        public  RegularExpressions OCR_RegularExpressions
		{
		    get
               { 
                  if (this.templateidentificatonregex != null)
                   {
                       if (_OCR_RegularExpressions != null)
                       {
                           if (this.templateidentificatonregex.OCR_RegularExpressions !=
                               _OCR_RegularExpressions.DTO)
                           {
                                if (this.templateidentificatonregex.OCR_RegularExpressions  != null)
                               _OCR_RegularExpressions = new RegularExpressions(this.templateidentificatonregex.OCR_RegularExpressions);
                           }
                       }
                       else
                       {
                             if (this.templateidentificatonregex.OCR_RegularExpressions  != null)
                           _OCR_RegularExpressions = new RegularExpressions(this.templateidentificatonregex.OCR_RegularExpressions);
                       }
                   }


             //       if (_OCR_RegularExpressions != null) return _OCR_RegularExpressions;
                       
             //       var i = new RegularExpressions(){TrackingState = TrackingState.Added};
			//		//if (this.templateidentificatonregex.OCR_RegularExpressions == null) Debugger.Break();
			//		if (this.templateidentificatonregex.OCR_RegularExpressions != null)
            //        {
            //           i. = this.templateidentificatonregex.OCR_RegularExpressions;
            //        }
            //        else
            //        {
            //            this.templateidentificatonregex.OCR_RegularExpressions = i.;
             //       }
                           
            //        _OCR_RegularExpressions = i;
                     
                    return _OCR_RegularExpressions;
               }
			set
			{
			    if (value == _OCR_RegularExpressions) return;
                _OCR_RegularExpressions = value;
                if(value != null)
                     this.templateidentificatonregex.OCR_RegularExpressions = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OCR_RegularExpressions");
			}
		}
        


        ChangeTrackingCollection<DTO.TemplateIdentificatonRegEx> _changeTracker;    
        public ChangeTrackingCollection<DTO.TemplateIdentificatonRegEx> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


