// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class OCR_PartLineFields: BaseEntity<OCR_PartLineFields>
    {
        DTO.OCR_PartLineFields ocr_partlinefields;
        public OCR_PartLineFields(DTO.OCR_PartLineFields dto )
        {
              ocr_partlinefields = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.OCR_PartLineFields>(ocr_partlinefields);

        }

        public DTO.OCR_PartLineFields DTO
        {
            get
            {
             return ocr_partlinefields;
            }
            set
            {
                ocr_partlinefields = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.ocr_partlinefields.Id; }
			set
			{
			    if (value == this.ocr_partlinefields.Id) return;
				this.ocr_partlinefields.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Invoice is required")]
       
                
                [MaxLength(50, ErrorMessage = "Invoice has a max length of 50 letters ")]
public string Invoice
		{ 
		    get { return this.ocr_partlinefields.Invoice; }
			set
			{
			    if (value == this.ocr_partlinefields.Invoice) return;
				this.ocr_partlinefields.Invoice = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Invoice");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Part is required")]
       
                
                [MaxLength(50, ErrorMessage = "Part has a max length of 50 letters ")]
public string Part
		{ 
		    get { return this.ocr_partlinefields.Part; }
			set
			{
			    if (value == this.ocr_partlinefields.Part) return;
				this.ocr_partlinefields.Part = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Part");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Line is required")]
       
                
                [MaxLength(50, ErrorMessage = "Line has a max length of 50 letters ")]
public string Line
		{ 
		    get { return this.ocr_partlinefields.Line; }
			set
			{
			    if (value == this.ocr_partlinefields.Line) return;
				this.ocr_partlinefields.Line = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Line");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegEx is required")]
       
                
                
public string RegEx
		{ 
		    get { return this.ocr_partlinefields.RegEx; }
			set
			{
			    if (value == this.ocr_partlinefields.RegEx) return;
				this.ocr_partlinefields.RegEx = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegEx");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Key has a max length of 50 letters ")]
public string Key
		{ 
		    get { return this.ocr_partlinefields.Key; }
			set
			{
			    if (value == this.ocr_partlinefields.Key) return;
				this.ocr_partlinefields.Key = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Key");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Field has a max length of 50 letters ")]
public string Field
		{ 
		    get { return this.ocr_partlinefields.Field; }
			set
			{
			    if (value == this.ocr_partlinefields.Field) return;
				this.ocr_partlinefields.Field = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Field");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "EntityType has a max length of 50 letters ")]
public string EntityType
		{ 
		    get { return this.ocr_partlinefields.EntityType; }
			set
			{
			    if (value == this.ocr_partlinefields.EntityType) return;
				this.ocr_partlinefields.EntityType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntityType");
			}
		}
     

       
       
public Nullable<bool> IsRequired
		{ 
		    get { return this.ocr_partlinefields.IsRequired; }
			set
			{
			    if (value == this.ocr_partlinefields.IsRequired) return;
				this.ocr_partlinefields.IsRequired = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsRequired");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "DataType has a max length of 50 letters ")]
public string DataType
		{ 
		    get { return this.ocr_partlinefields.DataType; }
			set
			{
			    if (value == this.ocr_partlinefields.DataType) return;
				this.ocr_partlinefields.DataType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DataType");
			}
		}
     

       
       
                
                
public string Value
		{ 
		    get { return this.ocr_partlinefields.Value; }
			set
			{
			    if (value == this.ocr_partlinefields.Value) return;
				this.ocr_partlinefields.Value = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Value");
			}
		}
     

       
       
public Nullable<bool> AppendValues
		{ 
		    get { return this.ocr_partlinefields.AppendValues; }
			set
			{
			    if (value == this.ocr_partlinefields.AppendValues) return;
				this.ocr_partlinefields.AppendValues = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AppendValues");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Field is required")]
       
public int FieldId
		{ 
		    get { return this.ocr_partlinefields.FieldId; }
			set
			{
			    if (value == this.ocr_partlinefields.FieldId) return;
				this.ocr_partlinefields.FieldId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FieldId");
			}
		}
     

       
       
public Nullable<int> ParentId
		{ 
		    get { return this.ocr_partlinefields.ParentId; }
			set
			{
			    if (value == this.ocr_partlinefields.ParentId) return;
				this.ocr_partlinefields.ParentId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ParentId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Line is required")]
       
public int LineId
		{ 
		    get { return this.ocr_partlinefields.LineId; }
			set
			{
			    if (value == this.ocr_partlinefields.LineId) return;
				this.ocr_partlinefields.LineId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineId");
			}
		}
     


        ChangeTrackingCollection<DTO.OCR_PartLineFields> _changeTracker;    
        public ChangeTrackingCollection<DTO.OCR_PartLineFields> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


