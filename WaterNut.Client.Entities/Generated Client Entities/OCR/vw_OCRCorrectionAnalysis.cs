// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class vw_OCRCorrectionAnalysis: BaseEntity<vw_OCRCorrectionAnalysis>
    {
        DTO.vw_OCRCorrectionAnalysis vw_ocrcorrectionanalysis;
        public vw_OCRCorrectionAnalysis(DTO.vw_OCRCorrectionAnalysis dto )
        {
              vw_ocrcorrectionanalysis = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.vw_OCRCorrectionAnalysis>(vw_ocrcorrectionanalysis);

        }

        public DTO.vw_OCRCorrectionAnalysis DTO
        {
            get
            {
             return vw_ocrcorrectionanalysis;
            }
            set
            {
                vw_ocrcorrectionanalysis = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "FieldName is required")]
       
                
                [MaxLength(255, ErrorMessage = "FieldName has a max length of 255 letters ")]
public string FieldName
		{ 
		    get { return this.vw_ocrcorrectionanalysis.FieldName; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.FieldName) return;
				this.vw_ocrcorrectionanalysis.FieldName = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FieldName");
			}
		}
     

       
       
                
                [MaxLength(100, ErrorMessage = "CorrectionType has a max length of 100 letters ")]
public string CorrectionType
		{ 
		    get { return this.vw_ocrcorrectionanalysis.CorrectionType; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.CorrectionType) return;
				this.vw_ocrcorrectionanalysis.CorrectionType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CorrectionType");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> TotalCorrections
		{ 
		    get { return this.vw_ocrcorrectionanalysis.TotalCorrections; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.TotalCorrections) return;
				this.vw_ocrcorrectionanalysis.TotalCorrections = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TotalCorrections");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> AvgConfidence
		{ 
		    get { return this.vw_ocrcorrectionanalysis.AvgConfidence; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.AvgConfidence) return;
				this.vw_ocrcorrectionanalysis.AvgConfidence = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AvgConfidence");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> SuccessfulCorrections
		{ 
		    get { return this.vw_ocrcorrectionanalysis.SuccessfulCorrections; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.SuccessfulCorrections) return;
				this.vw_ocrcorrectionanalysis.SuccessfulCorrections = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SuccessfulCorrections");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> FailedCorrections
		{ 
		    get { return this.vw_ocrcorrectionanalysis.FailedCorrections; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.FailedCorrections) return;
				this.vw_ocrcorrectionanalysis.FailedCorrections = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FailedCorrections");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> SuccessRate
		{ 
		    get { return this.vw_ocrcorrectionanalysis.SuccessRate; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.SuccessRate) return;
				this.vw_ocrcorrectionanalysis.SuccessRate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SuccessRate");
			}
		}
     

       
       
public Nullable<System.DateTime> FirstCorrection
		{ 
		    get { return this.vw_ocrcorrectionanalysis.FirstCorrection; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.FirstCorrection) return;
				this.vw_ocrcorrectionanalysis.FirstCorrection = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FirstCorrection");
			}
		}
     

       
       
public Nullable<System.DateTime> LastCorrection
		{ 
		    get { return this.vw_ocrcorrectionanalysis.LastCorrection; }
			set
			{
			    if (value == this.vw_ocrcorrectionanalysis.LastCorrection) return;
				this.vw_ocrcorrectionanalysis.LastCorrection = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LastCorrection");
			}
		}
     


        ChangeTrackingCollection<DTO.vw_OCRCorrectionAnalysis> _changeTracker;    
        public ChangeTrackingCollection<DTO.vw_OCRCorrectionAnalysis> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


