// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class FieldFormatRegEx: BaseEntity<FieldFormatRegEx>
    {
        DTO.FieldFormatRegEx fieldformatregex;
        public FieldFormatRegEx(DTO.FieldFormatRegEx dto )
        {
              fieldformatregex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.FieldFormatRegEx>(fieldformatregex);

        }

        public DTO.FieldFormatRegEx DTO
        {
            get
            {
             return fieldformatregex;
            }
            set
            {
                fieldformatregex = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.fieldformatregex.Id; }
			set
			{
			    if (value == this.fieldformatregex.Id) return;
				this.fieldformatregex.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Field is required")]
       
public int FieldId
		{ 
		    get { return this.fieldformatregex.FieldId; }
			set
			{
			    if (value == this.fieldformatregex.FieldId) return;
				this.fieldformatregex.FieldId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FieldId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegEx is required")]
       
public int RegExId
		{ 
		    get { return this.fieldformatregex.RegExId; }
			set
			{
			    if (value == this.fieldformatregex.RegExId) return;
				this.fieldformatregex.RegExId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegExId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ReplacementRegEx is required")]
       
public int ReplacementRegExId
		{ 
		    get { return this.fieldformatregex.ReplacementRegExId; }
			set
			{
			    if (value == this.fieldformatregex.ReplacementRegExId) return;
				this.fieldformatregex.ReplacementRegExId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReplacementRegExId");
			}
		}
     

       private Fields _Field;
        public  Fields Field
		{
		    get
               { 
                  if (this.fieldformatregex != null)
                   {
                       if (_Field != null)
                       {
                           if (this.fieldformatregex.Field !=
                               _Field.DTO)
                           {
                                if (this.fieldformatregex.Field  != null)
                               _Field = new Fields(this.fieldformatregex.Field);
                           }
                       }
                       else
                       {
                             if (this.fieldformatregex.Field  != null)
                           _Field = new Fields(this.fieldformatregex.Field);
                       }
                   }


             //       if (_Field != null) return _Field;
                       
             //       var i = new Fields(){TrackingState = TrackingState.Added};
			//		//if (this.fieldformatregex.Field == null) Debugger.Break();
			//		if (this.fieldformatregex.Field != null)
            //        {
            //           i. = this.fieldformatregex.Field;
            //        }
            //        else
            //        {
            //            this.fieldformatregex.Field = i.;
             //       }
                           
            //        _Field = i;
                     
                    return _Field;
               }
			set
			{
			    if (value == _Field) return;
                _Field = value;
                if(value != null)
                     this.fieldformatregex.Field = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Field");
			}
		}
        

       private RegularExpressions _RegEx;
        public  RegularExpressions RegEx
		{
		    get
               { 
                  if (this.fieldformatregex != null)
                   {
                       if (_RegEx != null)
                       {
                           if (this.fieldformatregex.RegEx !=
                               _RegEx.DTO)
                           {
                                if (this.fieldformatregex.RegEx  != null)
                               _RegEx = new RegularExpressions(this.fieldformatregex.RegEx);
                           }
                       }
                       else
                       {
                             if (this.fieldformatregex.RegEx  != null)
                           _RegEx = new RegularExpressions(this.fieldformatregex.RegEx);
                       }
                   }


             //       if (_RegEx != null) return _RegEx;
                       
             //       var i = new RegularExpressions(){TrackingState = TrackingState.Added};
			//		//if (this.fieldformatregex.RegEx == null) Debugger.Break();
			//		if (this.fieldformatregex.RegEx != null)
            //        {
            //           i. = this.fieldformatregex.RegEx;
            //        }
            //        else
            //        {
            //            this.fieldformatregex.RegEx = i.;
             //       }
                           
            //        _RegEx = i;
                     
                    return _RegEx;
               }
			set
			{
			    if (value == _RegEx) return;
                _RegEx = value;
                if(value != null)
                     this.fieldformatregex.RegEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("RegEx");
			}
		}
        

       private RegularExpressions _ReplacementRegEx;
        public  RegularExpressions ReplacementRegEx
		{
		    get
               { 
                  if (this.fieldformatregex != null)
                   {
                       if (_ReplacementRegEx != null)
                       {
                           if (this.fieldformatregex.ReplacementRegEx !=
                               _ReplacementRegEx.DTO)
                           {
                                if (this.fieldformatregex.ReplacementRegEx  != null)
                               _ReplacementRegEx = new RegularExpressions(this.fieldformatregex.ReplacementRegEx);
                           }
                       }
                       else
                       {
                             if (this.fieldformatregex.ReplacementRegEx  != null)
                           _ReplacementRegEx = new RegularExpressions(this.fieldformatregex.ReplacementRegEx);
                       }
                   }


             //       if (_ReplacementRegEx != null) return _ReplacementRegEx;
                       
             //       var i = new RegularExpressions(){TrackingState = TrackingState.Added};
			//		//if (this.fieldformatregex.ReplacementRegEx == null) Debugger.Break();
			//		if (this.fieldformatregex.ReplacementRegEx != null)
            //        {
            //           i. = this.fieldformatregex.ReplacementRegEx;
            //        }
            //        else
            //        {
            //            this.fieldformatregex.ReplacementRegEx = i.;
             //       }
                           
            //        _ReplacementRegEx = i;
                     
                    return _ReplacementRegEx;
               }
			set
			{
			    if (value == _ReplacementRegEx) return;
                _ReplacementRegEx = value;
                if(value != null)
                     this.fieldformatregex.ReplacementRegEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("ReplacementRegEx");
			}
		}
        


        ChangeTrackingCollection<DTO.FieldFormatRegEx> _changeTracker;    
        public ChangeTrackingCollection<DTO.FieldFormatRegEx> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


