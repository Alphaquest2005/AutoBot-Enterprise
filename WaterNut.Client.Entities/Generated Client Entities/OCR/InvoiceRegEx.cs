// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using OCR.Client.DTO;


using Core.Common.Validation;

namespace OCR.Client.Entities
{
       public partial class InvoiceRegEx: BaseEntity<InvoiceRegEx>
    {
        DTO.InvoiceRegEx invoiceregex;
        public InvoiceRegEx(DTO.InvoiceRegEx dto )
        {
              invoiceregex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.InvoiceRegEx>(invoiceregex);

        }

        public DTO.InvoiceRegEx DTO
        {
            get
            {
             return invoiceregex;
            }
            set
            {
                invoiceregex = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.invoiceregex.Id; }
			set
			{
			    if (value == this.invoiceregex.Id) return;
				this.invoiceregex.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Invoice is required")]
       
public int InvoiceId
		{ 
		    get { return this.invoiceregex.InvoiceId; }
			set
			{
			    if (value == this.invoiceregex.InvoiceId) return;
				this.invoiceregex.InvoiceId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RegEx is required")]
       
public int RegExId
		{ 
		    get { return this.invoiceregex.RegExId; }
			set
			{
			    if (value == this.invoiceregex.RegExId) return;
				this.invoiceregex.RegExId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegExId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ReplacementRegEx is required")]
       
public int ReplacementRegExId
		{ 
		    get { return this.invoiceregex.ReplacementRegExId; }
			set
			{
			    if (value == this.invoiceregex.ReplacementRegExId) return;
				this.invoiceregex.ReplacementRegExId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReplacementRegExId");
			}
		}
     

       private Invoices _OCR_Invoices;
        public  Invoices OCR_Invoices
		{
		    get
               { 
                  if (this.invoiceregex != null)
                   {
                       if (_OCR_Invoices != null)
                       {
                           if (this.invoiceregex.OCR_Invoices !=
                               _OCR_Invoices.DTO)
                           {
                                if (this.invoiceregex.OCR_Invoices  != null)
                               _OCR_Invoices = new Invoices(this.invoiceregex.OCR_Invoices);
                           }
                       }
                       else
                       {
                             if (this.invoiceregex.OCR_Invoices  != null)
                           _OCR_Invoices = new Invoices(this.invoiceregex.OCR_Invoices);
                       }
                   }


             //       if (_OCR_Invoices != null) return _OCR_Invoices;
                       
             //       var i = new Invoices(){TrackingState = TrackingState.Added};
			//		//if (this.invoiceregex.OCR_Invoices == null) Debugger.Break();
			//		if (this.invoiceregex.OCR_Invoices != null)
            //        {
            //           i. = this.invoiceregex.OCR_Invoices;
            //        }
            //        else
            //        {
            //            this.invoiceregex.OCR_Invoices = i.;
             //       }
                           
            //        _OCR_Invoices = i;
                     
                    return _OCR_Invoices;
               }
			set
			{
			    if (value == _OCR_Invoices) return;
                _OCR_Invoices = value;
                if(value != null)
                     this.invoiceregex.OCR_Invoices = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OCR_Invoices");
			}
		}
        

       private RegularExpressions _RegEx;
        public  RegularExpressions RegEx
		{
		    get
               { 
                  if (this.invoiceregex != null)
                   {
                       if (_RegEx != null)
                       {
                           if (this.invoiceregex.RegEx !=
                               _RegEx.DTO)
                           {
                                if (this.invoiceregex.RegEx  != null)
                               _RegEx = new RegularExpressions(this.invoiceregex.RegEx);
                           }
                       }
                       else
                       {
                             if (this.invoiceregex.RegEx  != null)
                           _RegEx = new RegularExpressions(this.invoiceregex.RegEx);
                       }
                   }


             //       if (_RegEx != null) return _RegEx;
                       
             //       var i = new RegularExpressions(){TrackingState = TrackingState.Added};
			//		//if (this.invoiceregex.RegEx == null) Debugger.Break();
			//		if (this.invoiceregex.RegEx != null)
            //        {
            //           i. = this.invoiceregex.RegEx;
            //        }
            //        else
            //        {
            //            this.invoiceregex.RegEx = i.;
             //       }
                           
            //        _RegEx = i;
                     
                    return _RegEx;
               }
			set
			{
			    if (value == _RegEx) return;
                _RegEx = value;
                if(value != null)
                     this.invoiceregex.RegEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("RegEx");
			}
		}
        

       private RegularExpressions _ReplacementRegEx;
        public  RegularExpressions ReplacementRegEx
		{
		    get
               { 
                  if (this.invoiceregex != null)
                   {
                       if (_ReplacementRegEx != null)
                       {
                           if (this.invoiceregex.ReplacementRegEx !=
                               _ReplacementRegEx.DTO)
                           {
                                if (this.invoiceregex.ReplacementRegEx  != null)
                               _ReplacementRegEx = new RegularExpressions(this.invoiceregex.ReplacementRegEx);
                           }
                       }
                       else
                       {
                             if (this.invoiceregex.ReplacementRegEx  != null)
                           _ReplacementRegEx = new RegularExpressions(this.invoiceregex.ReplacementRegEx);
                       }
                   }


             //       if (_ReplacementRegEx != null) return _ReplacementRegEx;
                       
             //       var i = new RegularExpressions(){TrackingState = TrackingState.Added};
			//		//if (this.invoiceregex.ReplacementRegEx == null) Debugger.Break();
			//		if (this.invoiceregex.ReplacementRegEx != null)
            //        {
            //           i. = this.invoiceregex.ReplacementRegEx;
            //        }
            //        else
            //        {
            //            this.invoiceregex.ReplacementRegEx = i.;
             //       }
                           
            //        _ReplacementRegEx = i;
                     
                    return _ReplacementRegEx;
               }
			set
			{
			    if (value == _ReplacementRegEx) return;
                _ReplacementRegEx = value;
                if(value != null)
                     this.invoiceregex.ReplacementRegEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("ReplacementRegEx");
			}
		}
        


        ChangeTrackingCollection<DTO.InvoiceRegEx> _changeTracker;    
        public ChangeTrackingCollection<DTO.InvoiceRegEx> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


