// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class AsycudaDocumentSet_Attachments: BaseEntity<AsycudaDocumentSet_Attachments>
    {
        DTO.AsycudaDocumentSet_Attachments asycudadocumentset_attachments;
        public AsycudaDocumentSet_Attachments(DTO.AsycudaDocumentSet_Attachments dto )
        {
              asycudadocumentset_attachments = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocumentSet_Attachments>(asycudadocumentset_attachments);

        }

        public DTO.AsycudaDocumentSet_Attachments DTO
        {
            get
            {
             return asycudadocumentset_attachments;
            }
            set
            {
                asycudadocumentset_attachments = value;
            }
        }
        


       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.asycudadocumentset_attachments.Id; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.Id) return;
				this.asycudadocumentset_attachments.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Attachment is required")]
       
public int AttachmentId
		{ 
		    get { return this.asycudadocumentset_attachments.AttachmentId; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.AttachmentId) return;
				this.asycudadocumentset_attachments.AttachmentId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AttachmentId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.asycudadocumentset_attachments.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.AsycudaDocumentSetId) return;
				this.asycudadocumentset_attachments.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DocumentSpecific is required")]
       
public bool DocumentSpecific
		{ 
		    get { return this.asycudadocumentset_attachments.DocumentSpecific; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.DocumentSpecific) return;
				this.asycudadocumentset_attachments.DocumentSpecific = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentSpecific");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "FileDate is required")]
       
public System.DateTime FileDate
		{ 
		    get { return this.asycudadocumentset_attachments.FileDate; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.FileDate) return;
				this.asycudadocumentset_attachments.FileDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileDate");
			}
		}
     

       
       
public Nullable<int> FileTypeId
		{ 
		    get { return this.asycudadocumentset_attachments.FileTypeId; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.FileTypeId) return;
				this.asycudadocumentset_attachments.FileTypeId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileTypeId");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "EmailId has a max length of 255 letters ")]
public string EmailId
		{ 
		    get { return this.asycudadocumentset_attachments.EmailId; }
			set
			{
			    if (value == this.asycudadocumentset_attachments.EmailId) return;
				this.asycudadocumentset_attachments.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     

       private Attachments _Attachments;
        public  Attachments Attachments
		{
		    get
               { 
                  if (this.asycudadocumentset_attachments != null)
                   {
                       if (_Attachments != null)
                       {
                           if (this.asycudadocumentset_attachments.Attachments !=
                               _Attachments.DTO)
                           {
                                if (this.asycudadocumentset_attachments.Attachments  != null)
                               _Attachments = new Attachments(this.asycudadocumentset_attachments.Attachments);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset_attachments.Attachments  != null)
                           _Attachments = new Attachments(this.asycudadocumentset_attachments.Attachments);
                       }
                   }


             //       if (_Attachments != null) return _Attachments;
                       
             //       var i = new Attachments(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset_attachments.Attachments == null) Debugger.Break();
			//		if (this.asycudadocumentset_attachments.Attachments != null)
            //        {
            //           i. = this.asycudadocumentset_attachments.Attachments;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset_attachments.Attachments = i.;
             //       }
                           
            //        _Attachments = i;
                     
                    return _Attachments;
               }
			set
			{
			    if (value == _Attachments) return;
                _Attachments = value;
                if(value != null)
                     this.asycudadocumentset_attachments.Attachments = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Attachments");
			}
		}
        

       private AsycudaDocumentSetEx _AsycudaDocumentSetEx;
        public  AsycudaDocumentSetEx AsycudaDocumentSetEx
		{
		    get
               { 
                  if (this.asycudadocumentset_attachments != null)
                   {
                       if (_AsycudaDocumentSetEx != null)
                       {
                           if (this.asycudadocumentset_attachments.AsycudaDocumentSetEx !=
                               _AsycudaDocumentSetEx.DTO)
                           {
                                if (this.asycudadocumentset_attachments.AsycudaDocumentSetEx  != null)
                               _AsycudaDocumentSetEx = new AsycudaDocumentSetEx(this.asycudadocumentset_attachments.AsycudaDocumentSetEx);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset_attachments.AsycudaDocumentSetEx  != null)
                           _AsycudaDocumentSetEx = new AsycudaDocumentSetEx(this.asycudadocumentset_attachments.AsycudaDocumentSetEx);
                       }
                   }


             //       if (_AsycudaDocumentSetEx != null) return _AsycudaDocumentSetEx;
                       
             //       var i = new AsycudaDocumentSetEx(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset_attachments.AsycudaDocumentSetEx == null) Debugger.Break();
			//		if (this.asycudadocumentset_attachments.AsycudaDocumentSetEx != null)
            //        {
            //           i. = this.asycudadocumentset_attachments.AsycudaDocumentSetEx;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset_attachments.AsycudaDocumentSetEx = i.;
             //       }
                           
            //        _AsycudaDocumentSetEx = i;
                     
                    return _AsycudaDocumentSetEx;
               }
			set
			{
			    if (value == _AsycudaDocumentSetEx) return;
                _AsycudaDocumentSetEx = value;
                if(value != null)
                     this.asycudadocumentset_attachments.AsycudaDocumentSetEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentSetEx");
			}
		}
        

       private FileTypes _FileTypes;
        public  FileTypes FileTypes
		{
		    get
               { 
                  if (this.asycudadocumentset_attachments != null)
                   {
                       if (_FileTypes != null)
                       {
                           if (this.asycudadocumentset_attachments.FileTypes !=
                               _FileTypes.DTO)
                           {
                                if (this.asycudadocumentset_attachments.FileTypes  != null)
                               _FileTypes = new FileTypes(this.asycudadocumentset_attachments.FileTypes);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset_attachments.FileTypes  != null)
                           _FileTypes = new FileTypes(this.asycudadocumentset_attachments.FileTypes);
                       }
                   }


             //       if (_FileTypes != null) return _FileTypes;
                       
             //       var i = new FileTypes(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset_attachments.FileTypes == null) Debugger.Break();
			//		if (this.asycudadocumentset_attachments.FileTypes != null)
            //        {
            //           i. = this.asycudadocumentset_attachments.FileTypes;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset_attachments.FileTypes = i.;
             //       }
                           
            //        _FileTypes = i;
                     
                    return _FileTypes;
               }
			set
			{
			    if (value == _FileTypes) return;
                _FileTypes = value;
                if(value != null)
                     this.asycudadocumentset_attachments.FileTypes = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("FileTypes");
			}
		}
        

        ObservableCollection<AttachmentLog> _AttachmentLog = null;
        public  ObservableCollection<AttachmentLog> AttachmentLog
		{
            
		    get 
				{ 
					if(_AttachmentLog != null) return _AttachmentLog;
					//if (this.asycudadocumentset_attachments.AttachmentLog == null) Debugger.Break();
					if(this.asycudadocumentset_attachments.AttachmentLog != null)
					{
						_AttachmentLog = new ObservableCollection<AttachmentLog>(this.asycudadocumentset_attachments.AttachmentLog.Select(x => new AttachmentLog(x)));
					}
					
						_AttachmentLog.CollectionChanged += AttachmentLog_CollectionChanged; 
					
					return _AttachmentLog; 
				}
			set
			{
			    if (Equals(value, _AttachmentLog)) return;
				if (value != null)
					this.asycudadocumentset_attachments.AttachmentLog = new ChangeTrackingCollection<DTO.AttachmentLog>(value.Select(x => x.DTO).ToList());
                _AttachmentLog = value;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				if (_AttachmentLog != null)
				_AttachmentLog.CollectionChanged += AttachmentLog_CollectionChanged;               
				NotifyPropertyChanged("AttachmentLog");
			}
		}
        
        void AttachmentLog_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Add:
                    foreach (AttachmentLog itm in e.NewItems)
                    {
                        if (itm != null)
                        asycudadocumentset_attachments.AttachmentLog.Add(itm.DTO);
                    }
                    if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                    break;
                case NotifyCollectionChangedAction.Remove:
                    foreach (AttachmentLog itm in e.OldItems)
                    {
                        if (itm != null)
                        asycudadocumentset_attachments.AttachmentLog.Remove(itm.DTO);
                    }
					if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                    break;
                
            }
        }

       private Emails _Emails;
        public  Emails Emails
		{
		    get
               { 
                  if (this.asycudadocumentset_attachments != null)
                   {
                       if (_Emails != null)
                       {
                           if (this.asycudadocumentset_attachments.Emails !=
                               _Emails.DTO)
                           {
                                if (this.asycudadocumentset_attachments.Emails  != null)
                               _Emails = new Emails(this.asycudadocumentset_attachments.Emails);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentset_attachments.Emails  != null)
                           _Emails = new Emails(this.asycudadocumentset_attachments.Emails);
                       }
                   }


             //       if (_Emails != null) return _Emails;
                       
             //       var i = new Emails(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentset_attachments.Emails == null) Debugger.Break();
			//		if (this.asycudadocumentset_attachments.Emails != null)
            //        {
            //           i. = this.asycudadocumentset_attachments.Emails;
            //        }
            //        else
            //        {
            //            this.asycudadocumentset_attachments.Emails = i.;
             //       }
                           
            //        _Emails = i;
                     
                    return _Emails;
               }
			set
			{
			    if (value == _Emails) return;
                _Emails = value;
                if(value != null)
                     this.asycudadocumentset_attachments.Emails = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Emails");
			}
		}
        


        ChangeTrackingCollection<DTO.AsycudaDocumentSet_Attachments> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocumentSet_Attachments> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


