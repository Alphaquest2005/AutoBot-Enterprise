// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class AsycudaDocument_Attachments: BaseEntity<AsycudaDocument_Attachments>
    {
        DTO.AsycudaDocument_Attachments asycudadocument_attachments;
        public AsycudaDocument_Attachments(DTO.AsycudaDocument_Attachments dto )
        {
              asycudadocument_attachments = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocument_Attachments>(asycudadocument_attachments);

        }

        public DTO.AsycudaDocument_Attachments DTO
        {
            get
            {
             return asycudadocument_attachments;
            }
            set
            {
                asycudadocument_attachments = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.asycudadocument_attachments.Id; }
			set
			{
			    if (value == this.asycudadocument_attachments.Id) return;
				this.asycudadocument_attachments.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Attachment is required")]
       
public int AttachmentId
		{ 
		    get { return this.asycudadocument_attachments.AttachmentId; }
			set
			{
			    if (value == this.asycudadocument_attachments.AttachmentId) return;
				this.asycudadocument_attachments.AttachmentId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AttachmentId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocument is required")]
       
public int AsycudaDocumentId
		{ 
		    get { return this.asycudadocument_attachments.AsycudaDocumentId; }
			set
			{
			    if (value == this.asycudadocument_attachments.AsycudaDocumentId) return;
				this.asycudadocument_attachments.AsycudaDocumentId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentId");
			}
		}
     

       private Attachments _Attachments;
        public  Attachments Attachments
		{
		    get
               { 
                  if (this.asycudadocument_attachments != null)
                   {
                       if (_Attachments != null)
                       {
                           if (this.asycudadocument_attachments.Attachments !=
                               _Attachments.DTO)
                           {
                                if (this.asycudadocument_attachments.Attachments  != null)
                               _Attachments = new Attachments(this.asycudadocument_attachments.Attachments);
                           }
                       }
                       else
                       {
                             if (this.asycudadocument_attachments.Attachments  != null)
                           _Attachments = new Attachments(this.asycudadocument_attachments.Attachments);
                       }
                   }


             //       if (_Attachments != null) return _Attachments;
                       
             //       var i = new Attachments(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocument_attachments.Attachments == null) Debugger.Break();
			//		if (this.asycudadocument_attachments.Attachments != null)
            //        {
            //           i. = this.asycudadocument_attachments.Attachments;
            //        }
            //        else
            //        {
            //            this.asycudadocument_attachments.Attachments = i.;
             //       }
                           
            //        _Attachments = i;
                     
                    return _Attachments;
               }
			set
			{
			    if (value == _Attachments) return;
                _Attachments = value;
                if(value != null)
                     this.asycudadocument_attachments.Attachments = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Attachments");
			}
		}
        


        ChangeTrackingCollection<DTO.AsycudaDocument_Attachments> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocument_Attachments> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


