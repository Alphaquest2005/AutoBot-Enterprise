// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class SessionSchedule: BaseEntity<SessionSchedule>
    {
        DTO.SessionSchedule sessionschedule;
        public SessionSchedule(DTO.SessionSchedule dto )
        {
              sessionschedule = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.SessionSchedule>(sessionschedule);

        }

        public DTO.SessionSchedule DTO
        {
            get
            {
             return sessionschedule;
            }
            set
            {
                sessionschedule = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.sessionschedule.Id; }
			set
			{
			    if (value == this.sessionschedule.Id) return;
				this.sessionschedule.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Sesseion is required")]
       
public int SesseionId
		{ 
		    get { return this.sessionschedule.SesseionId; }
			set
			{
			    if (value == this.sessionschedule.SesseionId) return;
				this.sessionschedule.SesseionId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SesseionId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RunDateTime is required")]
       
public System.DateTime RunDateTime
		{ 
		    get { return this.sessionschedule.RunDateTime; }
			set
			{
			    if (value == this.sessionschedule.RunDateTime) return;
				this.sessionschedule.RunDateTime = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RunDateTime");
			}
		}
     

       
       
public Nullable<int> ApplicationSettingId
		{ 
		    get { return this.sessionschedule.ApplicationSettingId; }
			set
			{
			    if (value == this.sessionschedule.ApplicationSettingId) return;
				this.sessionschedule.ApplicationSettingId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingId");
			}
		}
     

       
       
public Nullable<int> ActionId
		{ 
		    get { return this.sessionschedule.ActionId; }
			set
			{
			    if (value == this.sessionschedule.ActionId) return;
				this.sessionschedule.ActionId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ActionId");
			}
		}
     

       
       
public Nullable<int> ParameterSetId
		{ 
		    get { return this.sessionschedule.ParameterSetId; }
			set
			{
			    if (value == this.sessionschedule.ParameterSetId) return;
				this.sessionschedule.ParameterSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ParameterSetId");
			}
		}
     

       private Sessions _Sessions;
        public  Sessions Sessions
		{
		    get
               { 
                  if (this.sessionschedule != null)
                   {
                       if (_Sessions != null)
                       {
                           if (this.sessionschedule.Sessions !=
                               _Sessions.DTO)
                           {
                                if (this.sessionschedule.Sessions  != null)
                               _Sessions = new Sessions(this.sessionschedule.Sessions);
                           }
                       }
                       else
                       {
                             if (this.sessionschedule.Sessions  != null)
                           _Sessions = new Sessions(this.sessionschedule.Sessions);
                       }
                   }


             //       if (_Sessions != null) return _Sessions;
                       
             //       var i = new Sessions(){TrackingState = TrackingState.Added};
			//		//if (this.sessionschedule.Sessions == null) Debugger.Break();
			//		if (this.sessionschedule.Sessions != null)
            //        {
            //           i. = this.sessionschedule.Sessions;
            //        }
            //        else
            //        {
            //            this.sessionschedule.Sessions = i.;
             //       }
                           
            //        _Sessions = i;
                     
                    return _Sessions;
               }
			set
			{
			    if (value == _Sessions) return;
                _Sessions = value;
                if(value != null)
                     this.sessionschedule.Sessions = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Sessions");
			}
		}
        

       private ParameterSet _ParameterSet;
        public  ParameterSet ParameterSet
		{
		    get
               { 
                  if (this.sessionschedule != null)
                   {
                       if (_ParameterSet != null)
                       {
                           if (this.sessionschedule.ParameterSet !=
                               _ParameterSet.DTO)
                           {
                                if (this.sessionschedule.ParameterSet  != null)
                               _ParameterSet = new ParameterSet(this.sessionschedule.ParameterSet);
                           }
                       }
                       else
                       {
                             if (this.sessionschedule.ParameterSet  != null)
                           _ParameterSet = new ParameterSet(this.sessionschedule.ParameterSet);
                       }
                   }


             //       if (_ParameterSet != null) return _ParameterSet;
                       
             //       var i = new ParameterSet(){TrackingState = TrackingState.Added};
			//		//if (this.sessionschedule.ParameterSet == null) Debugger.Break();
			//		if (this.sessionschedule.ParameterSet != null)
            //        {
            //           i. = this.sessionschedule.ParameterSet;
            //        }
            //        else
            //        {
            //            this.sessionschedule.ParameterSet = i.;
             //       }
                           
            //        _ParameterSet = i;
                     
                    return _ParameterSet;
               }
			set
			{
			    if (value == _ParameterSet) return;
                _ParameterSet = value;
                if(value != null)
                     this.sessionschedule.ParameterSet = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("ParameterSet");
			}
		}
        


        ChangeTrackingCollection<DTO.SessionSchedule> _changeTracker;    
        public ChangeTrackingCollection<DTO.SessionSchedule> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


