// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class EmailMappingActions: BaseEntity<EmailMappingActions>
    {
        DTO.EmailMappingActions emailmappingactions;
        public EmailMappingActions(DTO.EmailMappingActions dto )
        {
              emailmappingactions = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.EmailMappingActions>(emailmappingactions);

        }

        public DTO.EmailMappingActions DTO
        {
            get
            {
             return emailmappingactions;
            }
            set
            {
                emailmappingactions = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.emailmappingactions.Id; }
			set
			{
			    if (value == this.emailmappingactions.Id) return;
				this.emailmappingactions.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EmailMapping is required")]
       
public int EmailMappingId
		{ 
		    get { return this.emailmappingactions.EmailMappingId; }
			set
			{
			    if (value == this.emailmappingactions.EmailMappingId) return;
				this.emailmappingactions.EmailMappingId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailMappingId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Action is required")]
       
public int ActionId
		{ 
		    get { return this.emailmappingactions.ActionId; }
			set
			{
			    if (value == this.emailmappingactions.ActionId) return;
				this.emailmappingactions.ActionId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ActionId");
			}
		}
     

       private Actions _Actions;
        public  Actions Actions
		{
		    get
               { 
                  if (this.emailmappingactions != null)
                   {
                       if (_Actions != null)
                       {
                           if (this.emailmappingactions.Actions !=
                               _Actions.DTO)
                           {
                                if (this.emailmappingactions.Actions  != null)
                               _Actions = new Actions(this.emailmappingactions.Actions);
                           }
                       }
                       else
                       {
                             if (this.emailmappingactions.Actions  != null)
                           _Actions = new Actions(this.emailmappingactions.Actions);
                       }
                   }


             //       if (_Actions != null) return _Actions;
                       
             //       var i = new Actions(){TrackingState = TrackingState.Added};
			//		//if (this.emailmappingactions.Actions == null) Debugger.Break();
			//		if (this.emailmappingactions.Actions != null)
            //        {
            //           i. = this.emailmappingactions.Actions;
            //        }
            //        else
            //        {
            //            this.emailmappingactions.Actions = i.;
             //       }
                           
            //        _Actions = i;
                     
                    return _Actions;
               }
			set
			{
			    if (value == _Actions) return;
                _Actions = value;
                if(value != null)
                     this.emailmappingactions.Actions = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("Actions");
			}
		}
        

       private EmailMapping _EmailMapping;
        public  EmailMapping EmailMapping
		{
		    get
               { 
                  if (this.emailmappingactions != null)
                   {
                       if (_EmailMapping != null)
                       {
                           if (this.emailmappingactions.EmailMapping !=
                               _EmailMapping.DTO)
                           {
                                if (this.emailmappingactions.EmailMapping  != null)
                               _EmailMapping = new EmailMapping(this.emailmappingactions.EmailMapping);
                           }
                       }
                       else
                       {
                             if (this.emailmappingactions.EmailMapping  != null)
                           _EmailMapping = new EmailMapping(this.emailmappingactions.EmailMapping);
                       }
                   }


             //       if (_EmailMapping != null) return _EmailMapping;
                       
             //       var i = new EmailMapping(){TrackingState = TrackingState.Added};
			//		//if (this.emailmappingactions.EmailMapping == null) Debugger.Break();
			//		if (this.emailmappingactions.EmailMapping != null)
            //        {
            //           i. = this.emailmappingactions.EmailMapping;
            //        }
            //        else
            //        {
            //            this.emailmappingactions.EmailMapping = i.;
             //       }
                           
            //        _EmailMapping = i;
                     
                    return _EmailMapping;
               }
			set
			{
			    if (value == _EmailMapping) return;
                _EmailMapping = value;
                if(value != null)
                     this.emailmappingactions.EmailMapping = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("EmailMapping");
			}
		}
        


        ChangeTrackingCollection<DTO.EmailMappingActions> _changeTracker;    
        public ChangeTrackingCollection<DTO.EmailMappingActions> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


