// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_DiscrepanciesErrors: BaseEntity<TODO_DiscrepanciesErrors>
    {
        DTO.TODO_DiscrepanciesErrors todo_discrepancieserrors;
        public TODO_DiscrepanciesErrors(DTO.TODO_DiscrepanciesErrors dto )
        {
              todo_discrepancieserrors = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_DiscrepanciesErrors>(todo_discrepancieserrors);

        }

        public DTO.TODO_DiscrepanciesErrors DTO
        {
            get
            {
             return todo_discrepancieserrors;
            }
            set
            {
                todo_discrepancieserrors = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "Entrydatadetailsid is required")]
       [NumberValidationAttribute]
public int Entrydatadetailsid
		{ 
		    get { return this.todo_discrepancieserrors.Entrydatadetailsid; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Entrydatadetailsid) return;
				this.todo_discrepancieserrors.Entrydatadetailsid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Entrydatadetailsid");
			}
		}
     

       
       
public Nullable<int> AsycudaDocumentSetId
		{ 
		    get { return this.todo_discrepancieserrors.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.todo_discrepancieserrors.AsycudaDocumentSetId) return;
				this.todo_discrepancieserrors.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Type has a max length of 50 letters ")]
public string Type
		{ 
		    get { return this.todo_discrepancieserrors.Type; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Type) return;
				this.todo_discrepancieserrors.Type = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Type");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceDate is required")]
       
public System.DateTime InvoiceDate
		{ 
		    get { return this.todo_discrepancieserrors.InvoiceDate; }
			set
			{
			    if (value == this.todo_discrepancieserrors.InvoiceDate) return;
				this.todo_discrepancieserrors.InvoiceDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     

       
       
public Nullable<System.DateTime> EffectiveDate
		{ 
		    get { return this.todo_discrepancieserrors.EffectiveDate; }
			set
			{
			    if (value == this.todo_discrepancieserrors.EffectiveDate) return;
				this.todo_discrepancieserrors.EffectiveDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EffectiveDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceNo is required")]
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.todo_discrepancieserrors.InvoiceNo; }
			set
			{
			    if (value == this.todo_discrepancieserrors.InvoiceNo) return;
				this.todo_discrepancieserrors.InvoiceNo = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LineNumber
		{ 
		    get { return this.todo_discrepancieserrors.LineNumber; }
			set
			{
			    if (value == this.todo_discrepancieserrors.LineNumber) return;
				this.todo_discrepancieserrors.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.todo_discrepancieserrors.ItemNumber; }
			set
			{
			    if (value == this.todo_discrepancieserrors.ItemNumber) return;
				this.todo_discrepancieserrors.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemDescription is required")]
       
                
                [MaxLength(255, ErrorMessage = "ItemDescription has a max length of 255 letters ")]
public string ItemDescription
		{ 
		    get { return this.todo_discrepancieserrors.ItemDescription; }
			set
			{
			    if (value == this.todo_discrepancieserrors.ItemDescription) return;
				this.todo_discrepancieserrors.ItemDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemDescription");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> InvoiceQty
		{ 
		    get { return this.todo_discrepancieserrors.InvoiceQty; }
			set
			{
			    if (value == this.todo_discrepancieserrors.InvoiceQty) return;
				this.todo_discrepancieserrors.InvoiceQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceQty");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> ReceivedQty
		{ 
		    get { return this.todo_discrepancieserrors.ReceivedQty; }
			set
			{
			    if (value == this.todo_discrepancieserrors.ReceivedQty) return;
				this.todo_discrepancieserrors.ReceivedQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReceivedQty");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Quantity is required")]
       [NumberValidationAttribute]
public double Quantity
		{ 
		    get { return this.todo_discrepancieserrors.Quantity; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Quantity) return;
				this.todo_discrepancieserrors.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Cost is required")]
       [NumberValidationAttribute]
public double Cost
		{ 
		    get { return this.todo_discrepancieserrors.Cost; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Cost) return;
				this.todo_discrepancieserrors.Cost = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Cost");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PreviousCNumber has a max length of 50 letters ")]
public string PreviousCNumber
		{ 
		    get { return this.todo_discrepancieserrors.PreviousCNumber; }
			set
			{
			    if (value == this.todo_discrepancieserrors.PreviousCNumber) return;
				this.todo_discrepancieserrors.PreviousCNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousCNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PreviousInvoiceNumber has a max length of 50 letters ")]
public string PreviousInvoiceNumber
		{ 
		    get { return this.todo_discrepancieserrors.PreviousInvoiceNumber; }
			set
			{
			    if (value == this.todo_discrepancieserrors.PreviousInvoiceNumber) return;
				this.todo_discrepancieserrors.PreviousInvoiceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousInvoiceNumber");
			}
		}
     

       
       
                
                [MaxLength(306, ErrorMessage = "Status has a max length of 306 letters ")]
public string Status
		{ 
		    get { return this.todo_discrepancieserrors.Status; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Status) return;
				this.todo_discrepancieserrors.Status = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Status");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DutyFreePaid is required")]
       
                
                [MaxLength(9, ErrorMessage = "DutyFreePaid has a max length of 9 letters ")]
public string DutyFreePaid
		{ 
		    get { return this.todo_discrepancieserrors.DutyFreePaid; }
			set
			{
			    if (value == this.todo_discrepancieserrors.DutyFreePaid) return;
				this.todo_discrepancieserrors.DutyFreePaid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DutyFreePaid");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.todo_discrepancieserrors.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_discrepancieserrors.ApplicationSettingsId) return;
				this.todo_discrepancieserrors.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Comment has a max length of 255 letters ")]
public string Comment
		{ 
		    get { return this.todo_discrepancieserrors.Comment; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Comment) return;
				this.todo_discrepancieserrors.Comment = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Comment");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Subject is required")]
       
                
                
public string Subject
		{ 
		    get { return this.todo_discrepancieserrors.Subject; }
			set
			{
			    if (value == this.todo_discrepancieserrors.Subject) return;
				this.todo_discrepancieserrors.Subject = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Subject");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EmailDate is required")]
       
public System.DateTime EmailDate
		{ 
		    get { return this.todo_discrepancieserrors.EmailDate; }
			set
			{
			    if (value == this.todo_discrepancieserrors.EmailDate) return;
				this.todo_discrepancieserrors.EmailDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailDate");
			}
		}
     

       
       
public Nullable<int> EmailId
		{ 
		    get { return this.todo_discrepancieserrors.EmailId; }
			set
			{
			    if (value == this.todo_discrepancieserrors.EmailId) return;
				this.todo_discrepancieserrors.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_DiscrepanciesErrors> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_DiscrepanciesErrors> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


