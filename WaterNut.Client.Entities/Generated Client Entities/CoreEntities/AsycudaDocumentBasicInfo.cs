// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class AsycudaDocumentBasicInfo: BaseEntity<AsycudaDocumentBasicInfo>
    {
        DTO.AsycudaDocumentBasicInfo asycudadocumentbasicinfo;
        public AsycudaDocumentBasicInfo(DTO.AsycudaDocumentBasicInfo dto )
        {
              asycudadocumentbasicinfo = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocumentBasicInfo>(asycudadocumentbasicinfo);

        }

        public DTO.AsycudaDocumentBasicInfo DTO
        {
            get
            {
             return asycudadocumentbasicinfo;
            }
            set
            {
                asycudadocumentbasicinfo = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.asycudadocumentbasicinfo.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.AsycudaDocumentSetId) return;
				this.asycudadocumentbasicinfo.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ASYCUDA_ is required")]
       
public int ASYCUDA_Id
		{ 
		    get { return this.asycudadocumentbasicinfo.ASYCUDA_Id; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.ASYCUDA_Id) return;
				this.asycudadocumentbasicinfo.ASYCUDA_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ASYCUDA_Id");
			}
		}
     

       
       
                
                [MaxLength(40, ErrorMessage = "DocumentType has a max length of 40 letters ")]
public string DocumentType
		{ 
		    get { return this.asycudadocumentbasicinfo.DocumentType; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.DocumentType) return;
				this.asycudadocumentbasicinfo.DocumentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentType");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "CNumber has a max length of 20 letters ")]
public string CNumber
		{ 
		    get { return this.asycudadocumentbasicinfo.CNumber; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.CNumber) return;
				this.asycudadocumentbasicinfo.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
                
                [MaxLength(5, ErrorMessage = "Extended_customs_procedure has a max length of 5 letters ")]
public string Extended_customs_procedure
		{ 
		    get { return this.asycudadocumentbasicinfo.Extended_customs_procedure; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.Extended_customs_procedure) return;
				this.asycudadocumentbasicinfo.Extended_customs_procedure = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Extended_customs_procedure");
			}
		}
     

       
       
                
                [MaxLength(5, ErrorMessage = "National_customs_procedure has a max length of 5 letters ")]
public string National_customs_procedure
		{ 
		    get { return this.asycudadocumentbasicinfo.National_customs_procedure; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.National_customs_procedure) return;
				this.asycudadocumentbasicinfo.National_customs_procedure = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("National_customs_procedure");
			}
		}
     

       
       
public Nullable<System.DateTime> RegistrationDate
		{ 
		    get { return this.asycudadocumentbasicinfo.RegistrationDate; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.RegistrationDate) return;
				this.asycudadocumentbasicinfo.RegistrationDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       
       
public Nullable<System.DateTime> AssessmentDate
		{ 
		    get { return this.asycudadocumentbasicinfo.AssessmentDate; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.AssessmentDate) return;
				this.asycudadocumentbasicinfo.AssessmentDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AssessmentDate");
			}
		}
     

       
       
public Nullable<System.DateTime> ExpiryDate
		{ 
		    get { return this.asycudadocumentbasicinfo.ExpiryDate; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.ExpiryDate) return;
				this.asycudadocumentbasicinfo.ExpiryDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ExpiryDate");
			}
		}
     

       
       
                
                [MaxLength(30, ErrorMessage = "Reference has a max length of 30 letters ")]
public string Reference
		{ 
		    get { return this.asycudadocumentbasicinfo.Reference; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.Reference) return;
				this.asycudadocumentbasicinfo.Reference = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Reference");
			}
		}
     

       
       
public Nullable<bool> IsManuallyAssessed
		{ 
		    get { return this.asycudadocumentbasicinfo.IsManuallyAssessed; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.IsManuallyAssessed) return;
				this.asycudadocumentbasicinfo.IsManuallyAssessed = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsManuallyAssessed");
			}
		}
     

       
       
public Nullable<bool> Cancelled
		{ 
		    get { return this.asycudadocumentbasicinfo.Cancelled; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.Cancelled) return;
				this.asycudadocumentbasicinfo.Cancelled = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Cancelled");
			}
		}
     

       
       
public Nullable<bool> DoNotAllocate
		{ 
		    get { return this.asycudadocumentbasicinfo.DoNotAllocate; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.DoNotAllocate) return;
				this.asycudadocumentbasicinfo.DoNotAllocate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DoNotAllocate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.asycudadocumentbasicinfo.ApplicationSettingsId; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.ApplicationSettingsId) return;
				this.asycudadocumentbasicinfo.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ImportComplete is required")]
       
public bool ImportComplete
		{ 
		    get { return this.asycudadocumentbasicinfo.ImportComplete; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.ImportComplete) return;
				this.asycudadocumentbasicinfo.ImportComplete = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ImportComplete");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Customs_Procedure is required")]
       
public int Customs_ProcedureId
		{ 
		    get { return this.asycudadocumentbasicinfo.Customs_ProcedureId; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.Customs_ProcedureId) return;
				this.asycudadocumentbasicinfo.Customs_ProcedureId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Customs_ProcedureId");
			}
		}
     

       
       
                
                [MaxLength(11, ErrorMessage = "CustomsProcedure has a max length of 11 letters ")]
public string CustomsProcedure
		{ 
		    get { return this.asycudadocumentbasicinfo.CustomsProcedure; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.CustomsProcedure) return;
				this.asycudadocumentbasicinfo.CustomsProcedure = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CustomsProcedure");
			}
		}
     

       
       
                
                [MaxLength(500, ErrorMessage = "SourceFileName has a max length of 500 letters ")]
public string SourceFileName
		{ 
		    get { return this.asycudadocumentbasicinfo.SourceFileName; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.SourceFileName) return;
				this.asycudadocumentbasicinfo.SourceFileName = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SourceFileName");
			}
		}
     

       
       
public Nullable<bool> SubmitToCustoms
		{ 
		    get { return this.asycudadocumentbasicinfo.SubmitToCustoms; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.SubmitToCustoms) return;
				this.asycudadocumentbasicinfo.SubmitToCustoms = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("SubmitToCustoms");
			}
		}
     

       
       
public Nullable<bool> IsPaid
		{ 
		    get { return this.asycudadocumentbasicinfo.IsPaid; }
			set
			{
			    if (value == this.asycudadocumentbasicinfo.IsPaid) return;
				this.asycudadocumentbasicinfo.IsPaid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsPaid");
			}
		}
     


        ChangeTrackingCollection<DTO.AsycudaDocumentBasicInfo> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocumentBasicInfo> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


