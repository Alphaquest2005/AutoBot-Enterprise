// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_LicenseToXML: BaseEntity<TODO_LicenseToXML>
    {
        DTO.TODO_LicenseToXML todo_licensetoxml;
        public TODO_LicenseToXML(DTO.TODO_LicenseToXML dto )
        {
              todo_licensetoxml = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_LicenseToXML>(todo_licensetoxml);

        }

        public DTO.TODO_LicenseToXML DTO
        {
            get
            {
             return todo_licensetoxml;
            }
            set
            {
                todo_licensetoxml = value;
            }
        }
       
       
                
                [MaxLength(52, ErrorMessage = "TariffCode has a max length of 52 letters ")]
public string TariffCode
		{ 
		    get { return this.todo_licensetoxml.TariffCode; }
			set
			{
			    if (value == this.todo_licensetoxml.TariffCode) return;
				this.todo_licensetoxml.TariffCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TariffCode");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> Quantity
		{ 
		    get { return this.todo_licensetoxml.Quantity; }
			set
			{
			    if (value == this.todo_licensetoxml.Quantity) return;
				this.todo_licensetoxml.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.todo_licensetoxml.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.todo_licensetoxml.AsycudaDocumentSetId) return;
				this.todo_licensetoxml.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.todo_licensetoxml.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_licensetoxml.ApplicationSettingsId) return;
				this.todo_licensetoxml.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Declarant_Reference_Number has a max length of 50 letters ")]
public string Declarant_Reference_Number
		{ 
		    get { return this.todo_licensetoxml.Declarant_Reference_Number; }
			set
			{
			    if (value == this.todo_licensetoxml.Declarant_Reference_Number) return;
				this.todo_licensetoxml.Declarant_Reference_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Declarant_Reference_Number");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Country_of_origin_code has a max length of 50 letters ")]
public string Country_of_origin_code
		{ 
		    get { return this.todo_licensetoxml.Country_of_origin_code; }
			set
			{
			    if (value == this.todo_licensetoxml.Country_of_origin_code) return;
				this.todo_licensetoxml.Country_of_origin_code = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Country_of_origin_code");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "UOM has a max length of 50 letters ")]
public string UOM
		{ 
		    get { return this.todo_licensetoxml.UOM; }
			set
			{
			    if (value == this.todo_licensetoxml.UOM) return;
				this.todo_licensetoxml.UOM = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("UOM");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData is required")]
       
                
                [MaxLength(50, ErrorMessage = "EntryDataId has a max length of 50 letters ")]
public string EntryDataId
		{ 
		    get { return this.todo_licensetoxml.EntryDataId; }
			set
			{
			    if (value == this.todo_licensetoxml.EntryDataId) return;
				this.todo_licensetoxml.EntryDataId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "LicenseDescription has a max length of 50 letters ")]
public string LicenseDescription
		{ 
		    get { return this.todo_licensetoxml.LicenseDescription; }
			set
			{
			    if (value == this.todo_licensetoxml.LicenseDescription) return;
				this.todo_licensetoxml.LicenseDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LicenseDescription");
			}
		}
     

       
       
                
                
public string sourcefile
		{ 
		    get { return this.todo_licensetoxml.sourcefile; }
			set
			{
			    if (value == this.todo_licensetoxml.sourcefile) return;
				this.todo_licensetoxml.sourcefile = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("sourcefile");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_LicenseToXML> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_LicenseToXML> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


