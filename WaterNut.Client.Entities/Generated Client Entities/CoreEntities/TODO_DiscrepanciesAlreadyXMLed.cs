// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_DiscrepanciesAlreadyXMLed: BaseEntity<TODO_DiscrepanciesAlreadyXMLed>
    {
        DTO.TODO_DiscrepanciesAlreadyXMLed todo_discrepanciesalreadyxmled;
        public TODO_DiscrepanciesAlreadyXMLed(DTO.TODO_DiscrepanciesAlreadyXMLed dto )
        {
              todo_discrepanciesalreadyxmled = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_DiscrepanciesAlreadyXMLed>(todo_discrepanciesalreadyxmled);

        }

        public DTO.TODO_DiscrepanciesAlreadyXMLed DTO
        {
            get
            {
             return todo_discrepanciesalreadyxmled;
            }
            set
            {
                todo_discrepanciesalreadyxmled = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "EntryDataDetails is required")]
       
public int EntryDataDetailsId
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.EntryDataDetailsId; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.EntryDataDetailsId) return;
				this.todo_discrepanciesalreadyxmled.EntryDataDetailsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDetailsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.ApplicationSettingsId) return;
				this.todo_discrepanciesalreadyxmled.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.AsycudaDocumentSetId) return;
				this.todo_discrepanciesalreadyxmled.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
public Nullable<bool> IsClassified
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.IsClassified; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.IsClassified) return;
				this.todo_discrepanciesalreadyxmled.IsClassified = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsClassified");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "AdjustmentType has a max length of 50 letters ")]
public string AdjustmentType
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.AdjustmentType; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.AdjustmentType) return;
				this.todo_discrepanciesalreadyxmled.AdjustmentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AdjustmentType");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceNo is required")]
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.InvoiceNo; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.InvoiceNo) return;
				this.todo_discrepanciesalreadyxmled.InvoiceNo = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> InvoiceQty
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.InvoiceQty; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.InvoiceQty) return;
				this.todo_discrepanciesalreadyxmled.InvoiceQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceQty");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> ReceivedQty
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.ReceivedQty; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.ReceivedQty) return;
				this.todo_discrepanciesalreadyxmled.ReceivedQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReceivedQty");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceDate is required")]
       
public System.DateTime InvoiceDate
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.InvoiceDate; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.InvoiceDate) return;
				this.todo_discrepanciesalreadyxmled.InvoiceDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.ItemNumber; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.ItemNumber) return;
				this.todo_discrepanciesalreadyxmled.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Status has a max length of 50 letters ")]
public string Status
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Status; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Status) return;
				this.todo_discrepanciesalreadyxmled.Status = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Status");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Declarant_Reference_Number has a max length of 50 letters ")]
public string Declarant_Reference_Number
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Declarant_Reference_Number; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Declarant_Reference_Number) return;
				this.todo_discrepanciesalreadyxmled.Declarant_Reference_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Declarant_Reference_Number");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "pCNumber has a max length of 20 letters ")]
public string pCNumber
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.pCNumber; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.pCNumber) return;
				this.todo_discrepanciesalreadyxmled.pCNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("pCNumber");
			}
		}
     

       
       
public Nullable<System.DateTime> RegistrationDate
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.RegistrationDate; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.RegistrationDate) return;
				this.todo_discrepanciesalreadyxmled.RegistrationDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       
       
                
                [MaxLength(30, ErrorMessage = "ReferenceNumber has a max length of 30 letters ")]
public string ReferenceNumber
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.ReferenceNumber; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.ReferenceNumber) return;
				this.todo_discrepanciesalreadyxmled.ReferenceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReferenceNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PreviousCNumber has a max length of 50 letters ")]
public string PreviousCNumber
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.PreviousCNumber; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.PreviousCNumber) return;
				this.todo_discrepanciesalreadyxmled.PreviousCNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousCNumber");
			}
		}
     

       
       
                
                [MaxLength(40, ErrorMessage = "DocumentType has a max length of 40 letters ")]
public string DocumentType
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.DocumentType; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.DocumentType) return;
				this.todo_discrepanciesalreadyxmled.DocumentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentType");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Type has a max length of 50 letters ")]
public string Type
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Type; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Type) return;
				this.todo_discrepanciesalreadyxmled.Type = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Type");
			}
		}
     

       
       
public Nullable<System.DateTime> EffectiveDate
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.EffectiveDate; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.EffectiveDate) return;
				this.todo_discrepanciesalreadyxmled.EffectiveDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EffectiveDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemDescription is required")]
       
                
                [MaxLength(255, ErrorMessage = "ItemDescription has a max length of 255 letters ")]
public string ItemDescription
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.ItemDescription; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.ItemDescription) return;
				this.todo_discrepanciesalreadyxmled.ItemDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemDescription");
			}
		}
     

       
       
public Nullable<int> EmailId
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.EmailId; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.EmailId) return;
				this.todo_discrepanciesalreadyxmled.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     

       
       
public Nullable<int> FileTypeId
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.FileTypeId; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.FileTypeId) return;
				this.todo_discrepanciesalreadyxmled.FileTypeId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileTypeId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Quantity is required")]
       [NumberValidationAttribute]
public double Quantity
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Quantity; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Quantity) return;
				this.todo_discrepanciesalreadyxmled.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Cost is required")]
       [NumberValidationAttribute]
public double Cost
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Cost; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Cost) return;
				this.todo_discrepanciesalreadyxmled.Cost = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Cost");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Subject is required")]
       
                
                
public string Subject
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Subject; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Subject) return;
				this.todo_discrepanciesalreadyxmled.Subject = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Subject");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EmailDate is required")]
       
public System.DateTime EmailDate
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.EmailDate; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.EmailDate) return;
				this.todo_discrepanciesalreadyxmled.EmailDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailDate");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LineNumber
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.LineNumber; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.LineNumber) return;
				this.todo_discrepanciesalreadyxmled.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "PreviousInvoiceNumber has a max length of 50 letters ")]
public string PreviousInvoiceNumber
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.PreviousInvoiceNumber; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.PreviousInvoiceNumber) return;
				this.todo_discrepanciesalreadyxmled.PreviousInvoiceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousInvoiceNumber");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Comment has a max length of 255 letters ")]
public string Comment
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.Comment; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.Comment) return;
				this.todo_discrepanciesalreadyxmled.Comment = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Comment");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DutyFreePaid is required")]
       
                
                [MaxLength(9, ErrorMessage = "DutyFreePaid has a max length of 9 letters ")]
public string DutyFreePaid
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.DutyFreePaid; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.DutyFreePaid) return;
				this.todo_discrepanciesalreadyxmled.DutyFreePaid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DutyFreePaid");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData_ is required")]
       
public int EntryData_Id
		{ 
		    get { return this.todo_discrepanciesalreadyxmled.EntryData_Id; }
			set
			{
			    if (value == this.todo_discrepanciesalreadyxmled.EntryData_Id) return;
				this.todo_discrepanciesalreadyxmled.EntryData_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryData_Id");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_DiscrepanciesAlreadyXMLed> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_DiscrepanciesAlreadyXMLed> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


