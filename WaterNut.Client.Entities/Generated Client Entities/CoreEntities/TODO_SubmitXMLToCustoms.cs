// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_SubmitXMLToCustoms: BaseEntity<TODO_SubmitXMLToCustoms>
    {
        DTO.TODO_SubmitXMLToCustoms todo_submitxmltocustoms;
        public TODO_SubmitXMLToCustoms(DTO.TODO_SubmitXMLToCustoms dto )
        {
              todo_submitxmltocustoms = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_SubmitXMLToCustoms>(todo_submitxmltocustoms);

        }

        public DTO.TODO_SubmitXMLToCustoms DTO
        {
            get
            {
             return todo_submitxmltocustoms;
            }
            set
            {
                todo_submitxmltocustoms = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.todo_submitxmltocustoms.Id; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.Id) return;
				this.todo_submitxmltocustoms.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "CNumber has a max length of 50 letters ")]
public string CNumber
		{ 
		    get { return this.todo_submitxmltocustoms.CNumber; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.CNumber) return;
				this.todo_submitxmltocustoms.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
public Nullable<System.DateTime> RegistrationDate
		{ 
		    get { return this.todo_submitxmltocustoms.RegistrationDate; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.RegistrationDate) return;
				this.todo_submitxmltocustoms.RegistrationDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "ReferenceNumber has a max length of 50 letters ")]
public string ReferenceNumber
		{ 
		    get { return this.todo_submitxmltocustoms.ReferenceNumber; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.ReferenceNumber) return;
				this.todo_submitxmltocustoms.ReferenceNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReferenceNumber");
			}
		}
     

       
       
public Nullable<int> AsycudaDocumentSetId
		{ 
		    get { return this.todo_submitxmltocustoms.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.AsycudaDocumentSetId) return;
				this.todo_submitxmltocustoms.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "DocumentType has a max length of 20 letters ")]
public string DocumentType
		{ 
		    get { return this.todo_submitxmltocustoms.DocumentType; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.DocumentType) return;
				this.todo_submitxmltocustoms.DocumentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentType");
			}
		}
     

       
       
public Nullable<System.DateTime> AssessmentDate
		{ 
		    get { return this.todo_submitxmltocustoms.AssessmentDate; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.AssessmentDate) return;
				this.todo_submitxmltocustoms.AssessmentDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AssessmentDate");
			}
		}
     

       
       
public Nullable<int> ApplicationSettingsId
		{ 
		    get { return this.todo_submitxmltocustoms.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.ApplicationSettingsId) return;
				this.todo_submitxmltocustoms.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       
public Nullable<int> EmailId
		{ 
		    get { return this.todo_submitxmltocustoms.EmailId; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.EmailId) return;
				this.todo_submitxmltocustoms.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ASYCUDA_ is required")]
       
public int ASYCUDA_Id
		{ 
		    get { return this.todo_submitxmltocustoms.ASYCUDA_Id; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.ASYCUDA_Id) return;
				this.todo_submitxmltocustoms.ASYCUDA_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ASYCUDA_Id");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "FilePath has a max length of 255 letters ")]
public string FilePath
		{ 
		    get { return this.todo_submitxmltocustoms.FilePath; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.FilePath) return;
				this.todo_submitxmltocustoms.FilePath = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FilePath");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Status has a max length of 50 letters ")]
public string Status
		{ 
		    get { return this.todo_submitxmltocustoms.Status; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.Status) return;
				this.todo_submitxmltocustoms.Status = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Status");
			}
		}
     

       
       
                
                [MaxLength(11, ErrorMessage = "CustomsProcedure has a max length of 11 letters ")]
public string CustomsProcedure
		{ 
		    get { return this.todo_submitxmltocustoms.CustomsProcedure; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.CustomsProcedure) return;
				this.todo_submitxmltocustoms.CustomsProcedure = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CustomsProcedure");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ToBePaid is required")]
       
                
                [MaxLength(3, ErrorMessage = "ToBePaid has a max length of 3 letters ")]
public string ToBePaid
		{ 
		    get { return this.todo_submitxmltocustoms.ToBePaid; }
			set
			{
			    if (value == this.todo_submitxmltocustoms.ToBePaid) return;
				this.todo_submitxmltocustoms.ToBePaid = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ToBePaid");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_SubmitXMLToCustoms> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_SubmitXMLToCustoms> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


