// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_ERRReport_EntryDataDetails: BaseEntity<TODO_ERRReport_EntryDataDetails>
    {
        DTO.TODO_ERRReport_EntryDataDetails todo_errreport_entrydatadetails;
        public TODO_ERRReport_EntryDataDetails(DTO.TODO_ERRReport_EntryDataDetails dto )
        {
              todo_errreport_entrydatadetails = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_ERRReport_EntryDataDetails>(todo_errreport_entrydatadetails);

        }

        public DTO.TODO_ERRReport_EntryDataDetails DTO
        {
            get
            {
             return todo_errreport_entrydatadetails;
            }
            set
            {
                todo_errreport_entrydatadetails = value;
            }
        }
       
       
public Nullable<int> ApplicationSettingsId
		{ 
		    get { return this.todo_errreport_entrydatadetails.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.ApplicationSettingsId) return;
				this.todo_errreport_entrydatadetails.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceNo is required")]
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.todo_errreport_entrydatadetails.InvoiceNo; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.InvoiceNo) return;
				this.todo_errreport_entrydatadetails.InvoiceNo = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceDate is required")]
       
public System.DateTime InvoiceDate
		{ 
		    get { return this.todo_errreport_entrydatadetails.InvoiceDate; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.InvoiceDate) return;
				this.todo_errreport_entrydatadetails.InvoiceDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Type has a max length of 50 letters ")]
public string Type
		{ 
		    get { return this.todo_errreport_entrydatadetails.Type; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.Type) return;
				this.todo_errreport_entrydatadetails.Type = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Type");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> LineNumber
		{ 
		    get { return this.todo_errreport_entrydatadetails.LineNumber; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.LineNumber) return;
				this.todo_errreport_entrydatadetails.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.todo_errreport_entrydatadetails.ItemNumber; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.ItemNumber) return;
				this.todo_errreport_entrydatadetails.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemDescription is required")]
       
                
                [MaxLength(255, ErrorMessage = "ItemDescription has a max length of 255 letters ")]
public string ItemDescription
		{ 
		    get { return this.todo_errreport_entrydatadetails.ItemDescription; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.ItemDescription) return;
				this.todo_errreport_entrydatadetails.ItemDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemDescription");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Error is required")]
       
                
                [MaxLength(21, ErrorMessage = "Error has a max length of 21 letters ")]
public string Error
		{ 
		    get { return this.todo_errreport_entrydatadetails.Error; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.Error) return;
				this.todo_errreport_entrydatadetails.Error = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Error");
			}
		}
     

       
       
                
                [MaxLength(128, ErrorMessage = "Info has a max length of 128 letters ")]
public string Info
		{ 
		    get { return this.todo_errreport_entrydatadetails.Info; }
			set
			{
			    if (value == this.todo_errreport_entrydatadetails.Info) return;
				this.todo_errreport_entrydatadetails.Info = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Info");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_ERRReport_EntryDataDetails> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_ERRReport_EntryDataDetails> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


