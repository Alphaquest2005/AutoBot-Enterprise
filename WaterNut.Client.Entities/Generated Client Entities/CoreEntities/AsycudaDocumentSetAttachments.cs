// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class AsycudaDocumentSetAttachments: BaseEntity<AsycudaDocumentSetAttachments>
    {
        DTO.AsycudaDocumentSetAttachments asycudadocumentsetattachments;
        public AsycudaDocumentSetAttachments(DTO.AsycudaDocumentSetAttachments dto )
        {
              asycudadocumentsetattachments = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocumentSetAttachments>(asycudadocumentsetattachments);

        }

        public DTO.AsycudaDocumentSetAttachments DTO
        {
            get
            {
             return asycudadocumentsetattachments;
            }
            set
            {
                asycudadocumentsetattachments = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.asycudadocumentsetattachments.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.AsycudaDocumentSetId) return;
				this.asycudadocumentsetattachments.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Declarant_Reference_Number has a max length of 50 letters ")]
public string Declarant_Reference_Number
		{ 
		    get { return this.asycudadocumentsetattachments.Declarant_Reference_Number; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.Declarant_Reference_Number) return;
				this.asycudadocumentsetattachments.Declarant_Reference_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Declarant_Reference_Number");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Description has a max length of 50 letters ")]
public string Description
		{ 
		    get { return this.asycudadocumentsetattachments.Description; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.Description) return;
				this.asycudadocumentsetattachments.Description = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Description");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "FilePath is required")]
       
                
                [MaxLength(255, ErrorMessage = "FilePath has a max length of 255 letters ")]
public string FilePath
		{ 
		    get { return this.asycudadocumentsetattachments.FilePath; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.FilePath) return;
				this.asycudadocumentsetattachments.FilePath = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FilePath");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "DocumentCode has a max length of 50 letters ")]
public string DocumentCode
		{ 
		    get { return this.asycudadocumentsetattachments.DocumentCode; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.DocumentCode) return;
				this.asycudadocumentsetattachments.DocumentCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentCode");
			}
		}
     

       
       
                
                [MaxLength(255, ErrorMessage = "Reference has a max length of 255 letters ")]
public string Reference
		{ 
		    get { return this.asycudadocumentsetattachments.Reference; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.Reference) return;
				this.asycudadocumentsetattachments.Reference = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Reference");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.asycudadocumentsetattachments.Id; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.Id) return;
				this.asycudadocumentsetattachments.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       
       
public Nullable<int> FileTypeId
		{ 
		    get { return this.asycudadocumentsetattachments.FileTypeId; }
			set
			{
			    if (value == this.asycudadocumentsetattachments.FileTypeId) return;
				this.asycudadocumentsetattachments.FileTypeId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileTypeId");
			}
		}
     

       private FileTypes _FileTypes;
        public  FileTypes FileTypes
		{
		    get
               { 
                  if (this.asycudadocumentsetattachments != null)
                   {
                       if (_FileTypes != null)
                       {
                           if (this.asycudadocumentsetattachments.FileTypes !=
                               _FileTypes.DTO)
                           {
                                if (this.asycudadocumentsetattachments.FileTypes  != null)
                               _FileTypes = new FileTypes(this.asycudadocumentsetattachments.FileTypes);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentsetattachments.FileTypes  != null)
                           _FileTypes = new FileTypes(this.asycudadocumentsetattachments.FileTypes);
                       }
                   }


             //       if (_FileTypes != null) return _FileTypes;
                       
             //       var i = new FileTypes(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentsetattachments.FileTypes == null) Debugger.Break();
			//		if (this.asycudadocumentsetattachments.FileTypes != null)
            //        {
            //           i. = this.asycudadocumentsetattachments.FileTypes;
            //        }
            //        else
            //        {
            //            this.asycudadocumentsetattachments.FileTypes = i.;
             //       }
                           
            //        _FileTypes = i;
                     
                    return _FileTypes;
               }
			set
			{
			    if (value == _FileTypes) return;
                _FileTypes = value;
                if(value != null)
                     this.asycudadocumentsetattachments.FileTypes = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("FileTypes");
			}
		}
        

       private AsycudaDocumentSetEx _AsycudaDocumentSetEx;
        public  AsycudaDocumentSetEx AsycudaDocumentSetEx
		{
		    get
               { 
                  if (this.asycudadocumentsetattachments != null)
                   {
                       if (_AsycudaDocumentSetEx != null)
                       {
                           if (this.asycudadocumentsetattachments.AsycudaDocumentSetEx !=
                               _AsycudaDocumentSetEx.DTO)
                           {
                                if (this.asycudadocumentsetattachments.AsycudaDocumentSetEx  != null)
                               _AsycudaDocumentSetEx = new AsycudaDocumentSetEx(this.asycudadocumentsetattachments.AsycudaDocumentSetEx);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentsetattachments.AsycudaDocumentSetEx  != null)
                           _AsycudaDocumentSetEx = new AsycudaDocumentSetEx(this.asycudadocumentsetattachments.AsycudaDocumentSetEx);
                       }
                   }


             //       if (_AsycudaDocumentSetEx != null) return _AsycudaDocumentSetEx;
                       
             //       var i = new AsycudaDocumentSetEx(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentsetattachments.AsycudaDocumentSetEx == null) Debugger.Break();
			//		if (this.asycudadocumentsetattachments.AsycudaDocumentSetEx != null)
            //        {
            //           i. = this.asycudadocumentsetattachments.AsycudaDocumentSetEx;
            //        }
            //        else
            //        {
            //            this.asycudadocumentsetattachments.AsycudaDocumentSetEx = i.;
             //       }
                           
            //        _AsycudaDocumentSetEx = i;
                     
                    return _AsycudaDocumentSetEx;
               }
			set
			{
			    if (value == _AsycudaDocumentSetEx) return;
                _AsycudaDocumentSetEx = value;
                if(value != null)
                     this.asycudadocumentsetattachments.AsycudaDocumentSetEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentSetEx");
			}
		}
        


        ChangeTrackingCollection<DTO.AsycudaDocumentSetAttachments> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocumentSetAttachments> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


