// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class AsycudaDocumentItemEntryDataDetails: BaseEntity<AsycudaDocumentItemEntryDataDetails>
    {
        DTO.AsycudaDocumentItemEntryDataDetails asycudadocumentitementrydatadetails;
        public AsycudaDocumentItemEntryDataDetails(DTO.AsycudaDocumentItemEntryDataDetails dto )
        {
              asycudadocumentitementrydatadetails = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.AsycudaDocumentItemEntryDataDetails>(asycudadocumentitementrydatadetails);

        }

        public DTO.AsycudaDocumentItemEntryDataDetails DTO
        {
            get
            {
             return asycudadocumentitementrydatadetails;
            }
            set
            {
                asycudadocumentitementrydatadetails = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "EntryDataDetails is required")]
       
public int EntryDataDetailsId
		{ 
		    get { return this.asycudadocumentitementrydatadetails.EntryDataDetailsId; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.EntryDataDetailsId) return;
				this.asycudadocumentitementrydatadetails.EntryDataDetailsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDetailsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Item_ is required")]
       
public int Item_Id
		{ 
		    get { return this.asycudadocumentitementrydatadetails.Item_Id; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.Item_Id) return;
				this.asycudadocumentitementrydatadetails.Item_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Item_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.asycudadocumentitementrydatadetails.ItemNumber; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.ItemNumber) return;
				this.asycudadocumentitementrydatadetails.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       
       
                
                [MaxLength(101, ErrorMessage = "key has a max length of 101 letters ")]
public string key
		{ 
		    get { return this.asycudadocumentitementrydatadetails.key; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.key) return;
				this.asycudadocumentitementrydatadetails.key = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("key");
			}
		}
     

       
       
                
                [MaxLength(40, ErrorMessage = "DocumentType has a max length of 40 letters ")]
public string DocumentType
		{ 
		    get { return this.asycudadocumentitementrydatadetails.DocumentType; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.DocumentType) return;
				this.asycudadocumentitementrydatadetails.DocumentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DocumentType");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> Quantity
		{ 
		    get { return this.asycudadocumentitementrydatadetails.Quantity; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.Quantity) return;
				this.asycudadocumentitementrydatadetails.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ImportComplete is required")]
       
public bool ImportComplete
		{ 
		    get { return this.asycudadocumentitementrydatadetails.ImportComplete; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.ImportComplete) return;
				this.asycudadocumentitementrydatadetails.ImportComplete = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ImportComplete");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "EntryData_ is required")]
       
public int EntryData_Id
		{ 
		    get { return this.asycudadocumentitementrydatadetails.EntryData_Id; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.EntryData_Id) return;
				this.asycudadocumentitementrydatadetails.EntryData_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryData_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "CustomsProcedure is required")]
       
                
                [MaxLength(11, ErrorMessage = "CustomsProcedure has a max length of 11 letters ")]
public string CustomsProcedure
		{ 
		    get { return this.asycudadocumentitementrydatadetails.CustomsProcedure; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.CustomsProcedure) return;
				this.asycudadocumentitementrydatadetails.CustomsProcedure = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CustomsProcedure");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Asycuda_id is required")]
       [NumberValidationAttribute]
public int Asycuda_id
		{ 
		    get { return this.asycudadocumentitementrydatadetails.Asycuda_id; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.Asycuda_id) return;
				this.asycudadocumentitementrydatadetails.Asycuda_id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Asycuda_id");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "EntryDataType has a max length of 50 letters ")]
public string EntryDataType
		{ 
		    get { return this.asycudadocumentitementrydatadetails.EntryDataType; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.EntryDataType) return;
				this.asycudadocumentitementrydatadetails.EntryDataType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataType");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.asycudadocumentitementrydatadetails.ApplicationSettingsId; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.ApplicationSettingsId) return;
				this.asycudadocumentitementrydatadetails.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.asycudadocumentitementrydatadetails.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.AsycudaDocumentSetId) return;
				this.asycudadocumentitementrydatadetails.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
                
                [MaxLength(20, ErrorMessage = "CNumber has a max length of 20 letters ")]
public string CNumber
		{ 
		    get { return this.asycudadocumentitementrydatadetails.CNumber; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.CNumber) return;
				this.asycudadocumentitementrydatadetails.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "LineNumber is required")]
       [NumberValidationAttribute]
public int LineNumber
		{ 
		    get { return this.asycudadocumentitementrydatadetails.LineNumber; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.LineNumber) return;
				this.asycudadocumentitementrydatadetails.LineNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "CustomsOperation has a max length of 50 letters ")]
public string CustomsOperation
		{ 
		    get { return this.asycudadocumentitementrydatadetails.CustomsOperation; }
			set
			{
			    if (value == this.asycudadocumentitementrydatadetails.CustomsOperation) return;
				this.asycudadocumentitementrydatadetails.CustomsOperation = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CustomsOperation");
			}
		}
     

       private AsycudaDocumentItem _AsycudaDocumentItem;
        public  AsycudaDocumentItem AsycudaDocumentItem
		{
		    get
               { 
                  if (this.asycudadocumentitementrydatadetails != null)
                   {
                       if (_AsycudaDocumentItem != null)
                       {
                           if (this.asycudadocumentitementrydatadetails.AsycudaDocumentItem !=
                               _AsycudaDocumentItem.DTO)
                           {
                                if (this.asycudadocumentitementrydatadetails.AsycudaDocumentItem  != null)
                               _AsycudaDocumentItem = new AsycudaDocumentItem(this.asycudadocumentitementrydatadetails.AsycudaDocumentItem);
                           }
                       }
                       else
                       {
                             if (this.asycudadocumentitementrydatadetails.AsycudaDocumentItem  != null)
                           _AsycudaDocumentItem = new AsycudaDocumentItem(this.asycudadocumentitementrydatadetails.AsycudaDocumentItem);
                       }
                   }


             //       if (_AsycudaDocumentItem != null) return _AsycudaDocumentItem;
                       
             //       var i = new AsycudaDocumentItem(){TrackingState = TrackingState.Added};
			//		//if (this.asycudadocumentitementrydatadetails.AsycudaDocumentItem == null) Debugger.Break();
			//		if (this.asycudadocumentitementrydatadetails.AsycudaDocumentItem != null)
            //        {
            //           i. = this.asycudadocumentitementrydatadetails.AsycudaDocumentItem;
            //        }
            //        else
            //        {
            //            this.asycudadocumentitementrydatadetails.AsycudaDocumentItem = i.;
             //       }
                           
            //        _AsycudaDocumentItem = i;
                     
                    return _AsycudaDocumentItem;
               }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
                _AsycudaDocumentItem = value;
                if(value != null)
                     this.asycudadocumentitementrydatadetails.AsycudaDocumentItem = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentItem");
			}
		}
        


        ChangeTrackingCollection<DTO.AsycudaDocumentItemEntryDataDetails> _changeTracker;    
        public ChangeTrackingCollection<DTO.AsycudaDocumentItemEntryDataDetails> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


