// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_CreateEx9: BaseEntity<TODO_CreateEx9>
    {
        DTO.TODO_CreateEx9 todo_createex9;
        public TODO_CreateEx9(DTO.TODO_CreateEx9 dto )
        {
              todo_createex9 = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_CreateEx9>(todo_createex9);

        }

        public DTO.TODO_CreateEx9 DTO
        {
            get
            {
             return todo_createex9;
            }
            set
            {
                todo_createex9 = value;
            }
        }
       
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.todo_createex9.ItemNumber; }
			set
			{
			    if (value == this.todo_createex9.ItemNumber) return;
				this.todo_createex9.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.todo_createex9.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_createex9.ApplicationSettingsId) return;
				this.todo_createex9.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> QtyAllocated
		{ 
		    get { return this.todo_createex9.QtyAllocated; }
			set
			{
			    if (value == this.todo_createex9.QtyAllocated) return;
				this.todo_createex9.QtyAllocated = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QtyAllocated");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> pQuantity
		{ 
		    get { return this.todo_createex9.pQuantity; }
			set
			{
			    if (value == this.todo_createex9.pQuantity) return;
				this.todo_createex9.pQuantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("pQuantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "PreviousItem_ is required")]
       
public int PreviousItem_Id
		{ 
		    get { return this.todo_createex9.PreviousItem_Id; }
			set
			{
			    if (value == this.todo_createex9.PreviousItem_Id) return;
				this.todo_createex9.PreviousItem_Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PreviousItem_Id");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_CreateEx9> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_CreateEx9> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


