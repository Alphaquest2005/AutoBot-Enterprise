// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class LicenceSummary: BaseEntity<LicenceSummary>
    {
        DTO.LicenceSummary licencesummary;
        public LicenceSummary(DTO.LicenceSummary dto )
        {
              licencesummary = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.LicenceSummary>(licencesummary);

        }

        public DTO.LicenceSummary DTO
        {
            get
            {
             return licencesummary;
            }
            set
            {
                licencesummary = value;
            }
        }
       
       
                
                [MaxLength(20, ErrorMessage = "TariffCode has a max length of 20 letters ")]
public string TariffCode
		{ 
		    get { return this.licencesummary.TariffCode; }
			set
			{
			    if (value == this.licencesummary.TariffCode) return;
				this.licencesummary.TariffCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TariffCode");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> Quantity
		{ 
		    get { return this.licencesummary.Quantity; }
			set
			{
			    if (value == this.licencesummary.Quantity) return;
				this.licencesummary.Quantity = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Quantity");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> Total
		{ 
		    get { return this.licencesummary.Total; }
			set
			{
			    if (value == this.licencesummary.Total) return;
				this.licencesummary.Total = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Total");
			}
		}
     

       
       
                
                [MaxLength(999, ErrorMessage = "TariffCodeDescription has a max length of 999 letters ")]
public string TariffCodeDescription
		{ 
		    get { return this.licencesummary.TariffCodeDescription; }
			set
			{
			    if (value == this.licencesummary.TariffCodeDescription) return;
				this.licencesummary.TariffCodeDescription = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("TariffCodeDescription");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.licencesummary.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.licencesummary.AsycudaDocumentSetId) return;
				this.licencesummary.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "RowNumber is required")]
       
public long RowNumber
		{ 
		    get { return this.licencesummary.RowNumber; }
			set
			{
			    if (value == this.licencesummary.RowNumber) return;
				this.licencesummary.RowNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RowNumber");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.licencesummary.ApplicationSettingsId; }
			set
			{
			    if (value == this.licencesummary.ApplicationSettingsId) return;
				this.licencesummary.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       private AsycudaDocumentSetEx _AsycudaDocumentSetEx;
        public  AsycudaDocumentSetEx AsycudaDocumentSetEx
		{
		    get
               { 
                  if (this.licencesummary != null)
                   {
                       if (_AsycudaDocumentSetEx != null)
                       {
                           if (this.licencesummary.AsycudaDocumentSetEx !=
                               _AsycudaDocumentSetEx.DTO)
                           {
                                if (this.licencesummary.AsycudaDocumentSetEx  != null)
                               _AsycudaDocumentSetEx = new AsycudaDocumentSetEx(this.licencesummary.AsycudaDocumentSetEx);
                           }
                       }
                       else
                       {
                             if (this.licencesummary.AsycudaDocumentSetEx  != null)
                           _AsycudaDocumentSetEx = new AsycudaDocumentSetEx(this.licencesummary.AsycudaDocumentSetEx);
                       }
                   }


             //       if (_AsycudaDocumentSetEx != null) return _AsycudaDocumentSetEx;
                       
             //       var i = new AsycudaDocumentSetEx(){TrackingState = TrackingState.Added};
			//		//if (this.licencesummary.AsycudaDocumentSetEx == null) Debugger.Break();
			//		if (this.licencesummary.AsycudaDocumentSetEx != null)
            //        {
            //           i. = this.licencesummary.AsycudaDocumentSetEx;
            //        }
            //        else
            //        {
            //            this.licencesummary.AsycudaDocumentSetEx = i.;
             //       }
                           
            //        _AsycudaDocumentSetEx = i;
                     
                    return _AsycudaDocumentSetEx;
               }
			set
			{
			    if (value == _AsycudaDocumentSetEx) return;
                _AsycudaDocumentSetEx = value;
                if(value != null)
                     this.licencesummary.AsycudaDocumentSetEx = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentSetEx");
			}
		}
        


        ChangeTrackingCollection<DTO.LicenceSummary> _changeTracker;    
        public ChangeTrackingCollection<DTO.LicenceSummary> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


