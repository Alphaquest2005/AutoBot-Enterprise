// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class TODO_DiscrepanciesToSubmit: BaseEntity<TODO_DiscrepanciesToSubmit>
    {
        DTO.TODO_DiscrepanciesToSubmit todo_discrepanciestosubmit;
        public TODO_DiscrepanciesToSubmit(DTO.TODO_DiscrepanciesToSubmit dto )
        {
              todo_discrepanciestosubmit = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.TODO_DiscrepanciesToSubmit>(todo_discrepanciestosubmit);

        }

        public DTO.TODO_DiscrepanciesToSubmit DTO
        {
            get
            {
             return todo_discrepanciestosubmit;
            }
            set
            {
                todo_discrepanciestosubmit = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "EntryDataDetails is required")]
       
public int EntryDataDetailsId
		{ 
		    get { return this.todo_discrepanciestosubmit.EntryDataDetailsId; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.EntryDataDetailsId) return;
				this.todo_discrepanciestosubmit.EntryDataDetailsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EntryDataDetailsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.todo_discrepanciestosubmit.ApplicationSettingsId; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.ApplicationSettingsId) return;
				this.todo_discrepanciestosubmit.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "AsycudaDocumentSet is required")]
       
public int AsycudaDocumentSetId
		{ 
		    get { return this.todo_discrepanciestosubmit.AsycudaDocumentSetId; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.AsycudaDocumentSetId) return;
				this.todo_discrepanciestosubmit.AsycudaDocumentSetId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaDocumentSetId");
			}
		}
     

       
       
public Nullable<bool> IsClassified
		{ 
		    get { return this.todo_discrepanciestosubmit.IsClassified; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.IsClassified) return;
				this.todo_discrepanciestosubmit.IsClassified = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsClassified");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "AdjustmentType has a max length of 50 letters ")]
public string AdjustmentType
		{ 
		    get { return this.todo_discrepanciestosubmit.AdjustmentType; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.AdjustmentType) return;
				this.todo_discrepanciestosubmit.AdjustmentType = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AdjustmentType");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceNo is required")]
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.todo_discrepanciestosubmit.InvoiceNo; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.InvoiceNo) return;
				this.todo_discrepanciestosubmit.InvoiceNo = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> InvoiceQty
		{ 
		    get { return this.todo_discrepanciestosubmit.InvoiceQty; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.InvoiceQty) return;
				this.todo_discrepanciestosubmit.InvoiceQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceQty");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> ReceivedQty
		{ 
		    get { return this.todo_discrepanciestosubmit.ReceivedQty; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.ReceivedQty) return;
				this.todo_discrepanciestosubmit.ReceivedQty = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReceivedQty");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceDate is required")]
       
public System.DateTime InvoiceDate
		{ 
		    get { return this.todo_discrepanciestosubmit.InvoiceDate; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.InvoiceDate) return;
				this.todo_discrepanciestosubmit.InvoiceDate = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(20, ErrorMessage = "ItemNumber has a max length of 20 letters ")]
public string ItemNumber
		{ 
		    get { return this.todo_discrepanciestosubmit.ItemNumber; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.ItemNumber) return;
				this.todo_discrepanciestosubmit.ItemNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Status has a max length of 50 letters ")]
public string Status
		{ 
		    get { return this.todo_discrepanciestosubmit.Status; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.Status) return;
				this.todo_discrepanciestosubmit.Status = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Status");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "CNumber has a max length of 50 letters ")]
public string CNumber
		{ 
		    get { return this.todo_discrepanciestosubmit.CNumber; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.CNumber) return;
				this.todo_discrepanciestosubmit.CNumber = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "Declarant_Reference_Number has a max length of 50 letters ")]
public string Declarant_Reference_Number
		{ 
		    get { return this.todo_discrepanciestosubmit.Declarant_Reference_Number; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.Declarant_Reference_Number) return;
				this.todo_discrepanciestosubmit.Declarant_Reference_Number = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Declarant_Reference_Number");
			}
		}
     

       
       
public Nullable<int> EmailId
		{ 
		    get { return this.todo_discrepanciestosubmit.EmailId; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.EmailId) return;
				this.todo_discrepanciestosubmit.EmailId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("EmailId");
			}
		}
     

       
       
public Nullable<int> FileTypeId
		{ 
		    get { return this.todo_discrepanciestosubmit.FileTypeId; }
			set
			{
			    if (value == this.todo_discrepanciestosubmit.FileTypeId) return;
				this.todo_discrepanciestosubmit.FileTypeId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("FileTypeId");
			}
		}
     


        ChangeTrackingCollection<DTO.TODO_DiscrepanciesToSubmit> _changeTracker;    
        public ChangeTrackingCollection<DTO.TODO_DiscrepanciesToSubmit> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


