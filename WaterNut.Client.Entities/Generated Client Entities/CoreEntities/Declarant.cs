// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using TrackableEntities.Client;
using Core.Common.Client.Entities;
using CoreEntities.Client.DTO;


using Core.Common.Validation;

namespace CoreEntities.Client.Entities
{
       public partial class Declarant: BaseEntity<Declarant>
    {
        DTO.Declarant declarant;
        public Declarant(DTO.Declarant dto )
        {
              declarant = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.Declarant>(declarant);

        }

        public DTO.Declarant DTO
        {
            get
            {
             return declarant;
            }
            set
            {
                declarant = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= " is required")]
       
public int Id
		{ 
		    get { return this.declarant.Id; }
			set
			{
			    if (value == this.declarant.Id) return;
				this.declarant.Id = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ApplicationSettings is required")]
       
public int ApplicationSettingsId
		{ 
		    get { return this.declarant.ApplicationSettingsId; }
			set
			{
			    if (value == this.declarant.ApplicationSettingsId) return;
				this.declarant.ApplicationSettingsId = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ApplicationSettingsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "DeclarantCode is required")]
       
                
                [MaxLength(50, ErrorMessage = "DeclarantCode has a max length of 50 letters ")]
public string DeclarantCode
		{ 
		    get { return this.declarant.DeclarantCode; }
			set
			{
			    if (value == this.declarant.DeclarantCode) return;
				this.declarant.DeclarantCode = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("DeclarantCode");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "IsDefault is required")]
       
public bool IsDefault
		{ 
		    get { return this.declarant.IsDefault; }
			set
			{
			    if (value == this.declarant.IsDefault) return;
				this.declarant.IsDefault = value;
                if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("IsDefault");
			}
		}
     

       private ApplicationSettings _ApplicationSettings;
        public  ApplicationSettings ApplicationSettings
		{
		    get
               { 
                  if (this.declarant != null)
                   {
                       if (_ApplicationSettings != null)
                       {
                           if (this.declarant.ApplicationSettings !=
                               _ApplicationSettings.DTO)
                           {
                                if (this.declarant.ApplicationSettings  != null)
                               _ApplicationSettings = new ApplicationSettings(this.declarant.ApplicationSettings);
                           }
                       }
                       else
                       {
                             if (this.declarant.ApplicationSettings  != null)
                           _ApplicationSettings = new ApplicationSettings(this.declarant.ApplicationSettings);
                       }
                   }


             //       if (_ApplicationSettings != null) return _ApplicationSettings;
                       
             //       var i = new ApplicationSettings(){TrackingState = TrackingState.Added};
			//		//if (this.declarant.ApplicationSettings == null) Debugger.Break();
			//		if (this.declarant.ApplicationSettings != null)
            //        {
            //           i. = this.declarant.ApplicationSettings;
            //        }
            //        else
            //        {
            //            this.declarant.ApplicationSettings = i.;
             //       }
                           
            //        _ApplicationSettings = i;
                     
                    return _ApplicationSettings;
               }
			set
			{
			    if (value == _ApplicationSettings) return;
                _ApplicationSettings = value;
                if(value != null)
                     this.declarant.ApplicationSettings = value.DTO;
				if(this.TrackingState == TrackableEntities.TrackingState.Unchanged)this.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("ApplicationSettings");
			}
		}
        


        ChangeTrackingCollection<DTO.Declarant> _changeTracker;    
        public ChangeTrackingCollection<DTO.Declarant> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


