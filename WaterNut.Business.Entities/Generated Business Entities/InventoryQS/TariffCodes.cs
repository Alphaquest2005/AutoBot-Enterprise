// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace InventoryQS.Business.Entities
{
    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class TariffCodes : BaseEntity<TariffCodes>, ITrackable 
    {
        partial void AutoGenStartUp() //TariffCodes()
        {
            this.InventoryItemsEx = new List<InventoryItemsEx>();
        }

        [DataMember]
        public string TariffCode 
        {
            get
            {
                return _tariffcode;
            }
            set
            {
                _tariffcode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _tariffcode;
        [DataMember]
        public string Description 
        {
            get
            {
                return _description;
            }
            set
            {
                _description = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _description;
        [DataMember]
        public string RateofDuty 
        {
            get
            {
                return _rateofduty;
            }
            set
            {
                _rateofduty = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _rateofduty;
        [DataMember]
        public string EnvironmentalLevy 
        {
            get
            {
                return _environmentallevy;
            }
            set
            {
                _environmentallevy = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _environmentallevy;
        [DataMember]
        public string CustomsServiceCharge 
        {
            get
            {
                return _customsservicecharge;
            }
            set
            {
                _customsservicecharge = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _customsservicecharge;
        [DataMember]
        public string ExciseTax 
        {
            get
            {
                return _excisetax;
            }
            set
            {
                _excisetax = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _excisetax;
        [DataMember]
        public string VatRate 
        {
            get
            {
                return _vatrate;
            }
            set
            {
                _vatrate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _vatrate;
        [DataMember]
        public string PetrolTax 
        {
            get
            {
                return _petroltax;
            }
            set
            {
                _petroltax = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _petroltax;
        [DataMember]
        public string Units 
        {
            get
            {
                return _units;
            }
            set
            {
                _units = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _units;
        [DataMember]
        public string SiteRev3 
        {
            get
            {
                return _siterev3;
            }
            set
            {
                _siterev3 = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _siterev3;
        [DataMember]
        public string TariffCategoryCode 
        {
            get
            {
                return _tariffcategorycode;
            }
            set
            {
                _tariffcategorycode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _tariffcategorycode;
        [DataMember]
        public Nullable<bool> LicenseRequired 
        {
            get
            {
                return _licenserequired;
            }
            set
            {
                _licenserequired = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _licenserequired;
        [DataMember]
        public Nullable<bool> Invalid 
        {
            get
            {
                return _invalid;
            }
            set
            {
                _invalid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _invalid;
        [DataMember]
        public TariffCategory TariffCategory { get; set; }
        [DataMember]
        public List<InventoryItemsEx> InventoryItemsEx { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


