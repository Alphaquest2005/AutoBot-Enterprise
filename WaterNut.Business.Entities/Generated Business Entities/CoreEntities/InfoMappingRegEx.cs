// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace CoreEntities.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class InfoMappingRegEx : BaseEntity<InfoMappingRegEx>, ITrackable 
    {
        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public int InfoMappingId 
        {
            get
            {
                return _infomappingid;
            }
            set
            {
                _infomappingid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _infomappingid;
        [DataMember]
        public string KeyRegX 
        {
            get
            {
                return _keyregx;
            }
            set
            {
                _keyregx = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _keyregx;
        [DataMember]
        public string FieldRx 
        {
            get
            {
                return _fieldrx;
            }
            set
            {
                _fieldrx = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _fieldrx;
        [DataMember]
        public string KeyReplaceRx 
        {
            get
            {
                return _keyreplacerx;
            }
            set
            {
                _keyreplacerx = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _keyreplacerx;
        [DataMember]
        public string FieldReplaceRx 
        {
            get
            {
                return _fieldreplacerx;
            }
            set
            {
                _fieldreplacerx = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _fieldreplacerx;
        [DataMember]
        public InfoMapping InfoMapping { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


