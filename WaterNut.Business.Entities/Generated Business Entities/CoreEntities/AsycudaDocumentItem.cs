// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace CoreEntities.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaDocumentItem : BaseEntity<AsycudaDocumentItem>, ITrackable 
    {
        partial void AutoGenStartUp() //AsycudaDocumentItem()
        {
            this.SubItems = new List<SubItems>();
            this.PreviousItems = new List<EntryPreviousItems>();
            this.xcuda_Supplementary_unit = new List<xcuda_Supplementary_unit>();
            this.AsycudaDocumentItemEntryDataDetails = new List<AsycudaDocumentItemEntryDataDetails>();
        }

        [DataMember]
        public int Item_Id 
        {
            get
            {
                return _item_id;
            }
            set
            {
                _item_id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _item_id;
        [DataMember]
        public Nullable<int> AsycudaDocumentId 
        {
            get
            {
                return _asycudadocumentid;
            }
            set
            {
                _asycudadocumentid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _asycudadocumentid;
        [DataMember]
        public Nullable<int> EntryDataDetailsId 
        {
            get
            {
                return _entrydatadetailsid;
            }
            set
            {
                _entrydatadetailsid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _entrydatadetailsid;
        [DataMember]
        public string LineNumber 
        {
            get
            {
                return _linenumber;
            }
            set
            {
                _linenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _linenumber;
        [DataMember]
        public Nullable<bool> IsAssessed 
        {
            get
            {
                return _isassessed;
            }
            set
            {
                _isassessed = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _isassessed;
        [DataMember]
        public Nullable<bool> DoNotAllocate 
        {
            get
            {
                return _donotallocate;
            }
            set
            {
                _donotallocate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _donotallocate;
        [DataMember]
        public Nullable<bool> DoNotEX 
        {
            get
            {
                return _donotex;
            }
            set
            {
                _donotex = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _donotex;
        [DataMember]
        public Nullable<bool> AttributeOnlyAllocation 
        {
            get
            {
                return _attributeonlyallocation;
            }
            set
            {
                _attributeonlyallocation = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _attributeonlyallocation;
        [DataMember]
        public string Description_of_goods 
        {
            get
            {
                return _description_of_goods;
            }
            set
            {
                _description_of_goods = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _description_of_goods;
        [DataMember]
        public string Commercial_Description 
        {
            get
            {
                return _commercial_description;
            }
            set
            {
                _commercial_description = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _commercial_description;
        [DataMember]
        public double Gross_weight_itm 
        {
            get
            {
                return _gross_weight_itm;
            }
            set
            {
                _gross_weight_itm = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        double _gross_weight_itm;
        [DataMember]
        public double Net_weight_itm 
        {
            get
            {
                return _net_weight_itm;
            }
            set
            {
                _net_weight_itm = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        double _net_weight_itm;
        [DataMember]
        public Nullable<double> Item_price 
        {
            get
            {
                return _item_price;
            }
            set
            {
                _item_price = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _item_price;
        [DataMember]
        public Nullable<double> ItemQuantity 
        {
            get
            {
                return _itemquantity;
            }
            set
            {
                _itemquantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _itemquantity;
        [DataMember]
        public string Suppplementary_unit_code 
        {
            get
            {
                return _suppplementary_unit_code;
            }
            set
            {
                _suppplementary_unit_code = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _suppplementary_unit_code;
        [DataMember]
        public string ItemNumber 
        {
            get
            {
                return _itemnumber;
            }
            set
            {
                _itemnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _itemnumber;
        [DataMember]
        public string TariffCode 
        {
            get
            {
                return _tariffcode;
            }
            set
            {
                _tariffcode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _tariffcode;
        [DataMember]
        public Nullable<bool> TariffCodeLicenseRequired 
        {
            get
            {
                return _tariffcodelicenserequired;
            }
            set
            {
                _tariffcodelicenserequired = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _tariffcodelicenserequired;
        [DataMember]
        public Nullable<bool> TariffCategoryLicenseRequired 
        {
            get
            {
                return _tariffcategorylicenserequired;
            }
            set
            {
                _tariffcategorylicenserequired = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _tariffcategorylicenserequired;
        [DataMember]
        public string TariffCodeDescription 
        {
            get
            {
                return _tariffcodedescription;
            }
            set
            {
                _tariffcodedescription = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _tariffcodedescription;
        [DataMember]
        public Nullable<double> DutyLiability 
        {
            get
            {
                return _dutyliability;
            }
            set
            {
                _dutyliability = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _dutyliability;
        [DataMember]
        public Nullable<double> Total_CIF_itm 
        {
            get
            {
                return _total_cif_itm;
            }
            set
            {
                _total_cif_itm = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _total_cif_itm;
        [DataMember]
        public Nullable<double> Freight 
        {
            get
            {
                return _freight;
            }
            set
            {
                _freight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _freight;
        [DataMember]
        public Nullable<double> Statistical_value 
        {
            get
            {
                return _statistical_value;
            }
            set
            {
                _statistical_value = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _statistical_value;
        [DataMember]
        public Nullable<double> DPQtyAllocated 
        {
            get
            {
                return _dpqtyallocated;
            }
            set
            {
                _dpqtyallocated = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _dpqtyallocated;
        [DataMember]
        public Nullable<double> DFQtyAllocated 
        {
            get
            {
                return _dfqtyallocated;
            }
            set
            {
                _dfqtyallocated = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _dfqtyallocated;
        [DataMember]
        public Nullable<double> PiQuantity 
        {
            get
            {
                return _piquantity;
            }
            set
            {
                _piquantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _piquantity;
        [DataMember]
        public Nullable<bool> ImportComplete 
        {
            get
            {
                return _importcomplete;
            }
            set
            {
                _importcomplete = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _importcomplete;
        [DataMember]
        public string CNumber 
        {
            get
            {
                return _cnumber;
            }
            set
            {
                _cnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _cnumber;
        [DataMember]
        public Nullable<System.DateTime> RegistrationDate 
        {
            get
            {
                return _registrationdate;
            }
            set
            {
                _registrationdate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _registrationdate;
        [DataMember]
        public Nullable<double> Number_of_packages 
        {
            get
            {
                return _number_of_packages;
            }
            set
            {
                _number_of_packages = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _number_of_packages;
        [DataMember]
        public string Country_of_origin_code 
        {
            get
            {
                return _country_of_origin_code;
            }
            set
            {
                _country_of_origin_code = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _country_of_origin_code;
        [DataMember]
        public Nullable<double> PiWeight 
        {
            get
            {
                return _piweight;
            }
            set
            {
                _piweight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _piweight;
        [DataMember]
        public Nullable<double> Currency_rate 
        {
            get
            {
                return _currency_rate;
            }
            set
            {
                _currency_rate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _currency_rate;
        [DataMember]
        public string Currency_code 
        {
            get
            {
                return _currency_code;
            }
            set
            {
                _currency_code = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _currency_code;
        [DataMember]
        public Nullable<bool> InvalidHSCode 
        {
            get
            {
                return _invalidhscode;
            }
            set
            {
                _invalidhscode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _invalidhscode;
        [DataMember]
        public string WarehouseError 
        {
            get
            {
                return _warehouseerror;
            }
            set
            {
                _warehouseerror = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _warehouseerror;
        [DataMember]
        public Nullable<bool> Cancelled 
        {
            get
            {
                return _cancelled;
            }
            set
            {
                _cancelled = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _cancelled;
        [DataMember]
        public Nullable<double> SalesFactor 
        {
            get
            {
                return _salesfactor;
            }
            set
            {
                _salesfactor = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _salesfactor;
        [DataMember]
        public string ReferenceNumber 
        {
            get
            {
                return _referencenumber;
            }
            set
            {
                _referencenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _referencenumber;
        [DataMember]
        public Nullable<System.DateTime> ExpiryDate 
        {
            get
            {
                return _expirydate;
            }
            set
            {
                _expirydate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _expirydate;
        [DataMember]
        public string PreviousInvoiceNumber 
        {
            get
            {
                return _previousinvoicenumber;
            }
            set
            {
                _previousinvoicenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _previousinvoicenumber;
        [DataMember]
        public string PreviousInvoiceLineNumber 
        {
            get
            {
                return _previousinvoicelinenumber;
            }
            set
            {
                _previousinvoicelinenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _previousinvoicelinenumber;
        [DataMember]
        public string PreviousInvoiceItemNumber 
        {
            get
            {
                return _previousinvoiceitemnumber;
            }
            set
            {
                _previousinvoiceitemnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _previousinvoiceitemnumber;
        [DataMember]
        public Nullable<int> ApplicationSettingsId 
        {
            get
            {
                return _applicationsettingsid;
            }
            set
            {
                _applicationsettingsid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _applicationsettingsid;
        [DataMember]
        public AsycudaDocument AsycudaDocument { get; set; }
        [DataMember]
        public List<SubItems> SubItems { get; set; }
        [DataMember]
        public List<EntryPreviousItems> PreviousItems { get; set; }
        [DataMember]
        public List<xcuda_Supplementary_unit> xcuda_Supplementary_unit { get; set; }
        [DataMember]
        public List<AsycudaDocumentItemEntryDataDetails> AsycudaDocumentItemEntryDataDetails { get; set; }
        [DataMember]
        public ApplicationSettings ApplicationSettings { get; set; }
        [DataMember]
        public InventoryItemX InventoryItemsEx { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


