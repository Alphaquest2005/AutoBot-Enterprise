// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace AllocationDS.Business.Entities
{
    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class EX9AsycudaSalesAllocations : BaseEntity<EX9AsycudaSalesAllocations>, ITrackable 
    {
        [DataMember]
        public int AllocationId 
        {
            get
            {
                return _allocationid;
            }
            set
            {
                _allocationid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _allocationid;
        [DataMember]
        public Nullable<double> TotalValue 
        {
            get
            {
                return _totalvalue;
            }
            set
            {
                _totalvalue = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalvalue;
        [DataMember]
        public Nullable<double> AllocatedValue 
        {
            get
            {
                return _allocatedvalue;
            }
            set
            {
                _allocatedvalue = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _allocatedvalue;
        [DataMember]
        public string Status 
        {
            get
            {
                return _status;
            }
            set
            {
                _status = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _status;
        [DataMember]
        public Nullable<double> QtyAllocated 
        {
            get
            {
                return _qtyallocated;
            }
            set
            {
                _qtyallocated = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _qtyallocated;
        [DataMember]
        public int PreviousItem_Id 
        {
            get
            {
                return _previousitem_id;
            }
            set
            {
                _previousitem_id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _previousitem_id;
        [DataMember]
        public Nullable<System.DateTime> InvoiceDate 
        {
            get
            {
                return _invoicedate;
            }
            set
            {
                _invoicedate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _invoicedate;
        [DataMember]
        public Nullable<double> SalesQuantity 
        {
            get
            {
                return _salesquantity;
            }
            set
            {
                _salesquantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _salesquantity;
        [DataMember]
        public Nullable<double> SalesQtyAllocated 
        {
            get
            {
                return _salesqtyallocated;
            }
            set
            {
                _salesqtyallocated = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _salesqtyallocated;
        [DataMember]
        public string InvoiceNo 
        {
            get
            {
                return _invoiceno;
            }
            set
            {
                _invoiceno = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _invoiceno;
        [DataMember]
        public string ItemNumber 
        {
            get
            {
                return _itemnumber;
            }
            set
            {
                _itemnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _itemnumber;
        [DataMember]
        public string ItemDescription 
        {
            get
            {
                return _itemdescription;
            }
            set
            {
                _itemdescription = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _itemdescription;
        [DataMember]
        public Nullable<int> EntryDataDetailsId 
        {
            get
            {
                return _entrydatadetailsid;
            }
            set
            {
                _entrydatadetailsid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _entrydatadetailsid;
        [DataMember]
        public string DutyFreePaid 
        {
            get
            {
                return _dutyfreepaid;
            }
            set
            {
                _dutyfreepaid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _dutyfreepaid;
        [DataMember]
        public string pCNumber 
        {
            get
            {
                return _pcnumber;
            }
            set
            {
                _pcnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _pcnumber;
        [DataMember]
        public Nullable<System.DateTime> pRegistrationDate 
        {
            get
            {
                return _pregistrationdate;
            }
            set
            {
                _pregistrationdate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _pregistrationdate;
        [DataMember]
        public Nullable<double> pQuantity 
        {
            get
            {
                return _pquantity;
            }
            set
            {
                _pquantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _pquantity;
        [DataMember]
        public Nullable<double> pQtyAllocated 
        {
            get
            {
                return _pqtyallocated;
            }
            set
            {
                _pqtyallocated = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _pqtyallocated;
        [DataMember]
        public Nullable<double> PiQuantity 
        {
            get
            {
                return _piquantity;
            }
            set
            {
                _piquantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _piquantity;
        [DataMember]
        public string pReferenceNumber 
        {
            get
            {
                return _preferencenumber;
            }
            set
            {
                _preferencenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _preferencenumber;
        [DataMember]
        public Nullable<int> pLineNumber 
        {
            get
            {
                return _plinenumber;
            }
            set
            {
                _plinenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _plinenumber;
        [DataMember]
        public Nullable<int> pASYCUDA_Id 
        {
            get
            {
                return _pasycuda_id;
            }
            set
            {
                _pasycuda_id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _pasycuda_id;
        [DataMember]
        public Nullable<double> Cost 
        {
            get
            {
                return _cost;
            }
            set
            {
                _cost = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _cost;
        [DataMember]
        public Nullable<double> Total_CIF_itm 
        {
            get
            {
                return _total_cif_itm;
            }
            set
            {
                _total_cif_itm = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _total_cif_itm;
        [DataMember]
        public Nullable<double> DutyLiability 
        {
            get
            {
                return _dutyliability;
            }
            set
            {
                _dutyliability = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _dutyliability;
        [DataMember]
        public Nullable<double> TaxAmount 
        {
            get
            {
                return _taxamount;
            }
            set
            {
                _taxamount = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _taxamount;
        [DataMember]
        public Nullable<bool> pIsAssessed 
        {
            get
            {
                return _pisassessed;
            }
            set
            {
                _pisassessed = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _pisassessed;
        [DataMember]
        public Nullable<bool> DoNotAllocateSales 
        {
            get
            {
                return _donotallocatesales;
            }
            set
            {
                _donotallocatesales = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _donotallocatesales;
        [DataMember]
        public Nullable<bool> DoNotAllocatePreviousEntry 
        {
            get
            {
                return _donotallocatepreviousentry;
            }
            set
            {
                _donotallocatepreviousentry = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _donotallocatepreviousentry;
        [DataMember]
        public int SANumber 
        {
            get
            {
                return _sanumber;
            }
            set
            {
                _sanumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _sanumber;
        [DataMember]
        public string Commercial_Description 
        {
            get
            {
                return _commercial_description;
            }
            set
            {
                _commercial_description = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _commercial_description;
        [DataMember]
        public string Country_of_origin_code 
        {
            get
            {
                return _country_of_origin_code;
            }
            set
            {
                _country_of_origin_code = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _country_of_origin_code;
        [DataMember]
        public Nullable<double> Gross_weight_itm 
        {
            get
            {
                return _gross_weight_itm;
            }
            set
            {
                _gross_weight_itm = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _gross_weight_itm;
        [DataMember]
        public Nullable<double> Net_weight_itm 
        {
            get
            {
                return _net_weight_itm;
            }
            set
            {
                _net_weight_itm = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _net_weight_itm;
        [DataMember]
        public string pTariffCode 
        {
            get
            {
                return _ptariffcode;
            }
            set
            {
                _ptariffcode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _ptariffcode;
        [DataMember]
        public string pItemNumber 
        {
            get
            {
                return _pitemnumber;
            }
            set
            {
                _pitemnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _pitemnumber;
        [DataMember]
        public Nullable<double> pItemCost 
        {
            get
            {
                return _pitemcost;
            }
            set
            {
                _pitemcost = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _pitemcost;
        [DataMember]
        public string TariffCode 
        {
            get
            {
                return _tariffcode;
            }
            set
            {
                _tariffcode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _tariffcode;
        [DataMember]
        public string Customs_clearance_office_code 
        {
            get
            {
                return _customs_clearance_office_code;
            }
            set
            {
                _customs_clearance_office_code = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _customs_clearance_office_code;
        [DataMember]
        public Nullable<bool> Invalid 
        {
            get
            {
                return _invalid;
            }
            set
            {
                _invalid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _invalid;
        [DataMember]
        public Nullable<System.DateTime> pExpiryDate 
        {
            get
            {
                return _pexpirydate;
            }
            set
            {
                _pexpirydate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _pexpirydate;
        [DataMember]
        public int xBond_Item_Id 
        {
            get
            {
                return _xbond_item_id;
            }
            set
            {
                _xbond_item_id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _xbond_item_id;
        [DataMember]
        public Nullable<int> ApplicationSettingsId 
        {
            get
            {
                return _applicationsettingsid;
            }
            set
            {
                _applicationsettingsid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _applicationsettingsid;
        [DataMember]
        public xcuda_Item PreviousDocumentItem { get; set; }
        [DataMember]
        public InventoryItem InventoryItemsEx { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


