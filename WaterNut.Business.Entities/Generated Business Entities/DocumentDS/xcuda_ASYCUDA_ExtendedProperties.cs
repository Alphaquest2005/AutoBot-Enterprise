// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace DocumentDS.Business.Entities
{
    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class xcuda_ASYCUDA_ExtendedProperties : BaseEntity<xcuda_ASYCUDA_ExtendedProperties>, ITrackable 
    {
        [DataMember]
        public int ASYCUDA_Id 
        {
            get
            {
                return _asycuda_id;
            }
            set
            {
                _asycuda_id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _asycuda_id;
        [DataMember]
        public int AsycudaDocumentSetId 
        {
            get
            {
                return _asycudadocumentsetid;
            }
            set
            {
                _asycudadocumentsetid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _asycudadocumentsetid;
        [DataMember]
        public Nullable<int> FileNumber 
        {
            get
            {
                return _filenumber;
            }
            set
            {
                _filenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _filenumber;
        [DataMember]
        public Nullable<bool> IsManuallyAssessed 
        {
            get
            {
                return _ismanuallyassessed;
            }
            set
            {
                _ismanuallyassessed = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _ismanuallyassessed;
        [DataMember]
        public string CNumber 
        {
            get
            {
                return _cnumber;
            }
            set
            {
                _cnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _cnumber;
        [DataMember]
        public Nullable<System.DateTime> RegistrationDate 
        {
            get
            {
                return _registrationdate;
            }
            set
            {
                _registrationdate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _registrationdate;
        [DataMember]
        public string ReferenceNumber 
        {
            get
            {
                return _referencenumber;
            }
            set
            {
                _referencenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _referencenumber;
        [DataMember]
        public Nullable<int> Customs_ProcedureId 
        {
            get
            {
                return _customs_procedureid;
            }
            set
            {
                _customs_procedureid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _customs_procedureid;
        [DataMember]
        public Nullable<int> Document_TypeId 
        {
            get
            {
                return _document_typeid;
            }
            set
            {
                _document_typeid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _document_typeid;
        [DataMember]
        public string Description 
        {
            get
            {
                return _description;
            }
            set
            {
                _description = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _description;
        [DataMember]
        public Nullable<int> ExportTemplateId 
        {
            get
            {
                return _exporttemplateid;
            }
            set
            {
                _exporttemplateid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _exporttemplateid;
        [DataMember]
        public string BLNumber 
        {
            get
            {
                return _blnumber;
            }
            set
            {
                _blnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _blnumber;
        [DataMember]
        public Nullable<bool> AutoUpdate 
        {
            get
            {
                return _autoupdate;
            }
            set
            {
                _autoupdate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _autoupdate;
        [DataMember]
        public Nullable<System.DateTime> EffectiveRegistrationDate 
        {
            get
            {
                return _effectiveregistrationdate;
            }
            set
            {
                _effectiveregistrationdate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _effectiveregistrationdate;
        [DataMember]
        public Nullable<int> ApportionMethod 
        {
            get
            {
                return _apportionmethod;
            }
            set
            {
                _apportionmethod = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _apportionmethod;
        [DataMember]
        public Nullable<bool> DoNotAllocate 
        {
            get
            {
                return _donotallocate;
            }
            set
            {
                _donotallocate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _donotallocate;
        [DataMember]
        public bool ImportComplete 
        {
            get
            {
                return _importcomplete;
            }
            set
            {
                _importcomplete = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _importcomplete;
        [DataMember]
        public Nullable<int> DocumentLines 
        {
            get
            {
                return _documentlines;
            }
            set
            {
                _documentlines = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _documentlines;
        [DataMember]
        public Nullable<bool> Cancelled 
        {
            get
            {
                return _cancelled;
            }
            set
            {
                _cancelled = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _cancelled;
        [DataMember]
        public Nullable<double> TotalWeight 
        {
            get
            {
                return _totalweight;
            }
            set
            {
                _totalweight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalweight;
        [DataMember]
        public Nullable<double> TotalFreight 
        {
            get
            {
                return _totalfreight;
            }
            set
            {
                _totalfreight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalfreight;
        [DataMember]
        public Nullable<double> TotalInternalFreight 
        {
            get
            {
                return _totalinternalfreight;
            }
            set
            {
                _totalinternalfreight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalinternalfreight;
        [DataMember]
        public Nullable<int> TotalPackages 
        {
            get
            {
                return _totalpackages;
            }
            set
            {
                _totalpackages = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _totalpackages;
        [DataMember]
        public Nullable<System.DateTime> EffectiveExpiryDate 
        {
            get
            {
                return _effectiveexpirydate;
            }
            set
            {
                _effectiveexpirydate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _effectiveexpirydate;
        [DataMember]
        public string SourceFileName 
        {
            get
            {
                return _sourcefilename;
            }
            set
            {
                _sourcefilename = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _sourcefilename;
        [DataMember]
        public AsycudaDocumentSet AsycudaDocumentSet { get; set; }
        [DataMember]
        public Customs_Procedure Customs_Procedure { get; set; }
        [DataMember]
        public Document_Type Document_Type { get; set; }
        [DataMember]
        public ExportTemplate ExportTemplate { get; set; }
        [DataMember]
        public xcuda_ASYCUDA xcuda_ASYCUDA { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


