// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace OCR.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class OCRCorrectionLearning : BaseEntity<OCRCorrectionLearning>, ITrackable 
    {
        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public string FieldName 
        {
            get
            {
                return _fieldname;
            }
            set
            {
                _fieldname = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _fieldname;
        [DataMember]
        public string OriginalError 
        {
            get
            {
                return _originalerror;
            }
            set
            {
                _originalerror = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _originalerror;
        [DataMember]
        public string CorrectValue 
        {
            get
            {
                return _correctvalue;
            }
            set
            {
                _correctvalue = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _correctvalue;
        [DataMember]
        public Nullable<int> LineNumber 
        {
            get
            {
                return _linenumber;
            }
            set
            {
                _linenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _linenumber;
        [DataMember]
        public string LineText 
        {
            get
            {
                return _linetext;
            }
            set
            {
                _linetext = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _linetext;
        [DataMember]
        public string WindowText 
        {
            get
            {
                return _windowtext;
            }
            set
            {
                _windowtext = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _windowtext;
        [DataMember]
        public string CorrectionType 
        {
            get
            {
                return _correctiontype;
            }
            set
            {
                _correctiontype = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _correctiontype;
        [DataMember]
        public string DeepSeekReasoning 
        {
            get
            {
                return _deepseekreasoning;
            }
            set
            {
                _deepseekreasoning = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _deepseekreasoning;
        [DataMember]
        public Nullable<double> Confidence 
        {
            get
            {
                return _confidence;
            }
            set
            {
                _confidence = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _confidence;
        [DataMember]
        public string FilePath 
        {
            get
            {
                return _filepath;
            }
            set
            {
                _filepath = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _filepath;
        [DataMember]
        public bool Success 
        {
            get
            {
                return _success;
            }
            set
            {
                _success = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _success;
        [DataMember]
        public string ErrorMessage 
        {
            get
            {
                return _errormessage;
            }
            set
            {
                _errormessage = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _errormessage;
        [DataMember]
        public System.DateTime CreatedDate 
        {
            get
            {
                return _createddate;
            }
            set
            {
                _createddate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        System.DateTime _createddate;
        [DataMember]
        public string CreatedBy 
        {
            get
            {
                return _createdby;
            }
            set
            {
                _createdby = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _createdby;
        [DataMember]
        public Nullable<bool> RequiresMultilineRegex 
        {
            get
            {
                return _requiresmultilineregex;
            }
            set
            {
                _requiresmultilineregex = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _requiresmultilineregex;
        [DataMember]
        public string ContextLinesBefore 
        {
            get
            {
                return _contextlinesbefore;
            }
            set
            {
                _contextlinesbefore = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _contextlinesbefore;
        [DataMember]
        public string ContextLinesAfter 
        {
            get
            {
                return _contextlinesafter;
            }
            set
            {
                _contextlinesafter = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _contextlinesafter;
        [DataMember]
        public Nullable<int> LineId 
        {
            get
            {
                return _lineid;
            }
            set
            {
                _lineid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _lineid;
        [DataMember]
        public Nullable<int> PartId 
        {
            get
            {
                return _partid;
            }
            set
            {
                _partid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _partid;
        [DataMember]
        public Nullable<int> RegexId 
        {
            get
            {
                return _regexid;
            }
            set
            {
                _regexid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _regexid;
        [DataMember]
        public string SuggestedRegex 
        {
            get
            {
                return _suggestedregex;
            }
            set
            {
                _suggestedregex = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _suggestedregex;
        [DataMember]
        public string SuggestedRegex_Indexed 
        {
            get
            {
                return _suggestedregex_indexed;
            }
            set
            {
                _suggestedregex_indexed = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _suggestedregex_indexed;
        [DataMember]
        public string DocumentType 
        {
            get
            {
                return _documenttype;
            }
            set
            {
                _documenttype = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _documenttype;

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


