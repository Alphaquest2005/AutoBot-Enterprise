// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace OCR.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class Part : BaseEntity<Part>, ITrackable 
    {
        partial void AutoGenStartUp() //Part()
        {
            this.OCR_LinesView = new List<Line>();
        }

        [DataMember]
        public string Name 
        {
            get
            {
                return _name;
            }
            set
            {
                _name = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _name;
        [DataMember]
        public Nullable<bool> StartMultiLine 
        {
            get
            {
                return _startmultiline;
            }
            set
            {
                _startmultiline = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _startmultiline;
        [DataMember]
        public string Start 
        {
            get
            {
                return _start;
            }
            set
            {
                _start = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _start;
        [DataMember]
        public Nullable<bool> EndMultiLine 
        {
            get
            {
                return _endmultiline;
            }
            set
            {
                _endmultiline = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _endmultiline;
        [DataMember]
        public string End 
        {
            get
            {
                return _end;
            }
            set
            {
                _end = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _end;
        [DataMember]
        public Nullable<bool> IsRecuring 
        {
            get
            {
                return _isrecuring;
            }
            set
            {
                _isrecuring = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _isrecuring;
        [DataMember]
        public Nullable<bool> IsComposite 
        {
            get
            {
                return _iscomposite;
            }
            set
            {
                _iscomposite = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _iscomposite;
        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public Nullable<int> StartRegExId 
        {
            get
            {
                return _startregexid;
            }
            set
            {
                _startregexid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _startregexid;
        [DataMember]
        public int InvoiceId 
        {
            get
            {
                return _invoiceid;
            }
            set
            {
                _invoiceid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _invoiceid;
        [DataMember]
        public string InvoiceName 
        {
            get
            {
                return _invoicename;
            }
            set
            {
                _invoicename = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _invoicename;
        [DataMember]
        public Invoice Invoice { get; set; }
        [DataMember]
        public List<Line> OCR_LinesView { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


