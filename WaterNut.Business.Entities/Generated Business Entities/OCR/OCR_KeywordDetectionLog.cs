// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace OCR.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class OCR_KeywordDetectionLog : BaseEntity<OCR_KeywordDetectionLog>, ITrackable 
    {
        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public string DocumentPath 
        {
            get
            {
                return _documentpath;
            }
            set
            {
                _documentpath = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _documentpath;
        [DataMember]
        public string DocumentContent 
        {
            get
            {
                return _documentcontent;
            }
            set
            {
                _documentcontent = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _documentcontent;
        [DataMember]
        public Nullable<int> DetectedMappingId 
        {
            get
            {
                return _detectedmappingid;
            }
            set
            {
                _detectedmappingid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _detectedmappingid;
        [DataMember]
        public string KeywordMatches 
        {
            get
            {
                return _keywordmatches;
            }
            set
            {
                _keywordmatches = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _keywordmatches;
        [DataMember]
        public Nullable<decimal> MatchScore 
        {
            get
            {
                return _matchscore;
            }
            set
            {
                _matchscore = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<decimal> _matchscore;
        [DataMember]
        public Nullable<int> ProcessingTimeMs 
        {
            get
            {
                return _processingtimems;
            }
            set
            {
                _processingtimems = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _processingtimems;
        [DataMember]
        public bool Success 
        {
            get
            {
                return _success;
            }
            set
            {
                _success = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        bool _success;
        [DataMember]
        public string ErrorMessage 
        {
            get
            {
                return _errormessage;
            }
            set
            {
                _errormessage = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _errormessage;
        [DataMember]
        public System.DateTime CreatedDate 
        {
            get
            {
                return _createddate;
            }
            set
            {
                _createddate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        System.DateTime _createddate;
        [DataMember]
        public OCR_TemplateTableMapping OCR_TemplateTableMapping { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


