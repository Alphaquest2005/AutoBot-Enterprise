// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace OCR.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class RegularExpressions : BaseEntity<RegularExpressions>, ITrackable 
    {
        partial void AutoGenStartUp() //RegularExpressions()
        {
            this.End = new List<End>();
            this.Lines = new List<Lines>();
            this.Start = new List<Start>();
            this.InvoiceRegEx = new List<InvoiceRegEx>();
            this.InvoiceRepRegEx = new List<InvoiceRegEx>();
            this.FieldFormatRegEx = new List<FieldFormatRegEx>();
            this.FieldFormatRepRegEx = new List<FieldFormatRegEx>();
            this.InvoiceIdentificatonRegEx = new List<InvoiceIdentificatonRegEx>();
        }

        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public string RegEx 
        {
            get
            {
                return _regex;
            }
            set
            {
                _regex = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _regex;
        [DataMember]
        public Nullable<bool> MultiLine 
        {
            get
            {
                return _multiline;
            }
            set
            {
                _multiline = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _multiline;
        [DataMember]
        public Nullable<int> MaxLines 
        {
            get
            {
                return _maxlines;
            }
            set
            {
                _maxlines = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _maxlines;
        [DataMember]
        public List<End> End { get; set; }
        [DataMember]
        public List<Lines> Lines { get; set; }
        [DataMember]
        public List<Start> Start { get; set; }
        [DataMember]
        public List<InvoiceRegEx> InvoiceRegEx { get; set; }
        [DataMember]
        public List<InvoiceRegEx> InvoiceRepRegEx { get; set; }
        [DataMember]
        public List<FieldFormatRegEx> FieldFormatRegEx { get; set; }
        [DataMember]
        public List<FieldFormatRegEx> FieldFormatRepRegEx { get; set; }
        [DataMember]
        public List<InvoiceIdentificatonRegEx> InvoiceIdentificatonRegEx { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


