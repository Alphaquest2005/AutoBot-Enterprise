// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace EntryDataDS.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class ShipmentInvoice : BaseEntity<ShipmentInvoice>, ITrackable 
    {
        partial void AutoGenStartUp() //ShipmentInvoice()
        {
            this.InvoiceDetails = new List<InvoiceDetails>();
            this.InvoiceExtraInfo = new List<InvoiceExtraInfo>();
        }

        [DataMember]
        public string InvoiceNo 
        {
            get
            {
                return _invoiceno;
            }
            set
            {
                _invoiceno = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _invoiceno;
        [DataMember]
        public Nullable<double> InvoiceTotal 
        {
            get
            {
                return _invoicetotal;
            }
            set
            {
                _invoicetotal = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _invoicetotal;
        [DataMember]
        public Nullable<int> ImportedLines 
        {
            get
            {
                return _importedlines;
            }
            set
            {
                _importedlines = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _importedlines;
        [DataMember]
        public string SupplierCode 
        {
            get
            {
                return _suppliercode;
            }
            set
            {
                _suppliercode = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _suppliercode;
        [DataMember]
        public Nullable<double> TotalInternalFreight 
        {
            get
            {
                return _totalinternalfreight;
            }
            set
            {
                _totalinternalfreight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalinternalfreight;
        [DataMember]
        public string Currency 
        {
            get
            {
                return _currency;
            }
            set
            {
                _currency = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _currency;
        [DataMember]
        public Nullable<int> EmailId 
        {
            get
            {
                return _emailid;
            }
            set
            {
                _emailid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _emailid;
        [DataMember]
        public Nullable<int> FileTypeId 
        {
            get
            {
                return _filetypeid;
            }
            set
            {
                _filetypeid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _filetypeid;
        [DataMember]
        public Nullable<double> TotalOtherCost 
        {
            get
            {
                return _totalothercost;
            }
            set
            {
                _totalothercost = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalothercost;
        [DataMember]
        public Nullable<double> TotalInsurance 
        {
            get
            {
                return _totalinsurance;
            }
            set
            {
                _totalinsurance = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalinsurance;
        [DataMember]
        public Nullable<double> TotalDeduction 
        {
            get
            {
                return _totaldeduction;
            }
            set
            {
                _totaldeduction = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totaldeduction;
        [DataMember]
        public string SourceFile 
        {
            get
            {
                return _sourcefile;
            }
            set
            {
                _sourcefile = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _sourcefile;
        [DataMember]
        public int Id 
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _id;
        [DataMember]
        public Nullable<System.DateTime> InvoiceDate 
        {
            get
            {
                return _invoicedate;
            }
            set
            {
                _invoicedate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _invoicedate;
        [DataMember]
        public Nullable<int> FileLineNumber 
        {
            get
            {
                return _filelinenumber;
            }
            set
            {
                _filelinenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _filelinenumber;
        [DataMember]
        public Nullable<double> SubTotal 
        {
            get
            {
                return _subtotal;
            }
            set
            {
                _subtotal = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _subtotal;
        [DataMember]
        public List<InvoiceDetails> InvoiceDetails { get; set; }
        [DataMember]
        public List<InvoiceExtraInfo> InvoiceExtraInfo { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


