// <autogenerated>
//   This file was generated by T4 code generator AllBusinessEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;

using Core.Common.Business.Entities;
using WaterNut.Interfaces;
using TrackableEntities;

namespace EntryDataDS.Business.Entities
{

    //[JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class EntryDataDetails : BaseEntity<EntryDataDetails>, ITrackable 
    {
        partial void AutoGenStartUp() //EntryDataDetails()
        {
            this.EntryDataDetailsEx = new List<EntryDataDetailsEx>();
        }

        [DataMember]
        public int EntryDataDetailsId 
        {
            get
            {
                return _entrydatadetailsid;
            }
            set
            {
                _entrydatadetailsid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _entrydatadetailsid;
        [DataMember]
        public string EntryDataId 
        {
            get
            {
                return _entrydataid;
            }
            set
            {
                _entrydataid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _entrydataid;
        [DataMember]
        public Nullable<int> LineNumber 
        {
            get
            {
                return _linenumber;
            }
            set
            {
                _linenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<int> _linenumber;
        [DataMember]
        public string ItemNumber 
        {
            get
            {
                return _itemnumber;
            }
            set
            {
                _itemnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _itemnumber;
        [DataMember]
        public double Quantity 
        {
            get
            {
                return _quantity;
            }
            set
            {
                _quantity = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        double _quantity;
        [DataMember]
        public string Units 
        {
            get
            {
                return _units;
            }
            set
            {
                _units = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _units;
        [DataMember]
        public string ItemDescription 
        {
            get
            {
                return _itemdescription;
            }
            set
            {
                _itemdescription = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _itemdescription;
        [DataMember]
        public double Cost 
        {
            get
            {
                return _cost;
            }
            set
            {
                _cost = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        double _cost;
        [DataMember]
        public double QtyAllocated 
        {
            get
            {
                return _qtyallocated;
            }
            set
            {
                _qtyallocated = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        double _qtyallocated;
        [DataMember]
        public double UnitWeight 
        {
            get
            {
                return _unitweight;
            }
            set
            {
                _unitweight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        double _unitweight;
        [DataMember]
        public Nullable<bool> DoNotAllocate 
        {
            get
            {
                return _donotallocate;
            }
            set
            {
                _donotallocate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _donotallocate;
        [DataMember]
        public Nullable<double> Freight 
        {
            get
            {
                return _freight;
            }
            set
            {
                _freight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _freight;
        [DataMember]
        public Nullable<double> Weight 
        {
            get
            {
                return _weight;
            }
            set
            {
                _weight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _weight;
        [DataMember]
        public Nullable<double> InternalFreight 
        {
            get
            {
                return _internalfreight;
            }
            set
            {
                _internalfreight = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _internalfreight;
        [DataMember]
        public string Status 
        {
            get
            {
                return _status;
            }
            set
            {
                _status = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _status;
        [DataMember]
        public Nullable<double> InvoiceQty 
        {
            get
            {
                return _invoiceqty;
            }
            set
            {
                _invoiceqty = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _invoiceqty;
        [DataMember]
        public Nullable<double> ReceivedQty 
        {
            get
            {
                return _receivedqty;
            }
            set
            {
                _receivedqty = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _receivedqty;
        [DataMember]
        public string PreviousInvoiceNumber 
        {
            get
            {
                return _previousinvoicenumber;
            }
            set
            {
                _previousinvoicenumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _previousinvoicenumber;
        [DataMember]
        public string CNumber 
        {
            get
            {
                return _cnumber;
            }
            set
            {
                _cnumber = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _cnumber;
        [DataMember]
        public string Comment 
        {
            get
            {
                return _comment;
            }
            set
            {
                _comment = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        string _comment;
        [DataMember]
        public Nullable<System.DateTime> EffectiveDate 
        {
            get
            {
                return _effectivedate;
            }
            set
            {
                _effectivedate = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<System.DateTime> _effectivedate;
        [DataMember]
        public Nullable<bool> IsReconciled 
        {
            get
            {
                return _isreconciled;
            }
            set
            {
                _isreconciled = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<bool> _isreconciled;
        [DataMember]
        public Nullable<double> TaxAmount 
        {
            get
            {
                return _taxamount;
            }
            set
            {
                _taxamount = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _taxamount;
        [DataMember]
        public Nullable<double> LastCost 
        {
            get
            {
                return _lastcost;
            }
            set
            {
                _lastcost = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _lastcost;
        [DataMember]
        public Nullable<double> TotalCost 
        {
            get
            {
                return _totalcost;
            }
            set
            {
                _totalcost = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        Nullable<double> _totalcost;
        [DataMember]
        public int InventoryItemId 
        {
            get
            {
                return _inventoryitemid;
            }
            set
            {
                _inventoryitemid = value;
                //if(this.TrackingState == TrackingState.Unchanged) this.TrackingState = TrackingState.Modified;  
                NotifyPropertyChanged();
            }
        }
        int _inventoryitemid;
        [DataMember]
        public EntryData EntryData { get; set; }
        [DataMember]
        public InventoryItemsEx InventoryItemEx { get; set; }
        [DataMember]
        public List<EntryDataDetailsEx> EntryDataDetailsEx { get; set; }
        [DataMember]
        public InventoryItems InventoryItems { get; set; }

 //       [DataMember]
 //       public TrackingState TrackingState { get; set; }
 //       [DataMember]
 //       public ICollection<string> ModifiedProperties { get; set; }
//        [DataMember]//JsonProperty,
 //       private Guid EntityIdentifier { get; set; }
    }
}


