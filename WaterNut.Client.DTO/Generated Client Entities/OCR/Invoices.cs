// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace OCR.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class Invoices : BaseEntity<Invoices>, ITrackable, IEquatable<Invoices>
    {
        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public string Name
		{ 
		    get { return _Name; }
			set
			{
			    if (value == _Name) return;
				_Name = value;
				NotifyPropertyChanged();//m => this.Name
			}
		}
        private string _Name;

        [DataMember]
        public Nullable<int> FileTypeId
		{ 
		    get { return _FileTypeId; }
			set
			{
			    if (value == _FileTypeId) return;
				_FileTypeId = value;
				NotifyPropertyChanged();//m => this.FileTypeId
			}
		}
        private Nullable<int> _FileTypeId;

       
        [DataMember]
        public ChangeTrackingCollection<Parts> Parts
		{
		    get { return _Parts; }
			set
			{
			    if (Equals(value, _Parts)) return;
				_Parts = value;
				NotifyPropertyChanged();//m => this.Parts
			}
		}
        private ChangeTrackingCollection<Parts> _Parts = new ChangeTrackingCollection<Parts>();

        [DataMember]
        public ChangeTrackingCollection<OCR_InvoiceRegEx> OCR_InvoiceRegEx
		{
		    get { return _OCR_InvoiceRegEx; }
			set
			{
			    if (Equals(value, _OCR_InvoiceRegEx)) return;
				_OCR_InvoiceRegEx = value;
				NotifyPropertyChanged();//m => this.OCR_InvoiceRegEx
			}
		}
        private ChangeTrackingCollection<OCR_InvoiceRegEx> _OCR_InvoiceRegEx = new ChangeTrackingCollection<OCR_InvoiceRegEx>();

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<Invoices>.Equals(Invoices other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



