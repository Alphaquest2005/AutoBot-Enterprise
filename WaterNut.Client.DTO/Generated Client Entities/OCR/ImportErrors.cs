// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace OCR.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class ImportErrors : BaseEntity<ImportErrors>, ITrackable, IEquatable<ImportErrors>
    {
        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public string PdfText
		{ 
		    get { return _PdfText; }
			set
			{
			    if (value == _PdfText) return;
				_PdfText = value;
				NotifyPropertyChanged();//m => this.PdfText
			}
		}
        private string _PdfText;

        [DataMember]
        public string Error
		{ 
		    get { return _Error; }
			set
			{
			    if (value == _Error) return;
				_Error = value;
				NotifyPropertyChanged();//m => this.Error
			}
		}
        private string _Error;

        [DataMember]
        public System.DateTime EntryDateTime
		{ 
		    get { return _EntryDateTime; }
			set
			{
			    if (value == _EntryDateTime) return;
				_EntryDateTime = value;
				NotifyPropertyChanged();//m => this.EntryDateTime
			}
		}
        private System.DateTime _EntryDateTime;

       
        [DataMember]
        public ChangeTrackingCollection<OCR_FailedLines> OCR_FailedLines
		{
		    get { return _OCR_FailedLines; }
			set
			{
			    if (Equals(value, _OCR_FailedLines)) return;
				_OCR_FailedLines = value;
				NotifyPropertyChanged();//m => this.OCR_FailedLines
			}
		}
        private ChangeTrackingCollection<OCR_FailedLines> _OCR_FailedLines = new ChangeTrackingCollection<OCR_FailedLines>();

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<ImportErrors>.Equals(ImportErrors other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



