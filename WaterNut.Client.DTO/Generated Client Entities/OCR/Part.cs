// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace OCR.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class Part : BaseEntity<Part>, ITrackable, IEquatable<Part>
    {
        [DataMember]
        public string Name
		{ 
		    get { return _Name; }
			set
			{
			    if (value == _Name) return;
				_Name = value;
				NotifyPropertyChanged();//m => this.Name
			}
		}
        private string _Name;

        [DataMember]
        public Nullable<bool> StartMultiLine
		{ 
		    get { return _StartMultiLine; }
			set
			{
			    if (value == _StartMultiLine) return;
				_StartMultiLine = value;
				NotifyPropertyChanged();//m => this.StartMultiLine
			}
		}
        private Nullable<bool> _StartMultiLine;

        [DataMember]
        public string Start
		{ 
		    get { return _Start; }
			set
			{
			    if (value == _Start) return;
				_Start = value;
				NotifyPropertyChanged();//m => this.Start
			}
		}
        private string _Start;

        [DataMember]
        public Nullable<bool> EndMultiLine
		{ 
		    get { return _EndMultiLine; }
			set
			{
			    if (value == _EndMultiLine) return;
				_EndMultiLine = value;
				NotifyPropertyChanged();//m => this.EndMultiLine
			}
		}
        private Nullable<bool> _EndMultiLine;

        [DataMember]
        public string End
		{ 
		    get { return _End; }
			set
			{
			    if (value == _End) return;
				_End = value;
				NotifyPropertyChanged();//m => this.End
			}
		}
        private string _End;

        [DataMember]
        public Nullable<bool> IsRecuring
		{ 
		    get { return _IsRecuring; }
			set
			{
			    if (value == _IsRecuring) return;
				_IsRecuring = value;
				NotifyPropertyChanged();//m => this.IsRecuring
			}
		}
        private Nullable<bool> _IsRecuring;

        [DataMember]
        public Nullable<bool> IsComposite
		{ 
		    get { return _IsComposite; }
			set
			{
			    if (value == _IsComposite) return;
				_IsComposite = value;
				NotifyPropertyChanged();//m => this.IsComposite
			}
		}
        private Nullable<bool> _IsComposite;

        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public Nullable<int> StartRegExId
		{ 
		    get { return _StartRegExId; }
			set
			{
			    if (value == _StartRegExId) return;
				_StartRegExId = value;
				NotifyPropertyChanged();//m => this.StartRegExId
			}
		}
        private Nullable<int> _StartRegExId;

        [DataMember]
        public int InvoiceId
		{ 
		    get { return _InvoiceId; }
			set
			{
			    if (value == _InvoiceId) return;
				_InvoiceId = value;
				NotifyPropertyChanged();//m => this.InvoiceId
			}
		}
        private int _InvoiceId;

        [DataMember]
        public string InvoiceName
		{ 
		    get { return _InvoiceName; }
			set
			{
			    if (value == _InvoiceName) return;
				_InvoiceName = value;
				NotifyPropertyChanged();//m => this.InvoiceName
			}
		}
        private string _InvoiceName;

       
        [DataMember]
        public Invoice Invoice
		{
		    get { return _Invoice; }
			set
			{
			    if (value == _Invoice) return;
				_Invoice = value;
                InvoiceChangeTracker = _Invoice == null ? null
                    : new ChangeTrackingCollection<Invoice> { _Invoice };
				NotifyPropertyChanged();//m => this.Invoice
			}
		}
        private Invoice _Invoice;
        private ChangeTrackingCollection<Invoice> InvoiceChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<Part>.Equals(Part other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



