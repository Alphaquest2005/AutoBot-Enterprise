// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class InventoryItemAlias : BaseEntity<InventoryItemAlias>, ITrackable, IEquatable<InventoryItemAlias>
    {
        [DataMember]
        public int AliasId
		{ 
		    get { return _AliasId; }
			set
			{
			    if (value == _AliasId) return;
				_AliasId = value;
				NotifyPropertyChanged();//m => this.AliasId
			}
		}
        private int _AliasId;

        [DataMember]
        public string ItemNumber
		{ 
		    get { return _ItemNumber; }
			set
			{
			    if (value == _ItemNumber) return;
				_ItemNumber = value;
				NotifyPropertyChanged();//m => this.ItemNumber
			}
		}
        private string _ItemNumber;

        [DataMember]
        public string AliasName
		{ 
		    get { return _AliasName; }
			set
			{
			    if (value == _AliasName) return;
				_AliasName = value;
				NotifyPropertyChanged();//m => this.AliasName
			}
		}
        private string _AliasName;

       
        [DataMember]
        public InventoryItems InventoryItems
		{
		    get { return _InventoryItems; }
			set
			{
			    if (value == _InventoryItems) return;
				_InventoryItems = value;
                InventoryItemsChangeTracker = _InventoryItems == null ? null
                    : new ChangeTrackingCollection<InventoryItems> { _InventoryItems };
				NotifyPropertyChanged();//m => this.InventoryItems
			}
		}
        private InventoryItems _InventoryItems;
        private ChangeTrackingCollection<InventoryItems> InventoryItemsChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<InventoryItemAlias>.Equals(InventoryItemAlias other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



