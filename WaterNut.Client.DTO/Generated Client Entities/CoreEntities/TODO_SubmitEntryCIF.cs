// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class TODO_SubmitEntryCIF : BaseEntity<TODO_SubmitEntryCIF>, ITrackable, IEquatable<TODO_SubmitEntryCIF>
    {
        [DataMember]
        public string Type
		{ 
		    get { return _Type; }
			set
			{
			    if (value == _Type) return;
				_Type = value;
				NotifyPropertyChanged();//m => this.Type
			}
		}
        private string _Type;

        [DataMember]
        public string InvoiceNo
		{ 
		    get { return _InvoiceNo; }
			set
			{
			    if (value == _InvoiceNo) return;
				_InvoiceNo = value;
				NotifyPropertyChanged();//m => this.InvoiceNo
			}
		}
        private string _InvoiceNo;

        [DataMember]
        public string SupplierInvoiceNo
		{ 
		    get { return _SupplierInvoiceNo; }
			set
			{
			    if (value == _SupplierInvoiceNo) return;
				_SupplierInvoiceNo = value;
				NotifyPropertyChanged();//m => this.SupplierInvoiceNo
			}
		}
        private string _SupplierInvoiceNo;

        [DataMember]
        public Nullable<double> InvoiceTotal
		{ 
		    get { return _InvoiceTotal; }
			set
			{
			    if (value == _InvoiceTotal) return;
				_InvoiceTotal = value;
				NotifyPropertyChanged();//m => this.InvoiceTotal
			}
		}
        private Nullable<double> _InvoiceTotal;

        [DataMember]
        public string WarehouseNo
		{ 
		    get { return _WarehouseNo; }
			set
			{
			    if (value == _WarehouseNo) return;
				_WarehouseNo = value;
				NotifyPropertyChanged();//m => this.WarehouseNo
			}
		}
        private string _WarehouseNo;

        [DataMember]
        public int Packages
		{ 
		    get { return _Packages; }
			set
			{
			    if (value == _Packages) return;
				_Packages = value;
				NotifyPropertyChanged();//m => this.Packages
			}
		}
        private int _Packages;

        [DataMember]
        public string Declarant_Reference_Number
		{ 
		    get { return _Declarant_Reference_Number; }
			set
			{
			    if (value == _Declarant_Reference_Number) return;
				_Declarant_Reference_Number = value;
				NotifyPropertyChanged();//m => this.Declarant_Reference_Number
			}
		}
        private string _Declarant_Reference_Number;

        [DataMember]
        public Nullable<int> TotalPackages
		{ 
		    get { return _TotalPackages; }
			set
			{
			    if (value == _TotalPackages) return;
				_TotalPackages = value;
				NotifyPropertyChanged();//m => this.TotalPackages
			}
		}
        private Nullable<int> _TotalPackages;

        [DataMember]
        public int AsycudaDocumentSetId
		{ 
		    get { return _AsycudaDocumentSetId; }
			set
			{
			    if (value == _AsycudaDocumentSetId) return;
				_AsycudaDocumentSetId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetId
			}
		}
        private int _AsycudaDocumentSetId;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

       
   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<TODO_SubmitEntryCIF>.Equals(TODO_SubmitEntryCIF other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



