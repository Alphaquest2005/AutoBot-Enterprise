// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class ApplicationSettings : BaseEntity<ApplicationSettings>, ITrackable, IEquatable<ApplicationSettings>
    {
        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public string Description
		{ 
		    get { return _Description; }
			set
			{
			    if (value == _Description) return;
				_Description = value;
				NotifyPropertyChanged();//m => this.Description
			}
		}
        private string _Description;

        [DataMember]
        public Nullable<int> MaxEntryLines
		{ 
		    get { return _MaxEntryLines; }
			set
			{
			    if (value == _MaxEntryLines) return;
				_MaxEntryLines = value;
				NotifyPropertyChanged();//m => this.MaxEntryLines
			}
		}
        private Nullable<int> _MaxEntryLines;

        [DataMember]
        public string SoftwareName
		{ 
		    get { return _SoftwareName; }
			set
			{
			    if (value == _SoftwareName) return;
				_SoftwareName = value;
				NotifyPropertyChanged();//m => this.SoftwareName
			}
		}
        private string _SoftwareName;

        [DataMember]
        public string AllowCounterPoint
		{ 
		    get { return _AllowCounterPoint; }
			set
			{
			    if (value == _AllowCounterPoint) return;
				_AllowCounterPoint = value;
				NotifyPropertyChanged();//m => this.AllowCounterPoint
			}
		}
        private string _AllowCounterPoint;

        [DataMember]
        public Nullable<bool> GroupEX9
		{ 
		    get { return _GroupEX9; }
			set
			{
			    if (value == _GroupEX9) return;
				_GroupEX9 = value;
				NotifyPropertyChanged();//m => this.GroupEX9
			}
		}
        private Nullable<bool> _GroupEX9;

        [DataMember]
        public Nullable<bool> InvoicePerEntry
		{ 
		    get { return _InvoicePerEntry; }
			set
			{
			    if (value == _InvoicePerEntry) return;
				_InvoicePerEntry = value;
				NotifyPropertyChanged();//m => this.InvoicePerEntry
			}
		}
        private Nullable<bool> _InvoicePerEntry;

        [DataMember]
        public string AllowTariffCodes
		{ 
		    get { return _AllowTariffCodes; }
			set
			{
			    if (value == _AllowTariffCodes) return;
				_AllowTariffCodes = value;
				NotifyPropertyChanged();//m => this.AllowTariffCodes
			}
		}
        private string _AllowTariffCodes;

        [DataMember]
        public string AllowWareHouse
		{ 
		    get { return _AllowWareHouse; }
			set
			{
			    if (value == _AllowWareHouse) return;
				_AllowWareHouse = value;
				NotifyPropertyChanged();//m => this.AllowWareHouse
			}
		}
        private string _AllowWareHouse;

        [DataMember]
        public string AllowXBond
		{ 
		    get { return _AllowXBond; }
			set
			{
			    if (value == _AllowXBond) return;
				_AllowXBond = value;
				NotifyPropertyChanged();//m => this.AllowXBond
			}
		}
        private string _AllowXBond;

        [DataMember]
        public string AllowAsycudaManager
		{ 
		    get { return _AllowAsycudaManager; }
			set
			{
			    if (value == _AllowAsycudaManager) return;
				_AllowAsycudaManager = value;
				NotifyPropertyChanged();//m => this.AllowAsycudaManager
			}
		}
        private string _AllowAsycudaManager;

        [DataMember]
        public string AllowQuickBooks
		{ 
		    get { return _AllowQuickBooks; }
			set
			{
			    if (value == _AllowQuickBooks) return;
				_AllowQuickBooks = value;
				NotifyPropertyChanged();//m => this.AllowQuickBooks
			}
		}
        private string _AllowQuickBooks;

        [DataMember]
        public Nullable<bool> ItemDescriptionContainsAsycudaAttribute
		{ 
		    get { return _ItemDescriptionContainsAsycudaAttribute; }
			set
			{
			    if (value == _ItemDescriptionContainsAsycudaAttribute) return;
				_ItemDescriptionContainsAsycudaAttribute = value;
				NotifyPropertyChanged();//m => this.ItemDescriptionContainsAsycudaAttribute
			}
		}
        private Nullable<bool> _ItemDescriptionContainsAsycudaAttribute;

        [DataMember]
        public string AllowExportToExcel
		{ 
		    get { return _AllowExportToExcel; }
			set
			{
			    if (value == _AllowExportToExcel) return;
				_AllowExportToExcel = value;
				NotifyPropertyChanged();//m => this.AllowExportToExcel
			}
		}
        private string _AllowExportToExcel;

        [DataMember]
        public string AllowAutoWeightCalculation
		{ 
		    get { return _AllowAutoWeightCalculation; }
			set
			{
			    if (value == _AllowAutoWeightCalculation) return;
				_AllowAutoWeightCalculation = value;
				NotifyPropertyChanged();//m => this.AllowAutoWeightCalculation
			}
		}
        private string _AllowAutoWeightCalculation;

        [DataMember]
        public string AllowEntryPerIM7
		{ 
		    get { return _AllowEntryPerIM7; }
			set
			{
			    if (value == _AllowEntryPerIM7) return;
				_AllowEntryPerIM7 = value;
				NotifyPropertyChanged();//m => this.AllowEntryPerIM7
			}
		}
        private string _AllowEntryPerIM7;

        [DataMember]
        public string AllowSalesToPI
		{ 
		    get { return _AllowSalesToPI; }
			set
			{
			    if (value == _AllowSalesToPI) return;
				_AllowSalesToPI = value;
				NotifyPropertyChanged();//m => this.AllowSalesToPI
			}
		}
        private string _AllowSalesToPI;

        [DataMember]
        public string AllowEffectiveAssessmentDate
		{ 
		    get { return _AllowEffectiveAssessmentDate; }
			set
			{
			    if (value == _AllowEffectiveAssessmentDate) return;
				_AllowEffectiveAssessmentDate = value;
				NotifyPropertyChanged();//m => this.AllowEffectiveAssessmentDate
			}
		}
        private string _AllowEffectiveAssessmentDate;

        [DataMember]
        public string AllowAutoFreightCalculation
		{ 
		    get { return _AllowAutoFreightCalculation; }
			set
			{
			    if (value == _AllowAutoFreightCalculation) return;
				_AllowAutoFreightCalculation = value;
				NotifyPropertyChanged();//m => this.AllowAutoFreightCalculation
			}
		}
        private string _AllowAutoFreightCalculation;

        [DataMember]
        public string AllowSubItems
		{ 
		    get { return _AllowSubItems; }
			set
			{
			    if (value == _AllowSubItems) return;
				_AllowSubItems = value;
				NotifyPropertyChanged();//m => this.AllowSubItems
			}
		}
        private string _AllowSubItems;

        [DataMember]
        public string AllowEntryDoNotAllocate
		{ 
		    get { return _AllowEntryDoNotAllocate; }
			set
			{
			    if (value == _AllowEntryDoNotAllocate) return;
				_AllowEntryDoNotAllocate = value;
				NotifyPropertyChanged();//m => this.AllowEntryDoNotAllocate
			}
		}
        private string _AllowEntryDoNotAllocate;

        [DataMember]
        public string AllowPreviousItems
		{ 
		    get { return _AllowPreviousItems; }
			set
			{
			    if (value == _AllowPreviousItems) return;
				_AllowPreviousItems = value;
				NotifyPropertyChanged();//m => this.AllowPreviousItems
			}
		}
        private string _AllowPreviousItems;

        [DataMember]
        public string AllowOversShort
		{ 
		    get { return _AllowOversShort; }
			set
			{
			    if (value == _AllowOversShort) return;
				_AllowOversShort = value;
				NotifyPropertyChanged();//m => this.AllowOversShort
			}
		}
        private string _AllowOversShort;

        [DataMember]
        public string AllowContainers
		{ 
		    get { return _AllowContainers; }
			set
			{
			    if (value == _AllowContainers) return;
				_AllowContainers = value;
				NotifyPropertyChanged();//m => this.AllowContainers
			}
		}
        private string _AllowContainers;

        [DataMember]
        public string AllowNonXEntries
		{ 
		    get { return _AllowNonXEntries; }
			set
			{
			    if (value == _AllowNonXEntries) return;
				_AllowNonXEntries = value;
				NotifyPropertyChanged();//m => this.AllowNonXEntries
			}
		}
        private string _AllowNonXEntries;

        [DataMember]
        public string AllowValidateTariffCodes
		{ 
		    get { return _AllowValidateTariffCodes; }
			set
			{
			    if (value == _AllowValidateTariffCodes) return;
				_AllowValidateTariffCodes = value;
				NotifyPropertyChanged();//m => this.AllowValidateTariffCodes
			}
		}
        private string _AllowValidateTariffCodes;

        [DataMember]
        public string AllowCleanBond
		{ 
		    get { return _AllowCleanBond; }
			set
			{
			    if (value == _AllowCleanBond) return;
				_AllowCleanBond = value;
				NotifyPropertyChanged();//m => this.AllowCleanBond
			}
		}
        private string _AllowCleanBond;

        [DataMember]
        public string OrderEntriesBy
		{ 
		    get { return _OrderEntriesBy; }
			set
			{
			    if (value == _OrderEntriesBy) return;
				_OrderEntriesBy = value;
				NotifyPropertyChanged();//m => this.OrderEntriesBy
			}
		}
        private string _OrderEntriesBy;

        [DataMember]
        public System.DateTime OpeningStockDate
		{ 
		    get { return _OpeningStockDate; }
			set
			{
			    if (value == _OpeningStockDate) return;
				_OpeningStockDate = value;
				NotifyPropertyChanged();//m => this.OpeningStockDate
			}
		}
        private System.DateTime _OpeningStockDate;

        [DataMember]
        public string WeightCalculationMethod
		{ 
		    get { return _WeightCalculationMethod; }
			set
			{
			    if (value == _WeightCalculationMethod) return;
				_WeightCalculationMethod = value;
				NotifyPropertyChanged();//m => this.WeightCalculationMethod
			}
		}
        private string _WeightCalculationMethod;

        [DataMember]
        public Nullable<double> BondQuantum
		{ 
		    get { return _BondQuantum; }
			set
			{
			    if (value == _BondQuantum) return;
				_BondQuantum = value;
				NotifyPropertyChanged();//m => this.BondQuantum
			}
		}
        private Nullable<double> _BondQuantum;

        [DataMember]
        public string DataFolder
		{ 
		    get { return _DataFolder; }
			set
			{
			    if (value == _DataFolder) return;
				_DataFolder = value;
				NotifyPropertyChanged();//m => this.DataFolder
			}
		}
        private string _DataFolder;

        [DataMember]
        public string CompanyName
		{ 
		    get { return _CompanyName; }
			set
			{
			    if (value == _CompanyName) return;
				_CompanyName = value;
				NotifyPropertyChanged();//m => this.CompanyName
			}
		}
        private string _CompanyName;

        [DataMember]
        public bool IsActive
		{ 
		    get { return _IsActive; }
			set
			{
			    if (value == _IsActive) return;
				_IsActive = value;
				NotifyPropertyChanged();//m => this.IsActive
			}
		}
        private bool _IsActive;

        [DataMember]
        public string Email
		{ 
		    get { return _Email; }
			set
			{
			    if (value == _Email) return;
				_Email = value;
				NotifyPropertyChanged();//m => this.Email
			}
		}
        private string _Email;

        [DataMember]
        public string EmailPassword
		{ 
		    get { return _EmailPassword; }
			set
			{
			    if (value == _EmailPassword) return;
				_EmailPassword = value;
				NotifyPropertyChanged();//m => this.EmailPassword
			}
		}
        private string _EmailPassword;

        [DataMember]
        public string AsycudaLogin
		{ 
		    get { return _AsycudaLogin; }
			set
			{
			    if (value == _AsycudaLogin) return;
				_AsycudaLogin = value;
				NotifyPropertyChanged();//m => this.AsycudaLogin
			}
		}
        private string _AsycudaLogin;

        [DataMember]
        public string AsycudaPassword
		{ 
		    get { return _AsycudaPassword; }
			set
			{
			    if (value == _AsycudaPassword) return;
				_AsycudaPassword = value;
				NotifyPropertyChanged();//m => this.AsycudaPassword
			}
		}
        private string _AsycudaPassword;

        [DataMember]
        public Nullable<bool> AssessIM7
		{ 
		    get { return _AssessIM7; }
			set
			{
			    if (value == _AssessIM7) return;
				_AssessIM7 = value;
				NotifyPropertyChanged();//m => this.AssessIM7
			}
		}
        private Nullable<bool> _AssessIM7;

        [DataMember]
        public Nullable<bool> AssessEX
		{ 
		    get { return _AssessEX; }
			set
			{
			    if (value == _AssessEX) return;
				_AssessEX = value;
				NotifyPropertyChanged();//m => this.AssessEX
			}
		}
        private Nullable<bool> _AssessEX;

        [DataMember]
        public Nullable<bool> TestMode
		{ 
		    get { return _TestMode; }
			set
			{
			    if (value == _TestMode) return;
				_TestMode = value;
				NotifyPropertyChanged();//m => this.TestMode
			}
		}
        private Nullable<bool> _TestMode;

        [DataMember]
        public int BondTypeId
		{ 
		    get { return _BondTypeId; }
			set
			{
			    if (value == _BondTypeId) return;
				_BondTypeId = value;
				NotifyPropertyChanged();//m => this.BondTypeId
			}
		}
        private int _BondTypeId;

        [DataMember]
        public Nullable<bool> RequirePOs
		{ 
		    get { return _RequirePOs; }
			set
			{
			    if (value == _RequirePOs) return;
				_RequirePOs = value;
				NotifyPropertyChanged();//m => this.RequirePOs
			}
		}
        private Nullable<bool> _RequirePOs;

        [DataMember]
        public Nullable<bool> ExportNullTariffCodes
		{ 
		    get { return _ExportNullTariffCodes; }
			set
			{
			    if (value == _ExportNullTariffCodes) return;
				_ExportNullTariffCodes = value;
				NotifyPropertyChanged();//m => this.ExportNullTariffCodes
			}
		}
        private Nullable<bool> _ExportNullTariffCodes;

        [DataMember]
        public Nullable<bool> PreAllocateEx9s
		{ 
		    get { return _PreAllocateEx9s; }
			set
			{
			    if (value == _PreAllocateEx9s) return;
				_PreAllocateEx9s = value;
				NotifyPropertyChanged();//m => this.PreAllocateEx9s
			}
		}
        private Nullable<bool> _PreAllocateEx9s;

        [DataMember]
        public string AllowImportXSales
		{ 
		    get { return _AllowImportXSales; }
			set
			{
			    if (value == _AllowImportXSales) return;
				_AllowImportXSales = value;
				NotifyPropertyChanged();//m => this.AllowImportXSales
			}
		}
        private string _AllowImportXSales;

        [DataMember]
        public Nullable<bool> NotifyUnknownMessages
		{ 
		    get { return _NotifyUnknownMessages; }
			set
			{
			    if (value == _NotifyUnknownMessages) return;
				_NotifyUnknownMessages = value;
				NotifyPropertyChanged();//m => this.NotifyUnknownMessages
			}
		}
        private Nullable<bool> _NotifyUnknownMessages;

        [DataMember]
        public Nullable<bool> ExportExpiredEntries
		{ 
		    get { return _ExportExpiredEntries; }
			set
			{
			    if (value == _ExportExpiredEntries) return;
				_ExportExpiredEntries = value;
				NotifyPropertyChanged();//m => this.ExportExpiredEntries
			}
		}
        private Nullable<bool> _ExportExpiredEntries;

        [DataMember]
        public string AllowAdvanceWareHouse
		{ 
		    get { return _AllowAdvanceWareHouse; }
			set
			{
			    if (value == _AllowAdvanceWareHouse) return;
				_AllowAdvanceWareHouse = value;
				NotifyPropertyChanged();//m => this.AllowAdvanceWareHouse
			}
		}
        private string _AllowAdvanceWareHouse;

       
        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentSetEx> AsycudaDocumentSetEx
		{
		    get { return _AsycudaDocumentSetEx; }
			set
			{
			    if (Equals(value, _AsycudaDocumentSetEx)) return;
				_AsycudaDocumentSetEx = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetEx
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentSetEx> _AsycudaDocumentSetEx = new ChangeTrackingCollection<AsycudaDocumentSetEx>();

        [DataMember]
        public ChangeTrackingCollection<AsycudaDocument> AsycudaDocument
		{
		    get { return _AsycudaDocument; }
			set
			{
			    if (Equals(value, _AsycudaDocument)) return;
				_AsycudaDocument = value;
				NotifyPropertyChanged();//m => this.AsycudaDocument
			}
		}
        private ChangeTrackingCollection<AsycudaDocument> _AsycudaDocument = new ChangeTrackingCollection<AsycudaDocument>();

        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentItem> AsycudaDocumentItem
		{
		    get { return _AsycudaDocumentItem; }
			set
			{
			    if (Equals(value, _AsycudaDocumentItem)) return;
				_AsycudaDocumentItem = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentItem
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentItem> _AsycudaDocumentItem = new ChangeTrackingCollection<AsycudaDocumentItem>();

        [DataMember]
        public ChangeTrackingCollection<InventoryItemX> InventoryItemsEx
		{
		    get { return _InventoryItemsEx; }
			set
			{
			    if (Equals(value, _InventoryItemsEx)) return;
				_InventoryItemsEx = value;
				NotifyPropertyChanged();//m => this.InventoryItemsEx
			}
		}
        private ChangeTrackingCollection<InventoryItemX> _InventoryItemsEx = new ChangeTrackingCollection<InventoryItemX>();

        [DataMember]
        public ChangeTrackingCollection<FileTypes> FileTypes
		{
		    get { return _FileTypes; }
			set
			{
			    if (Equals(value, _FileTypes)) return;
				_FileTypes = value;
				NotifyPropertyChanged();//m => this.FileTypes
			}
		}
        private ChangeTrackingCollection<FileTypes> _FileTypes = new ChangeTrackingCollection<FileTypes>();

        [DataMember]
        public ChangeTrackingCollection<InfoMapping> InfoMapping
		{
		    get { return _InfoMapping; }
			set
			{
			    if (Equals(value, _InfoMapping)) return;
				_InfoMapping = value;
				NotifyPropertyChanged();//m => this.InfoMapping
			}
		}
        private ChangeTrackingCollection<InfoMapping> _InfoMapping = new ChangeTrackingCollection<InfoMapping>();

        [DataMember]
        public ChangeTrackingCollection<EmailMapping> EmailMapping
		{
		    get { return _EmailMapping; }
			set
			{
			    if (Equals(value, _EmailMapping)) return;
				_EmailMapping = value;
				NotifyPropertyChanged();//m => this.EmailMapping
			}
		}
        private ChangeTrackingCollection<EmailMapping> _EmailMapping = new ChangeTrackingCollection<EmailMapping>();

        [DataMember]
        public ChangeTrackingCollection<Declarant> Declarants
		{
		    get { return _Declarants; }
			set
			{
			    if (Equals(value, _Declarants)) return;
				_Declarants = value;
				NotifyPropertyChanged();//m => this.Declarants
			}
		}
        private ChangeTrackingCollection<Declarant> _Declarants = new ChangeTrackingCollection<Declarant>();

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<ApplicationSettings>.Equals(ApplicationSettings other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



