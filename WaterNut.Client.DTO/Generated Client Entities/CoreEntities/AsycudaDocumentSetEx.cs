// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaDocumentSetEx : BaseEntity<AsycudaDocumentSetEx>, ITrackable, IEquatable<AsycudaDocumentSetEx>
    {
        [DataMember]
        public int AsycudaDocumentSetId
		{ 
		    get { return _AsycudaDocumentSetId; }
			set
			{
			    if (value == _AsycudaDocumentSetId) return;
				_AsycudaDocumentSetId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetId
			}
		}
        private int _AsycudaDocumentSetId;

        [DataMember]
        public string Declarant_Reference_Number
		{ 
		    get { return _Declarant_Reference_Number; }
			set
			{
			    if (value == _Declarant_Reference_Number) return;
				_Declarant_Reference_Number = value;
				NotifyPropertyChanged();//m => this.Declarant_Reference_Number
			}
		}
        private string _Declarant_Reference_Number;

        [DataMember]
        public Nullable<double> Exchange_Rate
		{ 
		    get { return _Exchange_Rate; }
			set
			{
			    if (value == _Exchange_Rate) return;
				_Exchange_Rate = value;
				NotifyPropertyChanged();//m => this.Exchange_Rate
			}
		}
        private Nullable<double> _Exchange_Rate;

        [DataMember]
        public Nullable<int> Customs_ProcedureId
		{ 
		    get { return _Customs_ProcedureId; }
			set
			{
			    if (value == _Customs_ProcedureId) return;
				_Customs_ProcedureId = value;
				NotifyPropertyChanged();//m => this.Customs_ProcedureId
			}
		}
        private Nullable<int> _Customs_ProcedureId;

        [DataMember]
        public string Country_of_origin_code
		{ 
		    get { return _Country_of_origin_code; }
			set
			{
			    if (value == _Country_of_origin_code) return;
				_Country_of_origin_code = value;
				NotifyPropertyChanged();//m => this.Country_of_origin_code
			}
		}
        private string _Country_of_origin_code;

        [DataMember]
        public string Currency_Code
		{ 
		    get { return _Currency_Code; }
			set
			{
			    if (value == _Currency_Code) return;
				_Currency_Code = value;
				NotifyPropertyChanged();//m => this.Currency_Code
			}
		}
        private string _Currency_Code;

        [DataMember]
        public int Document_TypeId
		{ 
		    get { return _Document_TypeId; }
			set
			{
			    if (value == _Document_TypeId) return;
				_Document_TypeId = value;
				NotifyPropertyChanged();//m => this.Document_TypeId
			}
		}
        private int _Document_TypeId;

        [DataMember]
        public string Description
		{ 
		    get { return _Description; }
			set
			{
			    if (value == _Description) return;
				_Description = value;
				NotifyPropertyChanged();//m => this.Description
			}
		}
        private string _Description;

        [DataMember]
        public string Manifest_Number
		{ 
		    get { return _Manifest_Number; }
			set
			{
			    if (value == _Manifest_Number) return;
				_Manifest_Number = value;
				NotifyPropertyChanged();//m => this.Manifest_Number
			}
		}
        private string _Manifest_Number;

        [DataMember]
        public string BLNumber
		{ 
		    get { return _BLNumber; }
			set
			{
			    if (value == _BLNumber) return;
				_BLNumber = value;
				NotifyPropertyChanged();//m => this.BLNumber
			}
		}
        private string _BLNumber;

        [DataMember]
        public Nullable<System.DateTime> EntryTimeStamp
		{ 
		    get { return _EntryTimeStamp; }
			set
			{
			    if (value == _EntryTimeStamp) return;
				_EntryTimeStamp = value;
				NotifyPropertyChanged();//m => this.EntryTimeStamp
			}
		}
        private Nullable<System.DateTime> _EntryTimeStamp;

        [DataMember]
        public Nullable<int> StartingFileCount
		{ 
		    get { return _StartingFileCount; }
			set
			{
			    if (value == _StartingFileCount) return;
				_StartingFileCount = value;
				NotifyPropertyChanged();//m => this.StartingFileCount
			}
		}
        private Nullable<int> _StartingFileCount;

        [DataMember]
        public Nullable<int> DocumentsCount
		{ 
		    get { return _DocumentsCount; }
			set
			{
			    if (value == _DocumentsCount) return;
				_DocumentsCount = value;
				NotifyPropertyChanged();//m => this.DocumentsCount
			}
		}
        private Nullable<int> _DocumentsCount;

        [DataMember]
        public string ApportionMethod
		{ 
		    get { return _ApportionMethod; }
			set
			{
			    if (value == _ApportionMethod) return;
				_ApportionMethod = value;
				NotifyPropertyChanged();//m => this.ApportionMethod
			}
		}
        private string _ApportionMethod;

        [DataMember]
        public Nullable<double> TotalCIF
		{ 
		    get { return _TotalCIF; }
			set
			{
			    if (value == _TotalCIF) return;
				_TotalCIF = value;
				NotifyPropertyChanged();//m => this.TotalCIF
			}
		}
        private Nullable<double> _TotalCIF;

        [DataMember]
        public Nullable<double> TotalFreight
		{ 
		    get { return _TotalFreight; }
			set
			{
			    if (value == _TotalFreight) return;
				_TotalFreight = value;
				NotifyPropertyChanged();//m => this.TotalFreight
			}
		}
        private Nullable<double> _TotalFreight;

        [DataMember]
        public Nullable<double> TotalWeight
		{ 
		    get { return _TotalWeight; }
			set
			{
			    if (value == _TotalWeight) return;
				_TotalWeight = value;
				NotifyPropertyChanged();//m => this.TotalWeight
			}
		}
        private Nullable<double> _TotalWeight;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public Nullable<int> TotalPackages
		{ 
		    get { return _TotalPackages; }
			set
			{
			    if (value == _TotalPackages) return;
				_TotalPackages = value;
				NotifyPropertyChanged();//m => this.TotalPackages
			}
		}
        private Nullable<int> _TotalPackages;

        [DataMember]
        public Nullable<int> LastFileNumber
		{ 
		    get { return _LastFileNumber; }
			set
			{
			    if (value == _LastFileNumber) return;
				_LastFileNumber = value;
				NotifyPropertyChanged();//m => this.LastFileNumber
			}
		}
        private Nullable<int> _LastFileNumber;

        [DataMember]
        public Nullable<int> TotalInvoices
		{ 
		    get { return _TotalInvoices; }
			set
			{
			    if (value == _TotalInvoices) return;
				_TotalInvoices = value;
				NotifyPropertyChanged();//m => this.TotalInvoices
			}
		}
        private Nullable<int> _TotalInvoices;

        [DataMember]
        public Nullable<int> ImportedInvoices
		{ 
		    get { return _ImportedInvoices; }
			set
			{
			    if (value == _ImportedInvoices) return;
				_ImportedInvoices = value;
				NotifyPropertyChanged();//m => this.ImportedInvoices
			}
		}
        private Nullable<int> _ImportedInvoices;

        [DataMember]
        public Nullable<int> ClassifiedLines
		{ 
		    get { return _ClassifiedLines; }
			set
			{
			    if (value == _ClassifiedLines) return;
				_ClassifiedLines = value;
				NotifyPropertyChanged();//m => this.ClassifiedLines
			}
		}
        private Nullable<int> _ClassifiedLines;

        [DataMember]
        public Nullable<int> TotalLines
		{ 
		    get { return _TotalLines; }
			set
			{
			    if (value == _TotalLines) return;
				_TotalLines = value;
				NotifyPropertyChanged();//m => this.TotalLines
			}
		}
        private Nullable<int> _TotalLines;

        [DataMember]
        public Nullable<int> MaxLines
		{ 
		    get { return _MaxLines; }
			set
			{
			    if (value == _MaxLines) return;
				_MaxLines = value;
				NotifyPropertyChanged();//m => this.MaxLines
			}
		}
        private Nullable<int> _MaxLines;

        [DataMember]
        public string LocationOfGoods
		{ 
		    get { return _LocationOfGoods; }
			set
			{
			    if (value == _LocationOfGoods) return;
				_LocationOfGoods = value;
				NotifyPropertyChanged();//m => this.LocationOfGoods
			}
		}
        private string _LocationOfGoods;

        [DataMember]
        public Nullable<int> LicenseLines
		{ 
		    get { return _LicenseLines; }
			set
			{
			    if (value == _LicenseLines) return;
				_LicenseLines = value;
				NotifyPropertyChanged();//m => this.LicenseLines
			}
		}
        private Nullable<int> _LicenseLines;

        [DataMember]
        public Nullable<double> InvoiceTotal
		{ 
		    get { return _InvoiceTotal; }
			set
			{
			    if (value == _InvoiceTotal) return;
				_InvoiceTotal = value;
				NotifyPropertyChanged();//m => this.InvoiceTotal
			}
		}
        private Nullable<double> _InvoiceTotal;

        [DataMember]
        public string FreightCurrencyCode
		{ 
		    get { return _FreightCurrencyCode; }
			set
			{
			    if (value == _FreightCurrencyCode) return;
				_FreightCurrencyCode = value;
				NotifyPropertyChanged();//m => this.FreightCurrencyCode
			}
		}
        private string _FreightCurrencyCode;

        [DataMember]
        public Nullable<int> QtyLicensesRequired
		{ 
		    get { return _QtyLicensesRequired; }
			set
			{
			    if (value == _QtyLicensesRequired) return;
				_QtyLicensesRequired = value;
				NotifyPropertyChanged();//m => this.QtyLicensesRequired
			}
		}
        private Nullable<int> _QtyLicensesRequired;

        [DataMember]
        public Nullable<int> EntryPackages
		{ 
		    get { return _EntryPackages; }
			set
			{
			    if (value == _EntryPackages) return;
				_EntryPackages = value;
				NotifyPropertyChanged();//m => this.EntryPackages
			}
		}
        private Nullable<int> _EntryPackages;

        [DataMember]
        public double CurrencyRate
		{ 
		    get { return _CurrencyRate; }
			set
			{
			    if (value == _CurrencyRate) return;
				_CurrencyRate = value;
				NotifyPropertyChanged();//m => this.CurrencyRate
			}
		}
        private double _CurrencyRate;

        [DataMember]
        public double FreightCurrencyRate
		{ 
		    get { return _FreightCurrencyRate; }
			set
			{
			    if (value == _FreightCurrencyRate) return;
				_FreightCurrencyRate = value;
				NotifyPropertyChanged();//m => this.FreightCurrencyRate
			}
		}
        private double _FreightCurrencyRate;

        [DataMember]
        public Nullable<int> ExpectedEntries
		{ 
		    get { return _ExpectedEntries; }
			set
			{
			    if (value == _ExpectedEntries) return;
				_ExpectedEntries = value;
				NotifyPropertyChanged();//m => this.ExpectedEntries
			}
		}
        private Nullable<int> _ExpectedEntries;

       
        [DataMember]
        public ChangeTrackingCollection<AsycudaDocument> AsycudaDocuments
		{
		    get { return _AsycudaDocuments; }
			set
			{
			    if (Equals(value, _AsycudaDocuments)) return;
				_AsycudaDocuments = value;
				NotifyPropertyChanged();//m => this.AsycudaDocuments
			}
		}
        private ChangeTrackingCollection<AsycudaDocument> _AsycudaDocuments = new ChangeTrackingCollection<AsycudaDocument>();

        [DataMember]
        public ChangeTrackingCollection<LicenceSummary> LicenceSummary
		{
		    get { return _LicenceSummary; }
			set
			{
			    if (Equals(value, _LicenceSummary)) return;
				_LicenceSummary = value;
				NotifyPropertyChanged();//m => this.LicenceSummary
			}
		}
        private ChangeTrackingCollection<LicenceSummary> _LicenceSummary = new ChangeTrackingCollection<LicenceSummary>();

        [DataMember]
        public ApplicationSettings ApplicationSettings
		{
		    get { return _ApplicationSettings; }
			set
			{
			    if (value == _ApplicationSettings) return;
				_ApplicationSettings = value;
                ApplicationSettingsChangeTracker = _ApplicationSettings == null ? null
                    : new ChangeTrackingCollection<ApplicationSettings> { _ApplicationSettings };
				NotifyPropertyChanged();//m => this.ApplicationSettings
			}
		}
        private ApplicationSettings _ApplicationSettings;
        private ChangeTrackingCollection<ApplicationSettings> ApplicationSettingsChangeTracker { get; set; }

        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentSet_Attachments> AsycudaDocumentSet_Attachments
		{
		    get { return _AsycudaDocumentSet_Attachments; }
			set
			{
			    if (Equals(value, _AsycudaDocumentSet_Attachments)) return;
				_AsycudaDocumentSet_Attachments = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSet_Attachments
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentSet_Attachments> _AsycudaDocumentSet_Attachments = new ChangeTrackingCollection<AsycudaDocumentSet_Attachments>();

        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentSetEntryDataEx> AsycudaDocumentSetEntryDataEx
		{
		    get { return _AsycudaDocumentSetEntryDataEx; }
			set
			{
			    if (Equals(value, _AsycudaDocumentSetEntryDataEx)) return;
				_AsycudaDocumentSetEntryDataEx = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetEntryDataEx
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentSetEntryDataEx> _AsycudaDocumentSetEntryDataEx = new ChangeTrackingCollection<AsycudaDocumentSetEntryDataEx>();

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<AsycudaDocumentSetEx>.Equals(AsycudaDocumentSetEx other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



