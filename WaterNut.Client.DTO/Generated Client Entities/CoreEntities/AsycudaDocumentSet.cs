// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaDocumentSet : BaseEntity<AsycudaDocumentSet>, ITrackable, IEquatable<AsycudaDocumentSet>
    {
        [DataMember]
        public int AsycudaDocumentSetId
		{ 
		    get { return _AsycudaDocumentSetId; }
			set
			{
			    if (value == _AsycudaDocumentSetId) return;
				_AsycudaDocumentSetId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetId
			}
		}
        private int _AsycudaDocumentSetId;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public string Declarant_Reference_Number
		{ 
		    get { return _Declarant_Reference_Number; }
			set
			{
			    if (value == _Declarant_Reference_Number) return;
				_Declarant_Reference_Number = value;
				NotifyPropertyChanged();//m => this.Declarant_Reference_Number
			}
		}
        private string _Declarant_Reference_Number;

        [DataMember]
        public double Exchange_Rate
		{ 
		    get { return _Exchange_Rate; }
			set
			{
			    if (value == _Exchange_Rate) return;
				_Exchange_Rate = value;
				NotifyPropertyChanged();//m => this.Exchange_Rate
			}
		}
        private double _Exchange_Rate;

        [DataMember]
        public Nullable<int> Customs_ProcedureId
		{ 
		    get { return _Customs_ProcedureId; }
			set
			{
			    if (value == _Customs_ProcedureId) return;
				_Customs_ProcedureId = value;
				NotifyPropertyChanged();//m => this.Customs_ProcedureId
			}
		}
        private Nullable<int> _Customs_ProcedureId;

        [DataMember]
        public string Country_of_origin_code
		{ 
		    get { return _Country_of_origin_code; }
			set
			{
			    if (value == _Country_of_origin_code) return;
				_Country_of_origin_code = value;
				NotifyPropertyChanged();//m => this.Country_of_origin_code
			}
		}
        private string _Country_of_origin_code;

        [DataMember]
        public string Currency_Code
		{ 
		    get { return _Currency_Code; }
			set
			{
			    if (value == _Currency_Code) return;
				_Currency_Code = value;
				NotifyPropertyChanged();//m => this.Currency_Code
			}
		}
        private string _Currency_Code;

        [DataMember]
        public string Description
		{ 
		    get { return _Description; }
			set
			{
			    if (value == _Description) return;
				_Description = value;
				NotifyPropertyChanged();//m => this.Description
			}
		}
        private string _Description;

        [DataMember]
        public string Manifest_Number
		{ 
		    get { return _Manifest_Number; }
			set
			{
			    if (value == _Manifest_Number) return;
				_Manifest_Number = value;
				NotifyPropertyChanged();//m => this.Manifest_Number
			}
		}
        private string _Manifest_Number;

        [DataMember]
        public string BLNumber
		{ 
		    get { return _BLNumber; }
			set
			{
			    if (value == _BLNumber) return;
				_BLNumber = value;
				NotifyPropertyChanged();//m => this.BLNumber
			}
		}
        private string _BLNumber;

        [DataMember]
        public Nullable<System.DateTime> EntryTimeStamp
		{ 
		    get { return _EntryTimeStamp; }
			set
			{
			    if (value == _EntryTimeStamp) return;
				_EntryTimeStamp = value;
				NotifyPropertyChanged();//m => this.EntryTimeStamp
			}
		}
        private Nullable<System.DateTime> _EntryTimeStamp;

        [DataMember]
        public Nullable<int> StartingFileCount
		{ 
		    get { return _StartingFileCount; }
			set
			{
			    if (value == _StartingFileCount) return;
				_StartingFileCount = value;
				NotifyPropertyChanged();//m => this.StartingFileCount
			}
		}
        private Nullable<int> _StartingFileCount;

        [DataMember]
        public string ApportionMethod
		{ 
		    get { return _ApportionMethod; }
			set
			{
			    if (value == _ApportionMethod) return;
				_ApportionMethod = value;
				NotifyPropertyChanged();//m => this.ApportionMethod
			}
		}
        private string _ApportionMethod;

        [DataMember]
        public Nullable<double> TotalWeight
		{ 
		    get { return _TotalWeight; }
			set
			{
			    if (value == _TotalWeight) return;
				_TotalWeight = value;
				NotifyPropertyChanged();//m => this.TotalWeight
			}
		}
        private Nullable<double> _TotalWeight;

        [DataMember]
        public Nullable<double> TotalFreight
		{ 
		    get { return _TotalFreight; }
			set
			{
			    if (value == _TotalFreight) return;
				_TotalFreight = value;
				NotifyPropertyChanged();//m => this.TotalFreight
			}
		}
        private Nullable<double> _TotalFreight;

        [DataMember]
        public Nullable<int> TotalPackages
		{ 
		    get { return _TotalPackages; }
			set
			{
			    if (value == _TotalPackages) return;
				_TotalPackages = value;
				NotifyPropertyChanged();//m => this.TotalPackages
			}
		}
        private Nullable<int> _TotalPackages;

        [DataMember]
        public Nullable<int> LastFileNumber
		{ 
		    get { return _LastFileNumber; }
			set
			{
			    if (value == _LastFileNumber) return;
				_LastFileNumber = value;
				NotifyPropertyChanged();//m => this.LastFileNumber
			}
		}
        private Nullable<int> _LastFileNumber;

        [DataMember]
        public Nullable<int> TotalInvoices
		{ 
		    get { return _TotalInvoices; }
			set
			{
			    if (value == _TotalInvoices) return;
				_TotalInvoices = value;
				NotifyPropertyChanged();//m => this.TotalInvoices
			}
		}
        private Nullable<int> _TotalInvoices;

        [DataMember]
        public Nullable<int> MaxLines
		{ 
		    get { return _MaxLines; }
			set
			{
			    if (value == _MaxLines) return;
				_MaxLines = value;
				NotifyPropertyChanged();//m => this.MaxLines
			}
		}
        private Nullable<int> _MaxLines;

        [DataMember]
        public string LocationOfGoods
		{ 
		    get { return _LocationOfGoods; }
			set
			{
			    if (value == _LocationOfGoods) return;
				_LocationOfGoods = value;
				NotifyPropertyChanged();//m => this.LocationOfGoods
			}
		}
        private string _LocationOfGoods;

        [DataMember]
        public string FreightCurrencyCode
		{ 
		    get { return _FreightCurrencyCode; }
			set
			{
			    if (value == _FreightCurrencyCode) return;
				_FreightCurrencyCode = value;
				NotifyPropertyChanged();//m => this.FreightCurrencyCode
			}
		}
        private string _FreightCurrencyCode;

        [DataMember]
        public string Office
		{ 
		    get { return _Office; }
			set
			{
			    if (value == _Office) return;
				_Office = value;
				NotifyPropertyChanged();//m => this.Office
			}
		}
        private string _Office;

        [DataMember]
        public Nullable<int> UpgradeKey
		{ 
		    get { return _UpgradeKey; }
			set
			{
			    if (value == _UpgradeKey) return;
				_UpgradeKey = value;
				NotifyPropertyChanged();//m => this.UpgradeKey
			}
		}
        private Nullable<int> _UpgradeKey;

        [DataMember]
        public Nullable<int> ExpectedEntries
		{ 
		    get { return _ExpectedEntries; }
			set
			{
			    if (value == _ExpectedEntries) return;
				_ExpectedEntries = value;
				NotifyPropertyChanged();//m => this.ExpectedEntries
			}
		}
        private Nullable<int> _ExpectedEntries;

        [DataMember]
        public string PackageType
		{ 
		    get { return _PackageType; }
			set
			{
			    if (value == _PackageType) return;
				_PackageType = value;
				NotifyPropertyChanged();//m => this.PackageType
			}
		}
        private string _PackageType;

       
        [DataMember]
        public ChangeTrackingCollection<ActionDocSetLogs> ActionDocSetLogs
		{
		    get { return _ActionDocSetLogs; }
			set
			{
			    if (Equals(value, _ActionDocSetLogs)) return;
				_ActionDocSetLogs = value;
				NotifyPropertyChanged();//m => this.ActionDocSetLogs
			}
		}
        private ChangeTrackingCollection<ActionDocSetLogs> _ActionDocSetLogs = new ChangeTrackingCollection<ActionDocSetLogs>();

        [DataMember]
        public ApplicationSettings ApplicationSettings
		{
		    get { return _ApplicationSettings; }
			set
			{
			    if (value == _ApplicationSettings) return;
				_ApplicationSettings = value;
                ApplicationSettingsChangeTracker = _ApplicationSettings == null ? null
                    : new ChangeTrackingCollection<ApplicationSettings> { _ApplicationSettings };
				NotifyPropertyChanged();//m => this.ApplicationSettings
			}
		}
        private ApplicationSettings _ApplicationSettings;
        private ChangeTrackingCollection<ApplicationSettings> ApplicationSettingsChangeTracker { get; set; }

        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentSet_Attachments> AsycudaDocumentSet_Attachments
		{
		    get { return _AsycudaDocumentSet_Attachments; }
			set
			{
			    if (Equals(value, _AsycudaDocumentSet_Attachments)) return;
				_AsycudaDocumentSet_Attachments = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSet_Attachments
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentSet_Attachments> _AsycudaDocumentSet_Attachments = new ChangeTrackingCollection<AsycudaDocumentSet_Attachments>();

        [DataMember]
        public Customs_Procedure Customs_Procedure
		{
		    get { return _Customs_Procedure; }
			set
			{
			    if (value == _Customs_Procedure) return;
				_Customs_Procedure = value;
                Customs_ProcedureChangeTracker = _Customs_Procedure == null ? null
                    : new ChangeTrackingCollection<Customs_Procedure> { _Customs_Procedure };
				NotifyPropertyChanged();//m => this.Customs_Procedure
			}
		}
        private Customs_Procedure _Customs_Procedure;
        private ChangeTrackingCollection<Customs_Procedure> Customs_ProcedureChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<AsycudaDocumentSet>.Equals(AsycudaDocumentSet other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



