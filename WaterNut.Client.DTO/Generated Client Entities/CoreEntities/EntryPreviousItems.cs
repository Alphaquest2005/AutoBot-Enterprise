// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class EntryPreviousItems : BaseEntity<EntryPreviousItems>, ITrackable, IEquatable<EntryPreviousItems>
    {
        [DataMember]
        public int PreviousItem_Id
		{ 
		    get { return _PreviousItem_Id; }
			set
			{
			    if (value == _PreviousItem_Id) return;
				_PreviousItem_Id = value;
				NotifyPropertyChanged();//m => this.PreviousItem_Id
			}
		}
        private int _PreviousItem_Id;

        [DataMember]
        public int Item_Id
		{ 
		    get { return _Item_Id; }
			set
			{
			    if (value == _Item_Id) return;
				_Item_Id = value;
				NotifyPropertyChanged();//m => this.Item_Id
			}
		}
        private int _Item_Id;

        [DataMember]
        public int EntryPreviousItemId
		{ 
		    get { return _EntryPreviousItemId; }
			set
			{
			    if (value == _EntryPreviousItemId) return;
				_EntryPreviousItemId = value;
				NotifyPropertyChanged();//m => this.EntryPreviousItemId
			}
		}
        private int _EntryPreviousItemId;

       
        [DataMember]
        public AsycudaDocumentItem AsycudaDocumentItem
		{
		    get { return _AsycudaDocumentItem; }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
				_AsycudaDocumentItem = value;
                AsycudaDocumentItemChangeTracker = _AsycudaDocumentItem == null ? null
                    : new ChangeTrackingCollection<AsycudaDocumentItem> { _AsycudaDocumentItem };
				NotifyPropertyChanged();//m => this.AsycudaDocumentItem
			}
		}
        private AsycudaDocumentItem _AsycudaDocumentItem;
        private ChangeTrackingCollection<AsycudaDocumentItem> AsycudaDocumentItemChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<EntryPreviousItems>.Equals(EntryPreviousItems other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



