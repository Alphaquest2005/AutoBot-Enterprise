// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaDocumentItemEntryDataDetails : BaseEntity<AsycudaDocumentItemEntryDataDetails>, ITrackable, IEquatable<AsycudaDocumentItemEntryDataDetails>
    {
        [DataMember]
        public int EntryDataDetailsId
		{ 
		    get { return _EntryDataDetailsId; }
			set
			{
			    if (value == _EntryDataDetailsId) return;
				_EntryDataDetailsId = value;
				NotifyPropertyChanged();//m => this.EntryDataDetailsId
			}
		}
        private int _EntryDataDetailsId;

        [DataMember]
        public int Item_Id
		{ 
		    get { return _Item_Id; }
			set
			{
			    if (value == _Item_Id) return;
				_Item_Id = value;
				NotifyPropertyChanged();//m => this.Item_Id
			}
		}
        private int _Item_Id;

        [DataMember]
        public string ItemNumber
		{ 
		    get { return _ItemNumber; }
			set
			{
			    if (value == _ItemNumber) return;
				_ItemNumber = value;
				NotifyPropertyChanged();//m => this.ItemNumber
			}
		}
        private string _ItemNumber;

        [DataMember]
        public string key
		{ 
		    get { return _key; }
			set
			{
			    if (value == _key) return;
				_key = value;
				NotifyPropertyChanged();//m => this.key
			}
		}
        private string _key;

        [DataMember]
        public string DocumentType
		{ 
		    get { return _DocumentType; }
			set
			{
			    if (value == _DocumentType) return;
				_DocumentType = value;
				NotifyPropertyChanged();//m => this.DocumentType
			}
		}
        private string _DocumentType;

        [DataMember]
        public Nullable<double> Quantity
		{ 
		    get { return _Quantity; }
			set
			{
			    if (value == _Quantity) return;
				_Quantity = value;
				NotifyPropertyChanged();//m => this.Quantity
			}
		}
        private Nullable<double> _Quantity;

        [DataMember]
        public bool ImportComplete
		{ 
		    get { return _ImportComplete; }
			set
			{
			    if (value == _ImportComplete) return;
				_ImportComplete = value;
				NotifyPropertyChanged();//m => this.ImportComplete
			}
		}
        private bool _ImportComplete;

        [DataMember]
        public int EntryData_Id
		{ 
		    get { return _EntryData_Id; }
			set
			{
			    if (value == _EntryData_Id) return;
				_EntryData_Id = value;
				NotifyPropertyChanged();//m => this.EntryData_Id
			}
		}
        private int _EntryData_Id;

        [DataMember]
        public string CustomsProcedure
		{ 
		    get { return _CustomsProcedure; }
			set
			{
			    if (value == _CustomsProcedure) return;
				_CustomsProcedure = value;
				NotifyPropertyChanged();//m => this.CustomsProcedure
			}
		}
        private string _CustomsProcedure;

        [DataMember]
        public int Asycuda_id
		{ 
		    get { return _Asycuda_id; }
			set
			{
			    if (value == _Asycuda_id) return;
				_Asycuda_id = value;
				NotifyPropertyChanged();//m => this.Asycuda_id
			}
		}
        private int _Asycuda_id;

        [DataMember]
        public string EntryDataType
		{ 
		    get { return _EntryDataType; }
			set
			{
			    if (value == _EntryDataType) return;
				_EntryDataType = value;
				NotifyPropertyChanged();//m => this.EntryDataType
			}
		}
        private string _EntryDataType;

       
        [DataMember]
        public AsycudaDocumentItem AsycudaDocumentItem
		{
		    get { return _AsycudaDocumentItem; }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
				_AsycudaDocumentItem = value;
                AsycudaDocumentItemChangeTracker = _AsycudaDocumentItem == null ? null
                    : new ChangeTrackingCollection<AsycudaDocumentItem> { _AsycudaDocumentItem };
				NotifyPropertyChanged();//m => this.AsycudaDocumentItem
			}
		}
        private AsycudaDocumentItem _AsycudaDocumentItem;
        private ChangeTrackingCollection<AsycudaDocumentItem> AsycudaDocumentItemChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<AsycudaDocumentItemEntryDataDetails>.Equals(AsycudaDocumentItemEntryDataDetails other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



