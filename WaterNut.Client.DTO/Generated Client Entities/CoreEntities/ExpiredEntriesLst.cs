// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class ExpiredEntriesLst : BaseEntity<ExpiredEntriesLst>, ITrackable, IEquatable<ExpiredEntriesLst>
    {
        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public string Office
		{ 
		    get { return _Office; }
			set
			{
			    if (value == _Office) return;
				_Office = value;
				NotifyPropertyChanged();//m => this.Office
			}
		}
        private string _Office;

        [DataMember]
        public string RegistrationSerial
		{ 
		    get { return _RegistrationSerial; }
			set
			{
			    if (value == _RegistrationSerial) return;
				_RegistrationSerial = value;
				NotifyPropertyChanged();//m => this.RegistrationSerial
			}
		}
        private string _RegistrationSerial;

        [DataMember]
        public string RegistrationNumber
		{ 
		    get { return _RegistrationNumber; }
			set
			{
			    if (value == _RegistrationNumber) return;
				_RegistrationNumber = value;
				NotifyPropertyChanged();//m => this.RegistrationNumber
			}
		}
        private string _RegistrationNumber;

        [DataMember]
        public string RegistrationDate
		{ 
		    get { return _RegistrationDate; }
			set
			{
			    if (value == _RegistrationDate) return;
				_RegistrationDate = value;
				NotifyPropertyChanged();//m => this.RegistrationDate
			}
		}
        private string _RegistrationDate;

        [DataMember]
        public string AssessmentSerial
		{ 
		    get { return _AssessmentSerial; }
			set
			{
			    if (value == _AssessmentSerial) return;
				_AssessmentSerial = value;
				NotifyPropertyChanged();//m => this.AssessmentSerial
			}
		}
        private string _AssessmentSerial;

        [DataMember]
        public string AssessmentNumber
		{ 
		    get { return _AssessmentNumber; }
			set
			{
			    if (value == _AssessmentNumber) return;
				_AssessmentNumber = value;
				NotifyPropertyChanged();//m => this.AssessmentNumber
			}
		}
        private string _AssessmentNumber;

        [DataMember]
        public string AssessmentDate
		{ 
		    get { return _AssessmentDate; }
			set
			{
			    if (value == _AssessmentDate) return;
				_AssessmentDate = value;
				NotifyPropertyChanged();//m => this.AssessmentDate
			}
		}
        private string _AssessmentDate;

        [DataMember]
        public string DeclarantCode
		{ 
		    get { return _DeclarantCode; }
			set
			{
			    if (value == _DeclarantCode) return;
				_DeclarantCode = value;
				NotifyPropertyChanged();//m => this.DeclarantCode
			}
		}
        private string _DeclarantCode;

        [DataMember]
        public string DeclarantReference
		{ 
		    get { return _DeclarantReference; }
			set
			{
			    if (value == _DeclarantReference) return;
				_DeclarantReference = value;
				NotifyPropertyChanged();//m => this.DeclarantReference
			}
		}
        private string _DeclarantReference;

        [DataMember]
        public string Exporter
		{ 
		    get { return _Exporter; }
			set
			{
			    if (value == _Exporter) return;
				_Exporter = value;
				NotifyPropertyChanged();//m => this.Exporter
			}
		}
        private string _Exporter;

        [DataMember]
        public string Consignee
		{ 
		    get { return _Consignee; }
			set
			{
			    if (value == _Consignee) return;
				_Consignee = value;
				NotifyPropertyChanged();//m => this.Consignee
			}
		}
        private string _Consignee;

        [DataMember]
        public string Expiration
		{ 
		    get { return _Expiration; }
			set
			{
			    if (value == _Expiration) return;
				_Expiration = value;
				NotifyPropertyChanged();//m => this.Expiration
			}
		}
        private string _Expiration;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public string GeneralProcedure
		{ 
		    get { return _GeneralProcedure; }
			set
			{
			    if (value == _GeneralProcedure) return;
				_GeneralProcedure = value;
				NotifyPropertyChanged();//m => this.GeneralProcedure
			}
		}
        private string _GeneralProcedure;

       
   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<ExpiredEntriesLst>.Equals(ExpiredEntriesLst other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



