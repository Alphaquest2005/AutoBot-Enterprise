// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CoreEntities.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaDocumentSet_Attachments : BaseEntity<AsycudaDocumentSet_Attachments>, ITrackable, IEquatable<AsycudaDocumentSet_Attachments>
    {
        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

        [DataMember]
        public int AttachmentId
		{ 
		    get { return _AttachmentId; }
			set
			{
			    if (value == _AttachmentId) return;
				_AttachmentId = value;
				NotifyPropertyChanged();//m => this.AttachmentId
			}
		}
        private int _AttachmentId;

        [DataMember]
        public int AsycudaDocumentSetId
		{ 
		    get { return _AsycudaDocumentSetId; }
			set
			{
			    if (value == _AsycudaDocumentSetId) return;
				_AsycudaDocumentSetId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetId
			}
		}
        private int _AsycudaDocumentSetId;

        [DataMember]
        public bool DocumentSpecific
		{ 
		    get { return _DocumentSpecific; }
			set
			{
			    if (value == _DocumentSpecific) return;
				_DocumentSpecific = value;
				NotifyPropertyChanged();//m => this.DocumentSpecific
			}
		}
        private bool _DocumentSpecific;

        [DataMember]
        public System.DateTime FileDate
		{ 
		    get { return _FileDate; }
			set
			{
			    if (value == _FileDate) return;
				_FileDate = value;
				NotifyPropertyChanged();//m => this.FileDate
			}
		}
        private System.DateTime _FileDate;

        [DataMember]
        public Nullable<int> FileTypeId
		{ 
		    get { return _FileTypeId; }
			set
			{
			    if (value == _FileTypeId) return;
				_FileTypeId = value;
				NotifyPropertyChanged();//m => this.FileTypeId
			}
		}
        private Nullable<int> _FileTypeId;

        [DataMember]
        public string EmailId
		{ 
		    get { return _EmailId; }
			set
			{
			    if (value == _EmailId) return;
				_EmailId = value;
				NotifyPropertyChanged();//m => this.EmailId
			}
		}
        private string _EmailId;

       
        [DataMember]
        public Attachments Attachments
		{
		    get { return _Attachments; }
			set
			{
			    if (value == _Attachments) return;
				_Attachments = value;
                AttachmentsChangeTracker = _Attachments == null ? null
                    : new ChangeTrackingCollection<Attachments> { _Attachments };
				NotifyPropertyChanged();//m => this.Attachments
			}
		}
        private Attachments _Attachments;
        private ChangeTrackingCollection<Attachments> AttachmentsChangeTracker { get; set; }

        [DataMember]
        public AsycudaDocumentSetEx AsycudaDocumentSetEx
		{
		    get { return _AsycudaDocumentSetEx; }
			set
			{
			    if (value == _AsycudaDocumentSetEx) return;
				_AsycudaDocumentSetEx = value;
                AsycudaDocumentSetExChangeTracker = _AsycudaDocumentSetEx == null ? null
                    : new ChangeTrackingCollection<AsycudaDocumentSetEx> { _AsycudaDocumentSetEx };
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetEx
			}
		}
        private AsycudaDocumentSetEx _AsycudaDocumentSetEx;
        private ChangeTrackingCollection<AsycudaDocumentSetEx> AsycudaDocumentSetExChangeTracker { get; set; }

        [DataMember]
        public FileTypes FileTypes
		{
		    get { return _FileTypes; }
			set
			{
			    if (value == _FileTypes) return;
				_FileTypes = value;
                FileTypesChangeTracker = _FileTypes == null ? null
                    : new ChangeTrackingCollection<FileTypes> { _FileTypes };
				NotifyPropertyChanged();//m => this.FileTypes
			}
		}
        private FileTypes _FileTypes;
        private ChangeTrackingCollection<FileTypes> FileTypesChangeTracker { get; set; }

        [DataMember]
        public ChangeTrackingCollection<AttachmentLog> AttachmentLog
		{
		    get { return _AttachmentLog; }
			set
			{
			    if (Equals(value, _AttachmentLog)) return;
				_AttachmentLog = value;
				NotifyPropertyChanged();//m => this.AttachmentLog
			}
		}
        private ChangeTrackingCollection<AttachmentLog> _AttachmentLog = new ChangeTrackingCollection<AttachmentLog>();

        [DataMember]
        public Emails Emails
		{
		    get { return _Emails; }
			set
			{
			    if (value == _Emails) return;
				_Emails = value;
                EmailsChangeTracker = _Emails == null ? null
                    : new ChangeTrackingCollection<Emails> { _Emails };
				NotifyPropertyChanged();//m => this.Emails
			}
		}
        private Emails _Emails;
        private ChangeTrackingCollection<Emails> EmailsChangeTracker { get; set; }

        [DataMember]
        public AsycudaDocumentSet AsycudaDocumentSet
		{
		    get { return _AsycudaDocumentSet; }
			set
			{
			    if (value == _AsycudaDocumentSet) return;
				_AsycudaDocumentSet = value;
                AsycudaDocumentSetChangeTracker = _AsycudaDocumentSet == null ? null
                    : new ChangeTrackingCollection<AsycudaDocumentSet> { _AsycudaDocumentSet };
				NotifyPropertyChanged();//m => this.AsycudaDocumentSet
			}
		}
        private AsycudaDocumentSet _AsycudaDocumentSet;
        private ChangeTrackingCollection<AsycudaDocumentSet> AsycudaDocumentSetChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<AsycudaDocumentSet_Attachments>.Equals(AsycudaDocumentSet_Attachments other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



