// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace PreviousDocumentQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class PreviousItemsEx : BaseEntity<PreviousItemsEx>, ITrackable, IEquatable<PreviousItemsEx>
    {
        [DataMember]
        public string Packages_number
		{ 
		    get { return _Packages_number; }
			set
			{
			    if (value == _Packages_number) return;
				_Packages_number = value;
				NotifyPropertyChanged();//m => this.Packages_number
			}
		}
        private string _Packages_number;

        [DataMember]
        public string Previous_Packages_number
		{ 
		    get { return _Previous_Packages_number; }
			set
			{
			    if (value == _Previous_Packages_number) return;
				_Previous_Packages_number = value;
				NotifyPropertyChanged();//m => this.Previous_Packages_number
			}
		}
        private string _Previous_Packages_number;

        [DataMember]
        public string Hs_code
		{ 
		    get { return _Hs_code; }
			set
			{
			    if (value == _Hs_code) return;
				_Hs_code = value;
				NotifyPropertyChanged();//m => this.Hs_code
			}
		}
        private string _Hs_code;

        [DataMember]
        public string Commodity_code
		{ 
		    get { return _Commodity_code; }
			set
			{
			    if (value == _Commodity_code) return;
				_Commodity_code = value;
				NotifyPropertyChanged();//m => this.Commodity_code
			}
		}
        private string _Commodity_code;

        [DataMember]
        public string Previous_item_number
		{ 
		    get { return _Previous_item_number; }
			set
			{
			    if (value == _Previous_item_number) return;
				_Previous_item_number = value;
				NotifyPropertyChanged();//m => this.Previous_item_number
			}
		}
        private string _Previous_item_number;

        [DataMember]
        public string Goods_origin
		{ 
		    get { return _Goods_origin; }
			set
			{
			    if (value == _Goods_origin) return;
				_Goods_origin = value;
				NotifyPropertyChanged();//m => this.Goods_origin
			}
		}
        private string _Goods_origin;

        [DataMember]
        public Nullable<decimal> Net_weight
		{ 
		    get { return _Net_weight; }
			set
			{
			    if (value == _Net_weight) return;
				_Net_weight = value;
				NotifyPropertyChanged();//m => this.Net_weight
			}
		}
        private Nullable<decimal> _Net_weight;

        [DataMember]
        public Nullable<decimal> Prev_net_weight
		{ 
		    get { return _Prev_net_weight; }
			set
			{
			    if (value == _Prev_net_weight) return;
				_Prev_net_weight = value;
				NotifyPropertyChanged();//m => this.Prev_net_weight
			}
		}
        private Nullable<decimal> _Prev_net_weight;

        [DataMember]
        public string Prev_reg_ser
		{ 
		    get { return _Prev_reg_ser; }
			set
			{
			    if (value == _Prev_reg_ser) return;
				_Prev_reg_ser = value;
				NotifyPropertyChanged();//m => this.Prev_reg_ser
			}
		}
        private string _Prev_reg_ser;

        [DataMember]
        public string Prev_reg_nbr
		{ 
		    get { return _Prev_reg_nbr; }
			set
			{
			    if (value == _Prev_reg_nbr) return;
				_Prev_reg_nbr = value;
				NotifyPropertyChanged();//m => this.Prev_reg_nbr
			}
		}
        private string _Prev_reg_nbr;

        [DataMember]
        public string Prev_reg_dat
		{ 
		    get { return _Prev_reg_dat; }
			set
			{
			    if (value == _Prev_reg_dat) return;
				_Prev_reg_dat = value;
				NotifyPropertyChanged();//m => this.Prev_reg_dat
			}
		}
        private string _Prev_reg_dat;

        [DataMember]
        public string Prev_reg_cuo
		{ 
		    get { return _Prev_reg_cuo; }
			set
			{
			    if (value == _Prev_reg_cuo) return;
				_Prev_reg_cuo = value;
				NotifyPropertyChanged();//m => this.Prev_reg_cuo
			}
		}
        private string _Prev_reg_cuo;

        [DataMember]
        public decimal Suplementary_Quantity
		{ 
		    get { return _Suplementary_Quantity; }
			set
			{
			    if (value == _Suplementary_Quantity) return;
				_Suplementary_Quantity = value;
				NotifyPropertyChanged();//m => this.Suplementary_Quantity
			}
		}
        private decimal _Suplementary_Quantity;

        [DataMember]
        public double Preveious_suplementary_quantity
		{ 
		    get { return _Preveious_suplementary_quantity; }
			set
			{
			    if (value == _Preveious_suplementary_quantity) return;
				_Preveious_suplementary_quantity = value;
				NotifyPropertyChanged();//m => this.Preveious_suplementary_quantity
			}
		}
        private double _Preveious_suplementary_quantity;

        [DataMember]
        public double Current_value
		{ 
		    get { return _Current_value; }
			set
			{
			    if (value == _Current_value) return;
				_Current_value = value;
				NotifyPropertyChanged();//m => this.Current_value
			}
		}
        private double _Current_value;

        [DataMember]
        public double Previous_value
		{ 
		    get { return _Previous_value; }
			set
			{
			    if (value == _Previous_value) return;
				_Previous_value = value;
				NotifyPropertyChanged();//m => this.Previous_value
			}
		}
        private double _Previous_value;

        [DataMember]
        public string Current_item_number
		{ 
		    get { return _Current_item_number; }
			set
			{
			    if (value == _Current_item_number) return;
				_Current_item_number = value;
				NotifyPropertyChanged();//m => this.Current_item_number
			}
		}
        private string _Current_item_number;

        [DataMember]
        public int PreviousItem_Id
		{ 
		    get { return _PreviousItem_Id; }
			set
			{
			    if (value == _PreviousItem_Id) return;
				_PreviousItem_Id = value;
				NotifyPropertyChanged();//m => this.PreviousItem_Id
			}
		}
        private int _PreviousItem_Id;

        [DataMember]
        public Nullable<int> ASYCUDA_Id
		{ 
		    get { return _ASYCUDA_Id; }
			set
			{
			    if (value == _ASYCUDA_Id) return;
				_ASYCUDA_Id = value;
				NotifyPropertyChanged();//m => this.ASYCUDA_Id
			}
		}
        private Nullable<int> _ASYCUDA_Id;

        [DataMember]
        public double QtyAllocated
		{ 
		    get { return _QtyAllocated; }
			set
			{
			    if (value == _QtyAllocated) return;
				_QtyAllocated = value;
				NotifyPropertyChanged();//m => this.QtyAllocated
			}
		}
        private double _QtyAllocated;

        [DataMember]
        public Nullable<int> PreviousDocumentItemId
		{ 
		    get { return _PreviousDocumentItemId; }
			set
			{
			    if (value == _PreviousDocumentItemId) return;
				_PreviousDocumentItemId = value;
				NotifyPropertyChanged();//m => this.PreviousDocumentItemId
			}
		}
        private Nullable<int> _PreviousDocumentItemId;

        [DataMember]
        public double RndCurrent_Value
		{ 
		    get { return _RndCurrent_Value; }
			set
			{
			    if (value == _RndCurrent_Value) return;
				_RndCurrent_Value = value;
				NotifyPropertyChanged();//m => this.RndCurrent_Value
			}
		}
        private double _RndCurrent_Value;

        [DataMember]
        public string ReferenceNumber
		{ 
		    get { return _ReferenceNumber; }
			set
			{
			    if (value == _ReferenceNumber) return;
				_ReferenceNumber = value;
				NotifyPropertyChanged();//m => this.ReferenceNumber
			}
		}
        private string _ReferenceNumber;

        [DataMember]
        public string CNumber
		{ 
		    get { return _CNumber; }
			set
			{
			    if (value == _CNumber) return;
				_CNumber = value;
				NotifyPropertyChanged();//m => this.CNumber
			}
		}
        private string _CNumber;

        [DataMember]
        public Nullable<System.DateTime> RegistrationDate
		{ 
		    get { return _RegistrationDate; }
			set
			{
			    if (value == _RegistrationDate) return;
				_RegistrationDate = value;
				NotifyPropertyChanged();//m => this.RegistrationDate
			}
		}
        private Nullable<System.DateTime> _RegistrationDate;

        [DataMember]
        public int AsycudaDocumentItemId
		{ 
		    get { return _AsycudaDocumentItemId; }
			set
			{
			    if (value == _AsycudaDocumentItemId) return;
				_AsycudaDocumentItemId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentItemId
			}
		}
        private int _AsycudaDocumentItemId;

        [DataMember]
        public Nullable<System.DateTime> AssessmentDate
		{ 
		    get { return _AssessmentDate; }
			set
			{
			    if (value == _AssessmentDate) return;
				_AssessmentDate = value;
				NotifyPropertyChanged();//m => this.AssessmentDate
			}
		}
        private Nullable<System.DateTime> _AssessmentDate;

        [DataMember]
        public string Prev_decl_HS_spec
		{ 
		    get { return _Prev_decl_HS_spec; }
			set
			{
			    if (value == _Prev_decl_HS_spec) return;
				_Prev_decl_HS_spec = value;
				NotifyPropertyChanged();//m => this.Prev_decl_HS_spec
			}
		}
        private string _Prev_decl_HS_spec;

        [DataMember]
        public double SalesFactor
		{ 
		    get { return _SalesFactor; }
			set
			{
			    if (value == _SalesFactor) return;
				_SalesFactor = value;
				NotifyPropertyChanged();//m => this.SalesFactor
			}
		}
        private double _SalesFactor;

        [DataMember]
        public string DocumentType
		{ 
		    get { return _DocumentType; }
			set
			{
			    if (value == _DocumentType) return;
				_DocumentType = value;
				NotifyPropertyChanged();//m => this.DocumentType
			}
		}
        private string _DocumentType;

        [DataMember]
        public string DutyFreePaid
		{ 
		    get { return _DutyFreePaid; }
			set
			{
			    if (value == _DutyFreePaid) return;
				_DutyFreePaid = value;
				NotifyPropertyChanged();//m => this.DutyFreePaid
			}
		}
        private string _DutyFreePaid;

        [DataMember]
        public string ItemNumber
		{ 
		    get { return _ItemNumber; }
			set
			{
			    if (value == _ItemNumber) return;
				_ItemNumber = value;
				NotifyPropertyChanged();//m => this.ItemNumber
			}
		}
        private string _ItemNumber;

        [DataMember]
        public Nullable<int> pLineNumber
		{ 
		    get { return _pLineNumber; }
			set
			{
			    if (value == _pLineNumber) return;
				_pLineNumber = value;
				NotifyPropertyChanged();//m => this.pLineNumber
			}
		}
        private Nullable<int> _pLineNumber;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public Nullable<double> TotalDutyLiablity
		{ 
		    get { return _TotalDutyLiablity; }
			set
			{
			    if (value == _TotalDutyLiablity) return;
				_TotalDutyLiablity = value;
				NotifyPropertyChanged();//m => this.TotalDutyLiablity
			}
		}
        private Nullable<double> _TotalDutyLiablity;

        [DataMember]
        public Nullable<double> DutyLiablity
		{ 
		    get { return _DutyLiablity; }
			set
			{
			    if (value == _DutyLiablity) return;
				_DutyLiablity = value;
				NotifyPropertyChanged();//m => this.DutyLiablity
			}
		}
        private Nullable<double> _DutyLiablity;

       
        [DataMember]
        public PreviousDocumentItem PreviousDocumentItem
		{
		    get { return _PreviousDocumentItem; }
			set
			{
			    if (value == _PreviousDocumentItem) return;
				_PreviousDocumentItem = value;
                PreviousDocumentItemChangeTracker = _PreviousDocumentItem == null ? null
                    : new ChangeTrackingCollection<PreviousDocumentItem> { _PreviousDocumentItem };
				NotifyPropertyChanged();//m => this.PreviousDocumentItem
			}
		}
        private PreviousDocumentItem _PreviousDocumentItem;
        private ChangeTrackingCollection<PreviousDocumentItem> PreviousDocumentItemChangeTracker { get; set; }

        [DataMember]
        public PreviousDocumentItem AsycudaDocumentItem
		{
		    get { return _AsycudaDocumentItem; }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
				_AsycudaDocumentItem = value;
                AsycudaDocumentItemChangeTracker = _AsycudaDocumentItem == null ? null
                    : new ChangeTrackingCollection<PreviousDocumentItem> { _AsycudaDocumentItem };
				NotifyPropertyChanged();//m => this.AsycudaDocumentItem
			}
		}
        private PreviousDocumentItem _AsycudaDocumentItem;
        private ChangeTrackingCollection<PreviousDocumentItem> AsycudaDocumentItemChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<PreviousItemsEx>.Equals(PreviousItemsEx other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



