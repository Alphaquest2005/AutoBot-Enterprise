// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CounterPointQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class CounterPointPODetails : BaseEntity<CounterPointPODetails>, ITrackable, IEquatable<CounterPointPODetails>
    {
        [DataMember]
        public string PO_NO
		{ 
		    get { return _PO_NO; }
			set
			{
			    if (value == _PO_NO) return;
				_PO_NO = value;
				NotifyPropertyChanged();//m => this.PO_NO
			}
		}
        private string _PO_NO;

        [DataMember]
        public int SEQ_NO
		{ 
		    get { return _SEQ_NO; }
			set
			{
			    if (value == _SEQ_NO) return;
				_SEQ_NO = value;
				NotifyPropertyChanged();//m => this.SEQ_NO
			}
		}
        private int _SEQ_NO;

        [DataMember]
        public string ITEM_NO
		{ 
		    get { return _ITEM_NO; }
			set
			{
			    if (value == _ITEM_NO) return;
				_ITEM_NO = value;
				NotifyPropertyChanged();//m => this.ITEM_NO
			}
		}
        private string _ITEM_NO;

        [DataMember]
        public decimal ORD_QTY
		{ 
		    get { return _ORD_QTY; }
			set
			{
			    if (value == _ORD_QTY) return;
				_ORD_QTY = value;
				NotifyPropertyChanged();//m => this.ORD_QTY
			}
		}
        private decimal _ORD_QTY;

        [DataMember]
        public string ORD_UNIT
		{ 
		    get { return _ORD_UNIT; }
			set
			{
			    if (value == _ORD_UNIT) return;
				_ORD_UNIT = value;
				NotifyPropertyChanged();//m => this.ORD_UNIT
			}
		}
        private string _ORD_UNIT;

        [DataMember]
        public string ITEM_DESCR
		{ 
		    get { return _ITEM_DESCR; }
			set
			{
			    if (value == _ITEM_DESCR) return;
				_ITEM_DESCR = value;
				NotifyPropertyChanged();//m => this.ITEM_DESCR
			}
		}
        private string _ITEM_DESCR;

        [DataMember]
        public decimal ORD_COST
		{ 
		    get { return _ORD_COST; }
			set
			{
			    if (value == _ORD_COST) return;
				_ORD_COST = value;
				NotifyPropertyChanged();//m => this.ORD_COST
			}
		}
        private decimal _ORD_COST;

        [DataMember]
        public Nullable<decimal> UNIT_WEIGHT
		{ 
		    get { return _UNIT_WEIGHT; }
			set
			{
			    if (value == _UNIT_WEIGHT) return;
				_UNIT_WEIGHT = value;
				NotifyPropertyChanged();//m => this.UNIT_WEIGHT
			}
		}
        private Nullable<decimal> _UNIT_WEIGHT;

       
   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<CounterPointPODetails>.Equals(CounterPointPODetails other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



