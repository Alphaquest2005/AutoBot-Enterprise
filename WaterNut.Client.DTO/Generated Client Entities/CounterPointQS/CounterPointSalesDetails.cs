// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace CounterPointQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class CounterPointSalesDetails : BaseEntity<CounterPointSalesDetails>, ITrackable, IEquatable<CounterPointSalesDetails>
    {
        [DataMember]
        public string INVNO
		{ 
		    get { return _INVNO; }
			set
			{
			    if (value == _INVNO) return;
				_INVNO = value;
				NotifyPropertyChanged();//m => this.INVNO
			}
		}
        private string _INVNO;

        [DataMember]
        public Nullable<int> SEQ_NO
		{ 
		    get { return _SEQ_NO; }
			set
			{
			    if (value == _SEQ_NO) return;
				_SEQ_NO = value;
				NotifyPropertyChanged();//m => this.SEQ_NO
			}
		}
        private Nullable<int> _SEQ_NO;

        [DataMember]
        public string ITEM_NO
		{ 
		    get { return _ITEM_NO; }
			set
			{
			    if (value == _ITEM_NO) return;
				_ITEM_NO = value;
				NotifyPropertyChanged();//m => this.ITEM_NO
			}
		}
        private string _ITEM_NO;

        [DataMember]
        public string ITEM_DESCR
		{ 
		    get { return _ITEM_DESCR; }
			set
			{
			    if (value == _ITEM_DESCR) return;
				_ITEM_DESCR = value;
				NotifyPropertyChanged();//m => this.ITEM_DESCR
			}
		}
        private string _ITEM_DESCR;

        [DataMember]
        public Nullable<decimal> QUANTITY
		{ 
		    get { return _QUANTITY; }
			set
			{
			    if (value == _QUANTITY) return;
				_QUANTITY = value;
				NotifyPropertyChanged();//m => this.QUANTITY
			}
		}
        private Nullable<decimal> _QUANTITY;

        [DataMember]
        public Nullable<decimal> COST
		{ 
		    get { return _COST; }
			set
			{
			    if (value == _COST) return;
				_COST = value;
				NotifyPropertyChanged();//m => this.COST
			}
		}
        private Nullable<decimal> _COST;

        [DataMember]
        public string ACCT_NO
		{ 
		    get { return _ACCT_NO; }
			set
			{
			    if (value == _ACCT_NO) return;
				_ACCT_NO = value;
				NotifyPropertyChanged();//m => this.ACCT_NO
			}
		}
        private string _ACCT_NO;

        [DataMember]
        public string CUSTOMER_NAME
		{ 
		    get { return _CUSTOMER_NAME; }
			set
			{
			    if (value == _CUSTOMER_NAME) return;
				_CUSTOMER_NAME = value;
				NotifyPropertyChanged();//m => this.CUSTOMER_NAME
			}
		}
        private string _CUSTOMER_NAME;

        [DataMember]
        public Nullable<System.DateTime> DATE
		{ 
		    get { return _DATE; }
			set
			{
			    if (value == _DATE) return;
				_DATE = value;
				NotifyPropertyChanged();//m => this.DATE
			}
		}
        private Nullable<System.DateTime> _DATE;

        [DataMember]
        public decimal TAX_AMT
		{ 
		    get { return _TAX_AMT; }
			set
			{
			    if (value == _TAX_AMT) return;
				_TAX_AMT = value;
				NotifyPropertyChanged();//m => this.TAX_AMT
			}
		}
        private decimal _TAX_AMT;

        [DataMember]
        public Nullable<decimal> UNIT_WEIGHT
		{ 
		    get { return _UNIT_WEIGHT; }
			set
			{
			    if (value == _UNIT_WEIGHT) return;
				_UNIT_WEIGHT = value;
				NotifyPropertyChanged();//m => this.UNIT_WEIGHT
			}
		}
        private Nullable<decimal> _UNIT_WEIGHT;

        [DataMember]
        public string QTY_UNIT
		{ 
		    get { return _QTY_UNIT; }
			set
			{
			    if (value == _QTY_UNIT) return;
				_QTY_UNIT = value;
				NotifyPropertyChanged();//m => this.QTY_UNIT
			}
		}
        private string _QTY_UNIT;

       
   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<CounterPointSalesDetails>.Equals(CounterPointSalesDetails other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



