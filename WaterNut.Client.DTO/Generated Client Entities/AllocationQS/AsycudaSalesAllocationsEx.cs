// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace AllocationQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaSalesAllocationsEx : BaseEntity<AsycudaSalesAllocationsEx>, ITrackable, IEquatable<AsycudaSalesAllocationsEx>
    {
        [DataMember]
        public int AllocationId
		{ 
		    get { return _AllocationId; }
			set
			{
			    if (value == _AllocationId) return;
				_AllocationId = value;
				NotifyPropertyChanged();//m => this.AllocationId
			}
		}
        private int _AllocationId;

        [DataMember]
        public Nullable<double> TotalValue
		{ 
		    get { return _TotalValue; }
			set
			{
			    if (value == _TotalValue) return;
				_TotalValue = value;
				NotifyPropertyChanged();//m => this.TotalValue
			}
		}
        private Nullable<double> _TotalValue;

        [DataMember]
        public Nullable<double> AllocatedValue
		{ 
		    get { return _AllocatedValue; }
			set
			{
			    if (value == _AllocatedValue) return;
				_AllocatedValue = value;
				NotifyPropertyChanged();//m => this.AllocatedValue
			}
		}
        private Nullable<double> _AllocatedValue;

        [DataMember]
        public string Status
		{ 
		    get { return _Status; }
			set
			{
			    if (value == _Status) return;
				_Status = value;
				NotifyPropertyChanged();//m => this.Status
			}
		}
        private string _Status;

        [DataMember]
        public Nullable<double> QtyAllocated
		{ 
		    get { return _QtyAllocated; }
			set
			{
			    if (value == _QtyAllocated) return;
				_QtyAllocated = value;
				NotifyPropertyChanged();//m => this.QtyAllocated
			}
		}
        private Nullable<double> _QtyAllocated;

        [DataMember]
        public Nullable<int> xLineNumber
		{ 
		    get { return _xLineNumber; }
			set
			{
			    if (value == _xLineNumber) return;
				_xLineNumber = value;
				NotifyPropertyChanged();//m => this.xLineNumber
			}
		}
        private Nullable<int> _xLineNumber;

        [DataMember]
        public int PreviousItem_Id
		{ 
		    get { return _PreviousItem_Id; }
			set
			{
			    if (value == _PreviousItem_Id) return;
				_PreviousItem_Id = value;
				NotifyPropertyChanged();//m => this.PreviousItem_Id
			}
		}
        private int _PreviousItem_Id;

        [DataMember]
        public System.DateTime InvoiceDate
		{ 
		    get { return _InvoiceDate; }
			set
			{
			    if (value == _InvoiceDate) return;
				_InvoiceDate = value;
				NotifyPropertyChanged();//m => this.InvoiceDate
			}
		}
        private System.DateTime _InvoiceDate;

        [DataMember]
        public Nullable<double> SalesQuantity
		{ 
		    get { return _SalesQuantity; }
			set
			{
			    if (value == _SalesQuantity) return;
				_SalesQuantity = value;
				NotifyPropertyChanged();//m => this.SalesQuantity
			}
		}
        private Nullable<double> _SalesQuantity;

        [DataMember]
        public Nullable<double> SalesQtyAllocated
		{ 
		    get { return _SalesQtyAllocated; }
			set
			{
			    if (value == _SalesQtyAllocated) return;
				_SalesQtyAllocated = value;
				NotifyPropertyChanged();//m => this.SalesQtyAllocated
			}
		}
        private Nullable<double> _SalesQtyAllocated;

        [DataMember]
        public string InvoiceNo
		{ 
		    get { return _InvoiceNo; }
			set
			{
			    if (value == _InvoiceNo) return;
				_InvoiceNo = value;
				NotifyPropertyChanged();//m => this.InvoiceNo
			}
		}
        private string _InvoiceNo;

        [DataMember]
        public string ItemNumber
		{ 
		    get { return _ItemNumber; }
			set
			{
			    if (value == _ItemNumber) return;
				_ItemNumber = value;
				NotifyPropertyChanged();//m => this.ItemNumber
			}
		}
        private string _ItemNumber;

        [DataMember]
        public string ItemDescription
		{ 
		    get { return _ItemDescription; }
			set
			{
			    if (value == _ItemDescription) return;
				_ItemDescription = value;
				NotifyPropertyChanged();//m => this.ItemDescription
			}
		}
        private string _ItemDescription;

        [DataMember]
        public int EntryDataDetailsId
		{ 
		    get { return _EntryDataDetailsId; }
			set
			{
			    if (value == _EntryDataDetailsId) return;
				_EntryDataDetailsId = value;
				NotifyPropertyChanged();//m => this.EntryDataDetailsId
			}
		}
        private int _EntryDataDetailsId;

        [DataMember]
        public int xBond_Item_Id
		{ 
		    get { return _xBond_Item_Id; }
			set
			{
			    if (value == _xBond_Item_Id) return;
				_xBond_Item_Id = value;
				NotifyPropertyChanged();//m => this.xBond_Item_Id
			}
		}
        private int _xBond_Item_Id;

        [DataMember]
        public string DutyFreePaid
		{ 
		    get { return _DutyFreePaid; }
			set
			{
			    if (value == _DutyFreePaid) return;
				_DutyFreePaid = value;
				NotifyPropertyChanged();//m => this.DutyFreePaid
			}
		}
        private string _DutyFreePaid;

        [DataMember]
        public string pCNumber
		{ 
		    get { return _pCNumber; }
			set
			{
			    if (value == _pCNumber) return;
				_pCNumber = value;
				NotifyPropertyChanged();//m => this.pCNumber
			}
		}
        private string _pCNumber;

        [DataMember]
        public Nullable<System.DateTime> pRegistrationDate
		{ 
		    get { return _pRegistrationDate; }
			set
			{
			    if (value == _pRegistrationDate) return;
				_pRegistrationDate = value;
				NotifyPropertyChanged();//m => this.pRegistrationDate
			}
		}
        private Nullable<System.DateTime> _pRegistrationDate;

        [DataMember]
        public Nullable<double> pQuantity
		{ 
		    get { return _pQuantity; }
			set
			{
			    if (value == _pQuantity) return;
				_pQuantity = value;
				NotifyPropertyChanged();//m => this.pQuantity
			}
		}
        private Nullable<double> _pQuantity;

        [DataMember]
        public Nullable<double> pQtyAllocated
		{ 
		    get { return _pQtyAllocated; }
			set
			{
			    if (value == _pQtyAllocated) return;
				_pQtyAllocated = value;
				NotifyPropertyChanged();//m => this.pQtyAllocated
			}
		}
        private Nullable<double> _pQtyAllocated;

        [DataMember]
        public Nullable<double> PiQuantity
		{ 
		    get { return _PiQuantity; }
			set
			{
			    if (value == _PiQuantity) return;
				_PiQuantity = value;
				NotifyPropertyChanged();//m => this.PiQuantity
			}
		}
        private Nullable<double> _PiQuantity;

        [DataMember]
        public string xCNumber
		{ 
		    get { return _xCNumber; }
			set
			{
			    if (value == _xCNumber) return;
				_xCNumber = value;
				NotifyPropertyChanged();//m => this.xCNumber
			}
		}
        private string _xCNumber;

        [DataMember]
        public Nullable<System.DateTime> xRegistrationDate
		{ 
		    get { return _xRegistrationDate; }
			set
			{
			    if (value == _xRegistrationDate) return;
				_xRegistrationDate = value;
				NotifyPropertyChanged();//m => this.xRegistrationDate
			}
		}
        private Nullable<System.DateTime> _xRegistrationDate;

        [DataMember]
        public Nullable<int> pLineNumber
		{ 
		    get { return _pLineNumber; }
			set
			{
			    if (value == _pLineNumber) return;
				_pLineNumber = value;
				NotifyPropertyChanged();//m => this.pLineNumber
			}
		}
        private Nullable<int> _pLineNumber;

        [DataMember]
        public Nullable<int> xASYCUDA_Id
		{ 
		    get { return _xASYCUDA_Id; }
			set
			{
			    if (value == _xASYCUDA_Id) return;
				_xASYCUDA_Id = value;
				NotifyPropertyChanged();//m => this.xASYCUDA_Id
			}
		}
        private Nullable<int> _xASYCUDA_Id;

        [DataMember]
        public Nullable<int> pASYCUDA_Id
		{ 
		    get { return _pASYCUDA_Id; }
			set
			{
			    if (value == _pASYCUDA_Id) return;
				_pASYCUDA_Id = value;
				NotifyPropertyChanged();//m => this.pASYCUDA_Id
			}
		}
        private Nullable<int> _pASYCUDA_Id;

        [DataMember]
        public Nullable<double> Cost
		{ 
		    get { return _Cost; }
			set
			{
			    if (value == _Cost) return;
				_Cost = value;
				NotifyPropertyChanged();//m => this.Cost
			}
		}
        private Nullable<double> _Cost;

        [DataMember]
        public Nullable<double> Total_CIF_itm
		{ 
		    get { return _Total_CIF_itm; }
			set
			{
			    if (value == _Total_CIF_itm) return;
				_Total_CIF_itm = value;
				NotifyPropertyChanged();//m => this.Total_CIF_itm
			}
		}
        private Nullable<double> _Total_CIF_itm;

        [DataMember]
        public Nullable<double> DutyLiability
		{ 
		    get { return _DutyLiability; }
			set
			{
			    if (value == _DutyLiability) return;
				_DutyLiability = value;
				NotifyPropertyChanged();//m => this.DutyLiability
			}
		}
        private Nullable<double> _DutyLiability;

        [DataMember]
        public double TaxAmount
		{ 
		    get { return _TaxAmount; }
			set
			{
			    if (value == _TaxAmount) return;
				_TaxAmount = value;
				NotifyPropertyChanged();//m => this.TaxAmount
			}
		}
        private double _TaxAmount;

        [DataMember]
        public Nullable<bool> pIsAssessed
		{ 
		    get { return _pIsAssessed; }
			set
			{
			    if (value == _pIsAssessed) return;
				_pIsAssessed = value;
				NotifyPropertyChanged();//m => this.pIsAssessed
			}
		}
        private Nullable<bool> _pIsAssessed;

        [DataMember]
        public Nullable<bool> DoNotAllocateSales
		{ 
		    get { return _DoNotAllocateSales; }
			set
			{
			    if (value == _DoNotAllocateSales) return;
				_DoNotAllocateSales = value;
				NotifyPropertyChanged();//m => this.DoNotAllocateSales
			}
		}
        private Nullable<bool> _DoNotAllocateSales;

        [DataMember]
        public Nullable<bool> DoNotAllocatePreviousEntry
		{ 
		    get { return _DoNotAllocatePreviousEntry; }
			set
			{
			    if (value == _DoNotAllocatePreviousEntry) return;
				_DoNotAllocatePreviousEntry = value;
				NotifyPropertyChanged();//m => this.DoNotAllocatePreviousEntry
			}
		}
        private Nullable<bool> _DoNotAllocatePreviousEntry;

        [DataMember]
        public Nullable<int> SANumber
		{ 
		    get { return _SANumber; }
			set
			{
			    if (value == _SANumber) return;
				_SANumber = value;
				NotifyPropertyChanged();//m => this.SANumber
			}
		}
        private Nullable<int> _SANumber;

        [DataMember]
        public string pReferenceNumber
		{ 
		    get { return _pReferenceNumber; }
			set
			{
			    if (value == _pReferenceNumber) return;
				_pReferenceNumber = value;
				NotifyPropertyChanged();//m => this.pReferenceNumber
			}
		}
        private string _pReferenceNumber;

        [DataMember]
        public string xReferenceNumber
		{ 
		    get { return _xReferenceNumber; }
			set
			{
			    if (value == _xReferenceNumber) return;
				_xReferenceNumber = value;
				NotifyPropertyChanged();//m => this.xReferenceNumber
			}
		}
        private string _xReferenceNumber;

        [DataMember]
        public string TariffCode
		{ 
		    get { return _TariffCode; }
			set
			{
			    if (value == _TariffCode) return;
				_TariffCode = value;
				NotifyPropertyChanged();//m => this.TariffCode
			}
		}
        private string _TariffCode;

        [DataMember]
        public Nullable<bool> Invalid
		{ 
		    get { return _Invalid; }
			set
			{
			    if (value == _Invalid) return;
				_Invalid = value;
				NotifyPropertyChanged();//m => this.Invalid
			}
		}
        private Nullable<bool> _Invalid;

        [DataMember]
        public Nullable<System.DateTime> pExpiryDate
		{ 
		    get { return _pExpiryDate; }
			set
			{
			    if (value == _pExpiryDate) return;
				_pExpiryDate = value;
				NotifyPropertyChanged();//m => this.pExpiryDate
			}
		}
        private Nullable<System.DateTime> _pExpiryDate;

        [DataMember]
        public string CustomerName
		{ 
		    get { return _CustomerName; }
			set
			{
			    if (value == _CustomerName) return;
				_CustomerName = value;
				NotifyPropertyChanged();//m => this.CustomerName
			}
		}
        private string _CustomerName;

        [DataMember]
        public string pTariffCode
		{ 
		    get { return _pTariffCode; }
			set
			{
			    if (value == _pTariffCode) return;
				_pTariffCode = value;
				NotifyPropertyChanged();//m => this.pTariffCode
			}
		}
        private string _pTariffCode;

        [DataMember]
        public string pItemNumber
		{ 
		    get { return _pItemNumber; }
			set
			{
			    if (value == _pItemNumber) return;
				_pItemNumber = value;
				NotifyPropertyChanged();//m => this.pItemNumber
			}
		}
        private string _pItemNumber;

        [DataMember]
        public Nullable<double> xQuantity
		{ 
		    get { return _xQuantity; }
			set
			{
			    if (value == _xQuantity) return;
				_xQuantity = value;
				NotifyPropertyChanged();//m => this.xQuantity
			}
		}
        private Nullable<double> _xQuantity;

        [DataMember]
        public Nullable<double> SalesFactor
		{ 
		    get { return _SalesFactor; }
			set
			{
			    if (value == _SalesFactor) return;
				_SalesFactor = value;
				NotifyPropertyChanged();//m => this.SalesFactor
			}
		}
        private Nullable<double> _SalesFactor;

        [DataMember]
        public string WarehouseError
		{ 
		    get { return _WarehouseError; }
			set
			{
			    if (value == _WarehouseError) return;
				_WarehouseError = value;
				NotifyPropertyChanged();//m => this.WarehouseError
			}
		}
        private string _WarehouseError;

        [DataMember]
        public Nullable<System.DateTime> AssessmentDate
		{ 
		    get { return _AssessmentDate; }
			set
			{
			    if (value == _AssessmentDate) return;
				_AssessmentDate = value;
				NotifyPropertyChanged();//m => this.AssessmentDate
			}
		}
        private Nullable<System.DateTime> _AssessmentDate;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public string xStatus
		{ 
		    get { return _xStatus; }
			set
			{
			    if (value == _xStatus) return;
				_xStatus = value;
				NotifyPropertyChanged();//m => this.xStatus
			}
		}
        private string _xStatus;

        [DataMember]
        public Nullable<int> SalesLineNumber
		{ 
		    get { return _SalesLineNumber; }
			set
			{
			    if (value == _SalesLineNumber) return;
				_SalesLineNumber = value;
				NotifyPropertyChanged();//m => this.SalesLineNumber
			}
		}
        private Nullable<int> _SalesLineNumber;

       
   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<AsycudaSalesAllocationsEx>.Equals(AsycudaSalesAllocationsEx other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



