// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace EntryDataQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class AsycudaDocumentSetEntryData : BaseEntity<AsycudaDocumentSetEntryData>, ITrackable, IEquatable<AsycudaDocumentSetEntryData>
    {
        [DataMember]
        public int AsycudaDocumentSetId
		{ 
		    get { return _AsycudaDocumentSetId; }
			set
			{
			    if (value == _AsycudaDocumentSetId) return;
				_AsycudaDocumentSetId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetId
			}
		}
        private int _AsycudaDocumentSetId;

        [DataMember]
        public string EntryDataId
		{ 
		    get { return _EntryDataId; }
			set
			{
			    if (value == _EntryDataId) return;
				_EntryDataId = value;
				NotifyPropertyChanged();//m => this.EntryDataId
			}
		}
        private string _EntryDataId;

        [DataMember]
        public int Id
		{ 
		    get { return _Id; }
			set
			{
			    if (value == _Id) return;
				_Id = value;
				NotifyPropertyChanged();//m => this.Id
			}
		}
        private int _Id;

       
        [DataMember]
        public EntryDataEx EntryDataEx
		{
		    get { return _EntryDataEx; }
			set
			{
			    if (value == _EntryDataEx) return;
				_EntryDataEx = value;
                EntryDataExChangeTracker = _EntryDataEx == null ? null
                    : new ChangeTrackingCollection<EntryDataEx> { _EntryDataEx };
				NotifyPropertyChanged();//m => this.EntryDataEx
			}
		}
        private EntryDataEx _EntryDataEx;
        private ChangeTrackingCollection<EntryDataEx> EntryDataExChangeTracker { get; set; }

        [DataMember]
        public EntryData EntryData
		{
		    get { return _EntryData; }
			set
			{
			    if (value == _EntryData) return;
				_EntryData = value;
                EntryDataChangeTracker = _EntryData == null ? null
                    : new ChangeTrackingCollection<EntryData> { _EntryData };
				NotifyPropertyChanged();//m => this.EntryData
			}
		}
        private EntryData _EntryData;
        private ChangeTrackingCollection<EntryData> EntryDataChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<AsycudaDocumentSetEntryData>.Equals(AsycudaDocumentSetEntryData other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



