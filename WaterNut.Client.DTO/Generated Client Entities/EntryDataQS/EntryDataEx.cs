// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;


using Core.Common.Client.DTO;
using TrackableEntities;
using TrackableEntities.Client;

namespace EntryDataQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class EntryDataEx : BaseEntity<EntryDataEx>, ITrackable, IEquatable<EntryDataEx>
    {
        [DataMember]
        public string Type
		{ 
		    get { return _Type; }
			set
			{
			    if (value == _Type) return;
				_Type = value;
				NotifyPropertyChanged();//m => this.Type
			}
		}
        private string _Type;

        [DataMember]
        public System.DateTime InvoiceDate
		{ 
		    get { return _InvoiceDate; }
			set
			{
			    if (value == _InvoiceDate) return;
				_InvoiceDate = value;
				NotifyPropertyChanged();//m => this.InvoiceDate
			}
		}
        private System.DateTime _InvoiceDate;

        [DataMember]
        public string InvoiceNo
		{ 
		    get { return _InvoiceNo; }
			set
			{
			    if (value == _InvoiceNo) return;
				_InvoiceNo = value;
				NotifyPropertyChanged();//m => this.InvoiceNo
			}
		}
        private string _InvoiceNo;

        [DataMember]
        public Nullable<int> ImportedLines
		{ 
		    get { return _ImportedLines; }
			set
			{
			    if (value == _ImportedLines) return;
				_ImportedLines = value;
				NotifyPropertyChanged();//m => this.ImportedLines
			}
		}
        private Nullable<int> _ImportedLines;

        [DataMember]
        public Nullable<int> TotalLines
		{ 
		    get { return _TotalLines; }
			set
			{
			    if (value == _TotalLines) return;
				_TotalLines = value;
				NotifyPropertyChanged();//m => this.TotalLines
			}
		}
        private Nullable<int> _TotalLines;

        [DataMember]
        public string Currency
		{ 
		    get { return _Currency; }
			set
			{
			    if (value == _Currency) return;
				_Currency = value;
				NotifyPropertyChanged();//m => this.Currency
			}
		}
        private string _Currency;

        [DataMember]
        public int ApplicationSettingsId
		{ 
		    get { return _ApplicationSettingsId; }
			set
			{
			    if (value == _ApplicationSettingsId) return;
				_ApplicationSettingsId = value;
				NotifyPropertyChanged();//m => this.ApplicationSettingsId
			}
		}
        private int _ApplicationSettingsId;

        [DataMember]
        public string DutyFreePaid
		{ 
		    get { return _DutyFreePaid; }
			set
			{
			    if (value == _DutyFreePaid) return;
				_DutyFreePaid = value;
				NotifyPropertyChanged();//m => this.DutyFreePaid
			}
		}
        private string _DutyFreePaid;

        [DataMember]
        public Nullable<int> EmailId
		{ 
		    get { return _EmailId; }
			set
			{
			    if (value == _EmailId) return;
				_EmailId = value;
				NotifyPropertyChanged();//m => this.EmailId
			}
		}
        private Nullable<int> _EmailId;

        [DataMember]
        public Nullable<int> FileTypeId
		{ 
		    get { return _FileTypeId; }
			set
			{
			    if (value == _FileTypeId) return;
				_FileTypeId = value;
				NotifyPropertyChanged();//m => this.FileTypeId
			}
		}
        private Nullable<int> _FileTypeId;

        [DataMember]
        public Nullable<double> InvoiceTotal
		{ 
		    get { return _InvoiceTotal; }
			set
			{
			    if (value == _InvoiceTotal) return;
				_InvoiceTotal = value;
				NotifyPropertyChanged();//m => this.InvoiceTotal
			}
		}
        private Nullable<double> _InvoiceTotal;

        [DataMember]
        public string SupplierCode
		{ 
		    get { return _SupplierCode; }
			set
			{
			    if (value == _SupplierCode) return;
				_SupplierCode = value;
				NotifyPropertyChanged();//m => this.SupplierCode
			}
		}
        private string _SupplierCode;

        [DataMember]
        public Nullable<double> ImportedTotal
		{ 
		    get { return _ImportedTotal; }
			set
			{
			    if (value == _ImportedTotal) return;
				_ImportedTotal = value;
				NotifyPropertyChanged();//m => this.ImportedTotal
			}
		}
        private Nullable<double> _ImportedTotal;

        [DataMember]
        public double ExpectedTotal
		{ 
		    get { return _ExpectedTotal; }
			set
			{
			    if (value == _ExpectedTotal) return;
				_ExpectedTotal = value;
				NotifyPropertyChanged();//m => this.ExpectedTotal
			}
		}
        private double _ExpectedTotal;

        [DataMember]
        public Nullable<int> ClassifiedLines
		{ 
		    get { return _ClassifiedLines; }
			set
			{
			    if (value == _ClassifiedLines) return;
				_ClassifiedLines = value;
				NotifyPropertyChanged();//m => this.ClassifiedLines
			}
		}
        private Nullable<int> _ClassifiedLines;

        [DataMember]
        public int AsycudaDocumentSetId
		{ 
		    get { return _AsycudaDocumentSetId; }
			set
			{
			    if (value == _AsycudaDocumentSetId) return;
				_AsycudaDocumentSetId = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSetId
			}
		}
        private int _AsycudaDocumentSetId;

        [DataMember]
        public double TotalInternalFreight
		{ 
		    get { return _TotalInternalFreight; }
			set
			{
			    if (value == _TotalInternalFreight) return;
				_TotalInternalFreight = value;
				NotifyPropertyChanged();//m => this.TotalInternalFreight
			}
		}
        private double _TotalInternalFreight;

        [DataMember]
        public double TotalInternalInsurance
		{ 
		    get { return _TotalInternalInsurance; }
			set
			{
			    if (value == _TotalInternalInsurance) return;
				_TotalInternalInsurance = value;
				NotifyPropertyChanged();//m => this.TotalInternalInsurance
			}
		}
        private double _TotalInternalInsurance;

        [DataMember]
        public double TotalOtherCost
		{ 
		    get { return _TotalOtherCost; }
			set
			{
			    if (value == _TotalOtherCost) return;
				_TotalOtherCost = value;
				NotifyPropertyChanged();//m => this.TotalOtherCost
			}
		}
        private double _TotalOtherCost;

        [DataMember]
        public double TotalDeductions
		{ 
		    get { return _TotalDeductions; }
			set
			{
			    if (value == _TotalDeductions) return;
				_TotalDeductions = value;
				NotifyPropertyChanged();//m => this.TotalDeductions
			}
		}
        private double _TotalDeductions;

        [DataMember]
        public int EntryData_Id
		{ 
		    get { return _EntryData_Id; }
			set
			{
			    if (value == _EntryData_Id) return;
				_EntryData_Id = value;
				NotifyPropertyChanged();//m => this.EntryData_Id
			}
		}
        private int _EntryData_Id;

        [DataMember]
        public double TotalFreight
		{ 
		    get { return _TotalFreight; }
			set
			{
			    if (value == _TotalFreight) return;
				_TotalFreight = value;
				NotifyPropertyChanged();//m => this.TotalFreight
			}
		}
        private double _TotalFreight;

        [DataMember]
        public double Totals
		{ 
		    get { return _Totals; }
			set
			{
			    if (value == _Totals) return;
				_Totals = value;
				NotifyPropertyChanged();//m => this.Totals
			}
		}
        private double _Totals;

        [DataMember]
        public string SourceFile
		{ 
		    get { return _SourceFile; }
			set
			{
			    if (value == _SourceFile) return;
				_SourceFile = value;
				NotifyPropertyChanged();//m => this.SourceFile
			}
		}
        private string _SourceFile;

        [DataMember]
        public int Packages
		{ 
		    get { return _Packages; }
			set
			{
			    if (value == _Packages) return;
				_Packages = value;
				NotifyPropertyChanged();//m => this.Packages
			}
		}
        private int _Packages;

       
        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentSetEntryData> AsycudaDocumentSets
		{
		    get { return _AsycudaDocumentSets; }
			set
			{
			    if (Equals(value, _AsycudaDocumentSets)) return;
				_AsycudaDocumentSets = value;
				NotifyPropertyChanged();//m => this.AsycudaDocumentSets
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentSetEntryData> _AsycudaDocumentSets = new ChangeTrackingCollection<AsycudaDocumentSetEntryData>();

        [DataMember]
        public ChangeTrackingCollection<AsycudaDocumentEntryData> AsycudaDocuments
		{
		    get { return _AsycudaDocuments; }
			set
			{
			    if (Equals(value, _AsycudaDocuments)) return;
				_AsycudaDocuments = value;
				NotifyPropertyChanged();//m => this.AsycudaDocuments
			}
		}
        private ChangeTrackingCollection<AsycudaDocumentEntryData> _AsycudaDocuments = new ChangeTrackingCollection<AsycudaDocumentEntryData>();

        [DataMember]
        public ChangeTrackingCollection<EntryDataDetailsEx> EntryDataDetailsExs
		{
		    get { return _EntryDataDetailsExs; }
			set
			{
			    if (Equals(value, _EntryDataDetailsExs)) return;
				_EntryDataDetailsExs = value;
				NotifyPropertyChanged();//m => this.EntryDataDetailsExs
			}
		}
        private ChangeTrackingCollection<EntryDataDetailsEx> _EntryDataDetailsExs = new ChangeTrackingCollection<EntryDataDetailsEx>();

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<EntryDataEx>.Equals(EntryDataEx other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



